{"updated_at": "2013-08-08T22:33:05Z", "repo": "rails", "created_at": "2013-08-08T22:30:30Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/22363171", "id": 22363171, "issue_url": "https://api.github.com/repos/rails/rails/issues/5966", "issue_id": 5966, "user": {"repos_url": "https://api.github.com/users/shipstar/repos", "type": "User", "html_url": "https://github.com/shipstar", "starred_url": "https://api.github.com/users/shipstar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shipstar/subscriptions", "following_url": "https://api.github.com/users/shipstar/following{/other_user}", "gravatar_id": "3d65adc834c285efddfc6e6edb32b5b1", "organizations_url": "https://api.github.com/users/shipstar/orgs", "url": "https://api.github.com/users/shipstar", "gists_url": "https://api.github.com/users/shipstar/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/3d65adc834c285efddfc6e6edb32b5b1?d=https%3A%2F%2Fidenticons.github.com%2Fe0a65a3c8a3b9653d3c57b7f80cee121.png", "id": 115918, "events_url": "https://api.github.com/users/shipstar/events{/privacy}", "login": "shipstar", "received_events_url": "https://api.github.com/users/shipstar/received_events", "followers_url": "https://api.github.com/users/shipstar/followers"}, "body": "This change is causing me all sorts of pain right now.\r\n\r\nI'm working on a tool to help companies onboard new employees. An admin at the company should be able to create user accounts for new employees and immediately start adding training materials. These have to be full user accounts rather than invitations to allow the right materials to be hung off of the User record. These new user accounts don't have passwords associated with them, but the user creates a password upon signing up.\r\n\r\nWe were using `has_secure_password` as follows on Rails 3.2.x (with a monkey patch to allow `validations: false`):\r\n\r\n    class User < ActiveRecord::Base\r\n      has_secure_password validations: false\r\n\r\n      validates :password, presence: true, length: { minimum: 6 }, unless: ->(user) { user.password.nil? }\r\n      validates_confirmation_of :password, if: ->(user) { user.password.present? }\r\n    end\r\n\r\nThis allows for password to be nil unless we explicitly add a password form field (when accepting invitations or creating new users in ActiveAdmin, for example).\r\n\r\nWhat was the use case for implementing this change in the first place? If this isn't a supported use case for has_secure_password, I'll either monkey patch this particular behavior or look into Sorcery/Devise/etc.\r\n\r\nThanks!\r\n\r\nEDIT: More reasonably, I can just override the `password=` method.", "_id": {"$oid": "523810b9bd3543c15100d6f3"}, "html_url": "https://github.com/rails/rails/pull/5966#issuecomment-22363171"}
