{"issue_url": "https://api.github.com/repos/rails/rails/issues/4196", "repo": "rails", "body": "Hi,\r\n\r\nnot sure if this is the best way to go about it - I thought about it a little and I think that it is a good idea to \"marshal\" all values in Cache::Entry and let the actual CacheStore implementation take care of serialization.\r\n\r\nThat would mean, that Cache::FileStore should not do `Marshal.load` and `Marshal.dump` - because this is actually not necessary (since `@value` has already been marshaled by `Cache::Entry`) any more, only serialization should be done by the cache store implementation (see memcache client, and dalli store).\r\n\r\nAlso, ZLib::Inflate/Deflate should be performed after a value has been marshaled.\r\n\r\nWhat do you think?", "_id": {"$oid": "52382a15bd3543c15100f0dc"}, "issue_id": 4196, "url": "https://api.github.com/repos/rails/rails/issues/comments/3276155", "html_url": "https://github.com/rails/rails/pull/4196#issuecomment-3276155", "updated_at": "2011-12-26T18:44:57Z", "user": {"subscriptions_url": "https://api.github.com/users/juwalter/subscriptions", "events_url": "https://api.github.com/users/juwalter/events{/privacy}", "repos_url": "https://api.github.com/users/juwalter/repos", "gists_url": "https://api.github.com/users/juwalter/gists{/gist_id}", "url": "https://api.github.com/users/juwalter", "login": "juwalter", "gravatar_id": "958d54812e4222930892cc1bed25e702", "html_url": "https://github.com/juwalter", "following_url": "https://api.github.com/users/juwalter/following{/other_user}", "received_events_url": "https://api.github.com/users/juwalter/received_events", "organizations_url": "https://api.github.com/users/juwalter/orgs", "avatar_url": "https://1.gravatar.com/avatar/958d54812e4222930892cc1bed25e702?d=https%3A%2F%2Fidenticons.github.com%2F3f10cca89b8da32aeba9431656bf334a.png", "starred_url": "https://api.github.com/users/juwalter/starred{/owner}{/repo}", "id": 179870, "followers_url": "https://api.github.com/users/juwalter/followers", "type": "User"}, "created_at": "2011-12-26T18:44:57Z", "id": 3276155, "owner": "rails"}
