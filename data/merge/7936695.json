{"issue_url": "https://api.github.com/repos/rails/rails/issues/7422", "repo": "rails", "body": "But if you look at the actual use cases this was extracted from, they don't justify an external class. They're too small. They're usually just a single line or two. Moving them into their own classes and putting those classes outside of the routing.rb file doesn't clarify things in my mind.\r\n\r\nThis has similarities to the \"actions should be classes\" debate. I don't think they should. There's not enough there to justify it and it makes things harder to follow.\r\n\r\nAgain, though, I very much appreciate this level of debate, Ernie. It's focused around real code alternatives, so it's concrete. Not abstract, hand-wavy \"I've seen teams use this wrong!\" kind of arguments. Thank you for that.\r\n\r\n\r\nOn Aug 22, 2012, at 9:47 AM, Ernie Miller <notifications@github.com> wrote:\r\n\r\n> @dhh At a minimum, it allows us to shorten the routes file considerably by moving concerns out into their own separate files (not shown here).\r\n> \r\n> That would seem to pass the basic before/after test you're proposing. leading to a header in the routes file that read like:\r\n> \r\n>   concerns :commentable, Commentable\r\n> \r\n>   \r\n> concerns :reviewable, ReviewableConcern.new(some: 'initializaton params')\r\n> With a minor modification, it could also eliminate the need for the second parameter altogether, via the same classifying logic as is used elsewhere,\r\n> \r\n> Beyond this, there is strong preference in the Ruby community for implementations that allow duck-typed objects to be swapped in where appropriate.\r\n> \r\n> Consider the differences between CarrierWave and Paperclip, for instance. The former allows for much more idiomatic separation of code, reducing the amount of noise we have to read through in order to parse the basics, and points us to a specific location to find out more should we so choose.\r\n> \r\n> It's less about simplifying the writing of the code (though some would argue that anything that allows us to break things into a separate object if we so want will be a win) and more about a further \"improvement\" to readability, if we're going to go down this route. (pun not intended, but awesome)\r\n> \r\n> \u2014\r\n> Reply to this email directly or view it on GitHub.\r\n> \r\n> ", "_id": {"$oid": "5237fbc3bd3543c15100b86a"}, "issue_id": 7422, "url": "https://api.github.com/repos/rails/rails/issues/comments/7936695", "html_url": "https://github.com/rails/rails/pull/7422#issuecomment-7936695", "updated_at": "2012-08-22T14:52:02Z", "user": {"subscriptions_url": "https://api.github.com/users/dhh/subscriptions", "events_url": "https://api.github.com/users/dhh/events{/privacy}", "repos_url": "https://api.github.com/users/dhh/repos", "gists_url": "https://api.github.com/users/dhh/gists{/gist_id}", "url": "https://api.github.com/users/dhh", "login": "dhh", "gravatar_id": "ed9635566b34ade32274f510f0f9a6d2", "html_url": "https://github.com/dhh", "following_url": "https://api.github.com/users/dhh/following{/other_user}", "received_events_url": "https://api.github.com/users/dhh/received_events", "organizations_url": "https://api.github.com/users/dhh/orgs", "avatar_url": "https://2.gravatar.com/avatar/ed9635566b34ade32274f510f0f9a6d2?d=https%3A%2F%2Fidenticons.github.com%2Fcdcb2f5c7b071143529ef7f2705dfbc4.png", "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}", "id": 2741, "followers_url": "https://api.github.com/users/dhh/followers", "type": "User"}, "created_at": "2012-08-22T14:52:02Z", "id": 7936695, "owner": "rails"}
