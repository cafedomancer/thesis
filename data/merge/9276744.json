{"updated_at": "2012-10-09T20:00:33Z", "repo": "rails", "created_at": "2012-10-09T20:00:33Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/9276744", "id": 9276744, "issue_url": "https://api.github.com/repos/rails/rails/issues/7878", "issue_id": 7878, "user": {"repos_url": "https://api.github.com/users/stevenharman/repos", "type": "User", "html_url": "https://github.com/stevenharman", "starred_url": "https://api.github.com/users/stevenharman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevenharman/subscriptions", "following_url": "https://api.github.com/users/stevenharman/following{/other_user}", "gravatar_id": "3585262a963f04894a749aabccd99a86", "organizations_url": "https://api.github.com/users/stevenharman/orgs", "url": "https://api.github.com/users/stevenharman", "gists_url": "https://api.github.com/users/stevenharman/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/3585262a963f04894a749aabccd99a86?d=https%3A%2F%2Fidenticons.github.com%2Fb98004311446c60521a8831075423c20.png", "id": 48658, "events_url": "https://api.github.com/users/stevenharman/events{/privacy}", "login": "stevenharman", "received_events_url": "https://api.github.com/users/stevenharman/received_events", "followers_url": "https://api.github.com/users/stevenharman/followers"}, "body": "My workflow tends to look something like:\r\n\r\n1. write acceptance test in high-level prose, from the perspective of the consumer.\r\n1. when there is an embedded customer, review the test with them. Lacking that, I put on my customer hat and do my best to think like a consumer.\r\n1. start turning the test green by implementing the prose, outside-in. (For me this often means rspec driving capybara, with numbers of lower-level developer tests as I move down through my feedback loops.)\r\n1. when the outer test goes green, I'm done. Review the test again (with my customer hat on if necessary) to make sure my expectations are still met.\r\n\r\nAfter that the test becomes an artifact and is mostly used to as a regression safety net and to remind myself and others of the intention and desired value of the feature.\r\n\r\nAll of that said, I fully understand that others don't work that way. It seems @blowmage and I may have similar styles which is why we are advocating, or at least _not against_ the term _acceptance_. Perhaps others find the term too prescriptive?", "_id": {"$oid": "5237f7febd3543c15100b198"}, "html_url": "https://github.com/rails/rails/pull/7878#issuecomment-9276744"}
