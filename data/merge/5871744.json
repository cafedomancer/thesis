{"body": "For what it's worth, that same command fails against master (cb92efb) with both sqlite3 and postgresql:\n\n    $ ruby -w -I\"lib:test\" -e '[\"test/cases/associations/eager_test.rb\", \"test/cases/associations/join_model_test.rb\", \"test/cases/base_test.rb\"].each { |f| load f }'\n    Using sqlite3\n    /home/pat/.rbenv/versions/1.9.2-p290/lib/ruby/1.9.1/rexml/doctype.rb:255: warning: `+' after local variable is interpreted as binary operator\n    /home/pat/.rbenv/versions/1.9.2-p290/lib/ruby/1.9.1/rexml/doctype.rb:255: warning: even though it seems like unary operator\n    Run options: --seed 6037\n\n    # Running tests:\n\n    ....................................................................................................................................................................................................................................................S.....................................................................FF.........................................................................................................\n\n    Finished tests in 8.663860s, 48.5927 tests/s, 129.8497 assertions/s.\n\n      1) Failure:\n    test_eager_loading_with_conditions_on_join_model_preloads(EagerAssociationTest) [test/cases/associations/eager_test.rb:1015]:\n    3 instead of 2 queries were executed.\n    Queries:\n    SELECT \"authors\".* FROM \"authors\" INNER JOIN \"posts\" ON \"posts\".\"author_id\" = \"authors\".\"id\" INNER JOIN \"comments\" ON \"comments\".\"post_id\" = \"posts\".\"id\" WHERE (posts.title like 'Welcome%')\n              SELECT name\n              FROM sqlite_master\n              WHERE type = 'table' AND NOT name = 'sqlite_sequence'\n     AND name = \"author_addresses\"\n    SELECT \"author_addresses\".* FROM \"author_addresses\"  WHERE \"author_addresses\".\"id\" IN (1).\n    Expected: 2\n      Actual: 3\n\n      2) Failure:\n    test_eager_loading_with_conditions_on_joined_table_preloads(EagerAssociationTest) [test/cases/associations/eager_test.rb:977]:\n    6 instead of 2 queries were executed.\n    Queries:\n              SELECT name\n              FROM sqlite_master\n              WHERE type = 'table' AND NOT name = 'sqlite_sequence'\n     AND name = \"taggings\"\n    PRAGMA table_info(\"taggings\")\n              SELECT name\n              FROM sqlite_master\n              WHERE type = 'table' AND NOT name = 'sqlite_sequence'\n     AND name = \"tags\"\n    PRAGMA table_info(\"tags\")\n    SELECT \"posts\".* FROM \"posts\" INNER JOIN \"taggings\" ON \"taggings\".\"taggable_id\" = \"posts\".\"id\" AND \"taggings\".\"taggable_type\" = 'Post' INNER JOIN \"tags\" ON \"tags\".\"id\" = \"taggings\".\"tag_id\" WHERE (tags.name = 'General') ORDER BY posts.id\n    SELECT \"authors\".* FROM \"authors\"  WHERE \"authors\".\"id\" IN (1).\n    Expected: 2\n      Actual: 6\n\nI think the problem is unrelated to my patch.  It seems the tests are making assumption about what sort of table metadata has already been cached (sorry, I'm not too  familiar with the inner workings of ActiveRecord)?  If I modify the test `test_eager_loading_with_conditions_on_join_model_preloads` to run the query-under-test once outside the assert_queries(2), then a second time within assert_queries(2), the test passes.\n", "url": "https://api.github.com/repos/rails/rails/issues/comments/5871744", "created_at": "2012-05-23T12:41:07Z", "html_url": "https://github.com/rails/rails/pull/6416#issuecomment-5871744", "updated_at": "2012-05-23T12:41:07Z", "repo": "rails", "issue_id": 6416, "user": {"following_url": "https://api.github.com/users/pmahoney/following{/other_user}", "events_url": "https://api.github.com/users/pmahoney/events{/privacy}", "organizations_url": "https://api.github.com/users/pmahoney/orgs", "url": "https://api.github.com/users/pmahoney", "gists_url": "https://api.github.com/users/pmahoney/gists{/gist_id}", "html_url": "https://github.com/pmahoney", "subscriptions_url": "https://api.github.com/users/pmahoney/subscriptions", "avatar_url": "https://0.gravatar.com/avatar/27598e1b77ce41fb0bd8a6fc4a3715d4?d=https%3A%2F%2Fidenticons.github.com%2F55d630b2da03cc33c4e3f00c113d14d7.png", "repos_url": "https://api.github.com/users/pmahoney/repos", "received_events_url": "https://api.github.com/users/pmahoney/received_events", "gravatar_id": "27598e1b77ce41fb0bd8a6fc4a3715d4", "starred_url": "https://api.github.com/users/pmahoney/starred{/owner}{/repo}", "login": "pmahoney", "type": "User", "id": 103822, "followers_url": "https://api.github.com/users/pmahoney/followers"}, "owner": "rails", "_id": {"$oid": "523808b2bd3543c15100cc4f"}, "id": 5871744, "issue_url": "https://api.github.com/repos/rails/rails/issues/6416"}
