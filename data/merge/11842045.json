{"updated_at": "2013-01-03T12:24:15Z", "repo": "rails", "created_at": "2013-01-03T12:24:15Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/11842045", "id": 11842045, "issue_url": "https://api.github.com/repos/rails/rails/issues/8718", "issue_id": 8718, "user": {"repos_url": "https://api.github.com/users/jstirk/repos", "type": "User", "html_url": "https://github.com/jstirk", "starred_url": "https://api.github.com/users/jstirk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstirk/subscriptions", "following_url": "https://api.github.com/users/jstirk/following{/other_user}", "gravatar_id": "9155bf296c0cc5450b0b8edc82d149dd", "organizations_url": "https://api.github.com/users/jstirk/orgs", "url": "https://api.github.com/users/jstirk", "gists_url": "https://api.github.com/users/jstirk/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/9155bf296c0cc5450b0b8edc82d149dd?d=https%3A%2F%2Fidenticons.github.com%2Fb607aa5b2fd58dd860bfb55619389982.png", "id": 4892, "events_url": "https://api.github.com/users/jstirk/events{/privacy}", "login": "jstirk", "received_events_url": "https://api.github.com/users/jstirk/received_events", "followers_url": "https://api.github.com/users/jstirk/followers"}, "body": "I agree that AR case should *just work* (I had a failing spec in my app from exactly that case!), though in terms of intention it's a bit weird to set a field like that.\r\n\r\nI think the easiest implementation here would be for the fallback case use `.to_i` if `value` responds to it, otherwise `.id`. Best case it works, worst case they get undefined method `id' (which at least makes sense) or the id/object_id deprecation warning depending on version of ruby.\r\n\r\nHappy to make the change if you think it's worthwhile.", "_id": {"$oid": "5237f092bd3543c15100a2e0"}, "html_url": "https://github.com/rails/rails/pull/8718#issuecomment-11842045"}
