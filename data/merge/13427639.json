{"issue_url": "https://api.github.com/repos/rails/rails/issues/9207", "repo": "rails", "body": "I'm not sure if @tenderlove and @ncri have the same problem.  @tenderlove I think yours is happening because the quoting is applied in the predicate builder and the results of that go into where_values, and that's what gets used to instantiate the new object, if I'm reading the code correctly.\r\n\r\n```ruby\r\n    def where_values_hash\r\n      equalities = with_default_scope.where_values.grep(Arel::Nodes::Equality).find_all { |node|\r\n        node.left.relation.name == table_name\r\n      }\r\n\r\n      Hash[equalities.map { |where| [where.left.name, where.right] }]\r\n    end\r\n\r\n    def scope_for_create\r\n      @scope_for_create ||= where_values_hash.merge(create_with_value)\r\n    end\r\n```\r\n\r\nTherefore:\r\n\r\n```ruby\r\n    scope = Minivan.where(:minivan_id => 1234)\r\n    puts scope.where_values.inspect\r\n    mv = scope.first_or_initialize\r\n```\r\n\r\n[#<Arel::Nodes::Equality:0x10fabd140 @left=#<struct Arel::Attributes::Attribute relation=#<Arel::Table:0x10faeeab0 @table_alias=nil, @aliases=[], @name=\"minivans\", @columns=nil, @primary_key=nil, @engine=Minivan(minivan_id: string, name: string, speedometer_id: string, color: string)>, name=:minivan_id>, @right=\"'1234'\">]\r\n\r\n/Users/will/youdo/rails/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb:44:in `quote'\r\n/Users/will/youdo/rails/activerecord/lib/active_record/relation/predicate_builder.rb:57:in `build_from_hash'\r\n/Users/will/youdo/rails/activerecord/lib/active_record/relation/query_methods.rb:327:in `map'\r\n/Users/will/youdo/rails/activerecord/lib/active_record/relation/predicate_builder.rb:4:in `each'\r\n/Users/will/youdo/rails/activerecord/lib/active_record/relation/predicate_builder.rb:4:in `map'\r\n/Users/will/youdo/rails/activerecord/lib/active_record/relation/predicate_builder.rb:4:in `build_from_hash'\r\n/Users/will/youdo/rails/activerecord/lib/active_record/relation/query_methods.rb:327:in `build_where'\r\n/Users/will/youdo/rails/activerecord/lib/active_record/relation/query_methods.rb:136:in `where'\r\n/Users/will/youdo/rails/activerecord/lib/active_record/querying.rb:9:in `__send__'\r\n/Users/will/youdo/rails/activerecord/lib/active_record/querying.rb:9:in `where'\r\ntest/cases/quoting_test.rb:20:in `test_string_ids'\r\n\r\nI guess this happens to work most of the time with ActiveRecord because generally the strings will get cast back to the appropriate type for the column.\r\n\r\n@ncri's bit of SQL comes from WHERE a.attrelid = '#{quote_table_name(table_name)}'::regclass and quote_table_name hasn't changed, and I'm struggling to see how it could hit the predicate stuff as it goes straight to quote_column_name and PGconn.quote_ident.\r\n\r\n@ncri, just to help eliminate some possibilities, were there any other gems (other than the v3.2.12 rails ones themselves) that changed in your Gemfile.lock when you upgraded?", "_id": {"$oid": "5237ec25bd3543c151009c5a"}, "issue_id": 9207, "url": "https://api.github.com/repos/rails/rails/issues/comments/13427639", "html_url": "https://github.com/rails/rails/pull/9207#issuecomment-13427639", "updated_at": "2013-02-12T11:04:05Z", "user": {"subscriptions_url": "https://api.github.com/users/willbryant/subscriptions", "events_url": "https://api.github.com/users/willbryant/events{/privacy}", "repos_url": "https://api.github.com/users/willbryant/repos", "gists_url": "https://api.github.com/users/willbryant/gists{/gist_id}", "url": "https://api.github.com/users/willbryant", "login": "willbryant", "gravatar_id": "f1c9a2d6b6be7599854a75793ecd872d", "html_url": "https://github.com/willbryant", "following_url": "https://api.github.com/users/willbryant/following{/other_user}", "received_events_url": "https://api.github.com/users/willbryant/received_events", "organizations_url": "https://api.github.com/users/willbryant/orgs", "avatar_url": "https://0.gravatar.com/avatar/f1c9a2d6b6be7599854a75793ecd872d?d=https%3A%2F%2Fidenticons.github.com%2F60be21f3ebf28ff7b8a692a752d92cf8.png", "starred_url": "https://api.github.com/users/willbryant/starred{/owner}{/repo}", "id": 12062, "followers_url": "https://api.github.com/users/willbryant/followers", "type": "User"}, "created_at": "2013-02-12T11:04:05Z", "id": 13427639, "owner": "rails"}
