{"updated_at": "2012-03-01T20:18:39Z", "repo": "rails", "created_at": "2012-03-01T20:18:39Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/4269348", "id": 4269348, "issue_url": "https://api.github.com/repos/rails/rails/issues/5153", "issue_id": 5153, "user": {"repos_url": "https://api.github.com/users/mhfs/repos", "type": "User", "html_url": "https://github.com/mhfs", "starred_url": "https://api.github.com/users/mhfs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhfs/subscriptions", "following_url": "https://api.github.com/users/mhfs/following{/other_user}", "gravatar_id": "9c9854582906c67a71b50833d2d059f1", "organizations_url": "https://api.github.com/users/mhfs/orgs", "url": "https://api.github.com/users/mhfs", "gists_url": "https://api.github.com/users/mhfs/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/9c9854582906c67a71b50833d2d059f1?d=https%3A%2F%2Fidenticons.github.com%2F804506a8b44444c4483864113b922d42.png", "id": 78422, "events_url": "https://api.github.com/users/mhfs/events{/privacy}", "login": "mhfs", "received_events_url": "https://api.github.com/users/mhfs/received_events", "followers_url": "https://api.github.com/users/mhfs/followers"}, "body": "@panthomakos thanks for jumping in. I'm very sympathetic about your concerns however I believe the key issue in this matter is the interpretation of what `first` should do. Right now the behavior of `first` for a PostgreSQL app seems asymmetric to `last`. For instance, in a table with multiple records, `first` and `last` can happen to be the same record.\r\n\r\nIMO that's wrong and `first`'s responsability is beyond giving me the first record according to the database implementation point of view. In the way I interpret `first`, it should return the first inserted record.\r\n\r\nAnother point that I consider important is the fact that (I believe) Rails apps should be consistent running against different databases. I found this issue because a bug came up while migrating a MySQL app to PostgreSQL and at least for me it's very undesirable.\r\n\r\nAnd last but not least, not sure if performance is an issue here since adding an order by primary key is exactly what `last` does by default. The performance cost wouldn't go beyond that. If this order hits performance, limiting by 1 without using `first` is always an option, but I think the default behavior should be the one from the patch.", "_id": {"$oid": "523ee96cbd354364b90138cc"}, "html_url": "https://github.com/rails/rails/pull/5153#issuecomment-4269348"}
