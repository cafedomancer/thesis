{"updated_at": "2013-04-07T17:52:45Z", "repo": "rails", "created_at": "2013-04-07T09:11:02Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/16011917", "id": 16011917, "issue_url": "https://api.github.com/repos/rails/rails/issues/10043", "issue_id": 10043, "user": {"repos_url": "https://api.github.com/users/cconstantine/repos", "type": "User", "html_url": "https://github.com/cconstantine", "starred_url": "https://api.github.com/users/cconstantine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cconstantine/subscriptions", "following_url": "https://api.github.com/users/cconstantine/following{/other_user}", "gravatar_id": "bf08027779fffb8d87653d8f792ed7bf", "organizations_url": "https://api.github.com/users/cconstantine/orgs", "url": "https://api.github.com/users/cconstantine", "gists_url": "https://api.github.com/users/cconstantine/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/bf08027779fffb8d87653d8f792ed7bf?d=https%3A%2F%2Fidenticons.github.com%2Fbfa20d86a59044ef90a4609dde03985c.png", "id": 14189, "events_url": "https://api.github.com/users/cconstantine/events{/privacy}", "login": "cconstantine", "received_events_url": "https://api.github.com/users/cconstantine/received_events", "followers_url": "https://api.github.com/users/cconstantine/followers"}, "body": "To see failure:\r\n\r\n    git checkout f27e6d6\r\n    ARCONN=postgresql ruby -Itest test/cases/adapters/postgresql/array_test.rb -n test_insert_fixture\r\n\r\nTo exercise fix:\r\n\r\n    git checkout be4318b\r\n    ARCONN=postgresql ruby -Itest test/cases/adapters/postgresql/array_test.rb -n test_insert_fixture\r\n\r\n\r\nThanks for having me make a test.  In attempting to make the test I realized I really didn't understand what was going on.  The problem stems from the way the insert statements were built and used.  \r\n\r\nIn the fixture builder there was a single statement that would insert the fixture row and would yield something like:\r\n\r\n    INSERT INTO table_name (\"arr_column\") VALUES ('{\"asdf\", \"as'df\"}')\r\n\r\nThe problem with this was that the single quote in the second array value would need to be escaped.  Normally they won't need to be escaped in strings, but because the array syntax starts with '{ you need to escape them in array contexts.\r\n\r\nNew ActiveRecord::Base models get inserted into the database more like this:\r\n\r\n    INSERT INTO table_name(\"arr_column\") VALUES( $1 ) [ [\"arr_column\", [\"asdf\", \"as'df\"] ] ]\r\n\r\nThis isn't exactly the SQL that is transferred, that array on the end is sent to the DB as a binding of some kind. This is the command you see recorded to the rails log when a model insert happens.\r\n\r\nThe new fix in be4318b doesn't attempt to escape the ' character anymore, instead it uses the existing postgres insert code used for inserting models with the bound column values.  This is less dangerous as it only effects the code in insert_fixture (which only runs during test setup).  I pulled the method into the PostgreSQL specific driver because I'm not sure it will work with the other db engines and fixture loading appears to be completely untested; I couldn't find any tests that call insert_fixture.  \r\n\r\n\r\n", "_id": {"$oid": "5237e39dbd3543c151009172"}, "html_url": "https://github.com/rails/rails/pull/10043#issuecomment-16011917"}
