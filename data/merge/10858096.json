{"issue_url": "https://api.github.com/repos/rails/rails/issues/8332", "repo": "rails", "body": "@amatsuda I thought about that, but then again, why would `not` support varargs, and `like`, `not_like` not?\r\nIf you can write:\r\n\r\n    User.where.not('name = ?', 'Tenderlove')  # instead of User.where.not(name: 'tenderlove')\r\n\r\nthen shouldn't you also be able to write the following?\r\n\r\n    User.where.like('name = ?', 'tender%')  # instead of User.where.like(name: 'tender%')\r\n\r\nIn other words, should `not`, `like`, and `not_like` parse the arguments in the same way as `where` does or not?\r\nIf this is the case, I suggest we add more tests to indicate all these variations.\r\n\r\nI also think it wouldn't hurt to restore this test: https://github.com/claudiob/rails/commit/be71e1a7a1048f1dfa68bf73a487228f251b7be5#L4R89 or at least something that makes clear what happens if you call `where` with blank conditions.\r\n\r\n@carlosantoniodasilva I understand your suggestion, but before delving into coding that I would like to know what is the most desired behavior. What makes most sense to you? That `where(nil)` should be treated as `where` or as `where(\"\")`? Personally, I vote for the latter, and *force* coders not to pass any argument at all if they want to chain `where` with `not`, `like`, or `not_like`. I don't see the case where someone would need to write:\r\n\r\n    User.where(nil).not(name: 'John')\r\n\r\nso personally I would keep the old behavior in this case (having `User.where(nil) == User.all`) and only create a `WhereChain` if `where` is called with no arguments at all. What's the opinion of Rails core members?", "_id": {"$oid": "523d97adbd354364b9008302"}, "issue_id": 8332, "url": "https://api.github.com/repos/rails/rails/issues/comments/10858096", "html_url": "https://github.com/rails/rails/pull/8332#issuecomment-10858096", "updated_at": "2012-11-29T17:39:20Z", "user": {"subscriptions_url": "https://api.github.com/users/claudiob/subscriptions", "events_url": "https://api.github.com/users/claudiob/events{/privacy}", "repos_url": "https://api.github.com/users/claudiob/repos", "gists_url": "https://api.github.com/users/claudiob/gists{/gist_id}", "url": "https://api.github.com/users/claudiob", "login": "claudiob", "gravatar_id": "4dea5cf83d2d6c1228750b76e579b38d", "html_url": "https://github.com/claudiob", "following_url": "https://api.github.com/users/claudiob/following{/other_user}", "received_events_url": "https://api.github.com/users/claudiob/received_events", "organizations_url": "https://api.github.com/users/claudiob/orgs", "avatar_url": "https://2.gravatar.com/avatar/4dea5cf83d2d6c1228750b76e579b38d?d=https%3A%2F%2Fidenticons.github.com%2F11ed516444b2593eaba7f2c2bb63483e.png", "starred_url": "https://api.github.com/users/claudiob/starred{/owner}{/repo}", "id": 10076, "followers_url": "https://api.github.com/users/claudiob/followers", "type": "User"}, "created_at": "2012-11-29T17:39:20Z", "id": 10858096, "owner": "rails"}
