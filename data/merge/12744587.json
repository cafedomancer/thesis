{"issue_url": "https://api.github.com/repos/rails/rails/issues/9080", "repo": "rails", "body": "> Myron, how should we be improving this?\r\n\r\nLet me preface my suggestions with two quick comments:\r\n\r\n* Calling rails' use of rake a \"misuse\" has more to do with twitter-imposed terseness than with the actual way I would categorize it.  I do think rails' use of rake is suboptimal and has room for improvement, but that's more nuanced than fits in a tweet.\r\n* I haven't worked on a rails app in a long time (I've never used rails 3.1 or 3.2, for example, and barely used rails 3.0). The apps I've been working on are very, very far from rails-style CRUD apps, and, as @dhh has [stated elsewhere](http://david.heinemeierhansson.com/2012/the-parley-letter.html), the more your app is dissimilar from Basecamp, the worse fit rails is for your application.  I'm not sure if/when I'll be working on another rails app, so I'm not going to invest lots of time in an extended discussion here.\r\n\r\nWith that said, I think there's an optimal way to use rake that's quite different from how rails uses it.  Specifically, it leverages the fact that rake, like most ruby programs, has two run-time phases:\r\n\r\n* Phase 1 is \"task definition time\" -- during this phase, rake is evaluating your `Rakefile` (which involves loading other files `require`d or `load`ed by your Rakefile).\r\n* Phase 2 is \"task execution time\" -- during this phase, rake is executing the specified task(s).\r\n\r\nMy preferred way to use rake is to make phase 1 as lightweight and minimal as possible.  My rule of thumb is to only require files that define rake tasks during this phase, and to defer all other requires to phase 2.  Each task becomes responsible (either through the code directly in the task, or via a prerequisite task) for loading the files and libraries it needs to run.  This goes hand-in-hand with [the way I use bundler](http://myronmars.to/n/dev-blog/2012/12/5-reasons-to-avoid-bundler-require), and fits right in with my preferred approach of explicitly loading dependencies at runtime...but I know that [DHH prefers](https://twitter.com/dhh/status/281106285024407552) the convenience of not having to manually manage dependencies at runtime.  (As usual, this is about trade offs.  The particular things I value most differ from the things DHH values most and that's fine).\r\n\r\nRails has, for as long as I know, chosen to load the entire rails environment at task definition time, which essentially causes the environment to be double-booted when running a task that spawns a new process that boots the environment.  Changing to my preferred approach would be a large change, but if there's desire to move in that direction, a major release (like rails 4) is the right time to do it.  As a point of comparison, here's the kind of speed I get out of rake.  This is on a large app that I (and an entire team at @seomoz) have been working on full time for 9+ months:\r\n\r\n```\r\n$ time bin/rake -T > /dev/null\r\nbin/rake -T > /dev/null  0.21s user 0.04s system 98% cpu 0.255 total\r\n```\r\n\r\nThat's 255 ms wall clock time, which is barely noticeable.\r\n\r\nAs for the idea of having a more full-featured test runner...I heartily support such a thing (one of my favorite parts of rspec is the super flexible test runner, complete with the binary that supports a plethora of options), but I wonder if it's better suited as an external gem that can be used by any T::U/minitest project?  Is there anything about this that needs to be coupled to rails?", "_id": {"$oid": "523d5a22bd354364b900607e"}, "issue_id": 9080, "url": "https://api.github.com/repos/rails/rails/issues/comments/12744587", "html_url": "https://github.com/rails/rails/pull/9080#issuecomment-12744587", "updated_at": "2013-01-26T23:44:42Z", "user": {"subscriptions_url": "https://api.github.com/users/myronmarston/subscriptions", "events_url": "https://api.github.com/users/myronmarston/events{/privacy}", "repos_url": "https://api.github.com/users/myronmarston/repos", "gists_url": "https://api.github.com/users/myronmarston/gists{/gist_id}", "url": "https://api.github.com/users/myronmarston", "login": "myronmarston", "gravatar_id": "42d4590355a1404230fbc9aff4dd377b", "html_url": "https://github.com/myronmarston", "following_url": "https://api.github.com/users/myronmarston/following{/other_user}", "received_events_url": "https://api.github.com/users/myronmarston/received_events", "organizations_url": "https://api.github.com/users/myronmarston/orgs", "avatar_url": "https://2.gravatar.com/avatar/42d4590355a1404230fbc9aff4dd377b?d=https%3A%2F%2Fidenticons.github.com%2F6916222172eb021e5d5f0043453078b9.png", "starred_url": "https://api.github.com/users/myronmarston/starred{/owner}{/repo}", "id": 49391, "followers_url": "https://api.github.com/users/myronmarston/followers", "type": "User"}, "created_at": "2013-01-26T23:40:38Z", "id": 12744587, "owner": "rails"}
