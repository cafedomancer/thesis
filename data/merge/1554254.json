{"updated_at": "2011-07-12T16:36:11Z", "repo": "rails", "created_at": "2011-07-12T13:42:00Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/1554254", "id": 1554254, "issue_url": "https://api.github.com/repos/rails/rails/issues/2034", "issue_id": 2034, "user": {"repos_url": "https://api.github.com/users/Peeja/repos", "type": "User", "html_url": "https://github.com/Peeja", "starred_url": "https://api.github.com/users/Peeja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Peeja/subscriptions", "following_url": "https://api.github.com/users/Peeja/following{/other_user}", "gravatar_id": "d069ac0170dc6c93bad77734258fadae", "organizations_url": "https://api.github.com/users/Peeja/orgs", "url": "https://api.github.com/users/Peeja", "gists_url": "https://api.github.com/users/Peeja/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/d069ac0170dc6c93bad77734258fadae?d=https%3A%2F%2Fidenticons.github.com%2F97416ac0f58056947e2eb5d5d253d4f2.png", "id": 2407, "events_url": "https://api.github.com/users/Peeja/events{/privacy}", "login": "Peeja", "received_events_url": "https://api.github.com/users/Peeja/received_events", "followers_url": "https://api.github.com/users/Peeja/followers"}, "body": "[Edited for clarity]\r\n\r\nI don't think we mentioned it in a comment, but we changed the `@@to_path` module variable to be a constant, to match the `PARTIAL_NAMES` hash from the original implementation of `PartialRenderer#partial_path`.  If that doesn't address your concern, can you elaborate on what you dislike about it?\r\n\r\nWe wanted to stop exposing `#partial_path` at the class level because with this change ActiveModel classes aren't required to have one (at the class level), and limiting the interface to `#to_path` makes for a smaller, more consistent interface.\r\n\r\nBecause we've moved the same caching strategy into `ActiveModel::Conversion#to_path`, the performance should be the same, except for the creation of one string in `#partial_path`.  If you'd like, we can cache that too, by the `path` local.  That should match the performance of the original, no?", "_id": {"$oid": "523fe3a4bd354364b901bfa6"}, "html_url": "https://github.com/rails/rails/pull/2034#issuecomment-1554254"}
