{"updated_at": "2011-09-17T01:48:03Z", "repo": "rails", "created_at": "2011-09-17T01:47:02Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/2120503", "id": 2120503, "issue_url": "https://api.github.com/repos/rails/rails/issues/3049", "issue_id": 3049, "user": {"repos_url": "https://api.github.com/users/brainopia/repos", "type": "User", "html_url": "https://github.com/brainopia", "starred_url": "https://api.github.com/users/brainopia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brainopia/subscriptions", "following_url": "https://api.github.com/users/brainopia/following{/other_user}", "gravatar_id": "254513687a01330ba0ae676538de459b", "organizations_url": "https://api.github.com/users/brainopia/orgs", "url": "https://api.github.com/users/brainopia", "gists_url": "https://api.github.com/users/brainopia/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/254513687a01330ba0ae676538de459b?d=https%3A%2F%2Fidenticons.github.com%2F39461a19e9eddfb385ea76b26521ea48.png", "id": 386, "events_url": "https://api.github.com/users/brainopia/events{/privacy}", "login": "brainopia", "received_events_url": "https://api.github.com/users/brainopia/received_events", "followers_url": "https://api.github.com/users/brainopia/followers"}, "body": "Well, I'm not sure if it can be called a hack since I don't add anything specific to `SafeBuffer`. If anything commit adds consistency by calling `to_param` on both keys and values of hash (not only on values as previously). \r\n\r\nBy definition, `to_param` method is a common interface to represent objects in url and therefore it seems logical to use it inside `to_query` method not only for values, but for keys too (if anything, I think `to_s` calls in `to_query` method are not needed, but it's not my place to decide)\r\n\r\nSo this simple sticking to existing convention will allow us to support ActiveRecord and SafeBuffer, etc, objects as keys when we generate query from hash without any hacks.\r\n\r\nSo this change is not for sake of SafeBuffer but to use existing established interface for purposes it was created. And the positive effect this change has on SafeBuffer is just a consequence of a good interface. \r\n\r\nNow back to the real world, I'm creating an interface where values supplied by user will be used as part of parameter names. You can see a similar interface at http://hurl.it by clicking on \"add header\" link and submitting a form. I hope it's persuasive enough :)\r\n\r\nWhatever decision you make, I'll accept it with good faith since your guys really rock and I'm very thankful for your constant work on rails. I'm just trying to help out as best as I can :)", "_id": {"$oid": "52383b36bd3543c151010271"}, "html_url": "https://github.com/rails/rails/pull/3049#issuecomment-2120503"}
