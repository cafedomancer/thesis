{"updated_at": "2011-12-15T11:24:35Z", "repo": "rails", "created_at": "2011-12-15T11:24:35Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/3159857", "id": 3159857, "issue_url": "https://api.github.com/repos/rails/rails/issues/3991", "issue_id": 3991, "user": {"repos_url": "https://api.github.com/users/jonleighton/repos", "type": "User", "html_url": "https://github.com/jonleighton", "starred_url": "https://api.github.com/users/jonleighton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonleighton/subscriptions", "following_url": "https://api.github.com/users/jonleighton/following{/other_user}", "gravatar_id": "2940bc7d4506f3e099e3dcc32a412b98", "organizations_url": "https://api.github.com/users/jonleighton/orgs", "url": "https://api.github.com/users/jonleighton", "gists_url": "https://api.github.com/users/jonleighton/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/2940bc7d4506f3e099e3dcc32a412b98?d=https%3A%2F%2Fidenticons.github.com%2F798cebccb32617ad94123450fd137104.png", "id": 1979, "events_url": "https://api.github.com/users/jonleighton/events{/privacy}", "login": "jonleighton", "received_events_url": "https://api.github.com/users/jonleighton/received_events", "followers_url": "https://api.github.com/users/jonleighton/followers"}, "body": "Hmmm.... this doesn't feel like the cleanest thing in the world. Are you sure that this worked flawlessly on 3.0? I had a glance at the code but couldn't really see how this same problem wouldn't have occurred there.\r\n\r\nHave you tried using `:inverse_of` on your `Project#tasks` association? Really that should be the 'proper' solution so that the `tasks.project` inverse gets set correctly when `projects.tasks.create` is called, and thus your `:project_attributes` gets assigned to the appropriate project.\r\n\r\nI'm not against merging this, just hesitant if there is a better solution. But if it's definitely a regression we should probably just merge (but I am still curious what changed to actually cause the regression...)", "_id": {"$oid": "523f420fbd354364b90164ea"}, "html_url": "https://github.com/rails/rails/pull/3991#issuecomment-3159857"}
