{"updated_at": "2011-05-21T03:29:43Z", "repo": "rails", "created_at": "2011-05-21T03:29:43Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/1213526", "id": 1213526, "issue_url": "https://api.github.com/repos/rails/rails/issues/563", "issue_id": 563, "user": {"repos_url": "https://api.github.com/users/NZKoz/repos", "type": "User", "html_url": "https://github.com/NZKoz", "starred_url": "https://api.github.com/users/NZKoz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NZKoz/subscriptions", "following_url": "https://api.github.com/users/NZKoz/following{/other_user}", "gravatar_id": "efa76b164a7de4a5730e4fa397cc4425", "organizations_url": "https://api.github.com/users/NZKoz/orgs", "url": "https://api.github.com/users/NZKoz", "gists_url": "https://api.github.com/users/NZKoz/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/efa76b164a7de4a5730e4fa397cc4425?d=https%3A%2F%2Fidenticons.github.com%2F85d8ce590ad8981ca2c8286f79f59954.png", "id": 197, "events_url": "https://api.github.com/users/NZKoz/events{/privacy}", "login": "NZKoz", "received_events_url": "https://api.github.com/users/NZKoz/received_events", "followers_url": "https://api.github.com/users/NZKoz/followers"}, "body": "It seems that both connection and release_connection should be covered\nby the mutex, I can't see what the downside of that will be.  There'll\nbe some additional mutex contention but ... it'll actually be\nthreadsafe which would be nice ;)\n\nPerhaps rework your branch to make it work that way (and remove the\nmutex from any of the internal methods) and we can see what the impact\nis?\n\nOn Thu, May 19, 2011 at 11:32 PM, xli\n<reply@reply.github.com>\nwrote:\n> The unit test added is for proving the problem, and proving the fix. It probably no much value to keep it.\n>\n> Introducing the ThreadsafeHashCache is for performance. It's 10% better performance for calling connection method.\n> This is in case someone really cares about the performance, otherwise I don't get why the connection and release_connection were the only 2 unsynchronized methods called outside ConnectionPool.\n>\n> clear_stale_cached_connections method is only called inside ConnectionPool by checkout and verify_active_connections! methods, which are synchronized by mutex already.\n>\n> --\n> Reply to this email directly or view it on GitHub:\n> https://github.com/rails/rails/pull/563#issuecomment-1207893\n>\n\n\n\n-- \nCheers\n\nKoz", "_id": {"$oid": "52385e32bd3543c15101203d"}, "html_url": "https://github.com/rails/rails/pull/563#issuecomment-1213526"}
