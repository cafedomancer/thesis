{"updated_at": "2012-09-24T16:14:17Z", "repo": "rails", "created_at": "2012-09-24T16:14:17Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/8824545", "id": 8824545, "issue_url": "https://api.github.com/repos/rails/rails/issues/7251", "issue_id": 7251, "user": {"repos_url": "https://api.github.com/users/dhh/repos", "type": "User", "html_url": "https://github.com/dhh", "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhh/subscriptions", "following_url": "https://api.github.com/users/dhh/following{/other_user}", "gravatar_id": "ed9635566b34ade32274f510f0f9a6d2", "organizations_url": "https://api.github.com/users/dhh/orgs", "url": "https://api.github.com/users/dhh", "gists_url": "https://api.github.com/users/dhh/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/ed9635566b34ade32274f510f0f9a6d2?d=https%3A%2F%2Fidenticons.github.com%2Fcdcb2f5c7b071143529ef7f2705dfbc4.png", "id": 2741, "events_url": "https://api.github.com/users/dhh/events{/privacy}", "login": "dhh", "received_events_url": "https://api.github.com/users/dhh/received_events", "followers_url": "https://api.github.com/users/dhh/followers"}, "body": "I have many forms pointing to the same controllers. Desktop and mobile web views, APIs, etc. This verification also cannot be trusted to the view as you don't want to tamper with it.\r\n\r\nI wouldn't bother with the validates :user, :presence check if you feel like you're duplicating yourself.\r\n\r\nOn Sep 24, 2012, at 10:25 AM, Danil Pismenny wrote:\r\n\r\n> Strong Prameters does not solve the problem of checking parameters in Rails. The problem is model-based validation.\r\n> \r\n> Require or not require, permit or not permit, validate and how to validate - these are questions of the Form, not of a model and not of a controller.\r\n> \r\n> Model-based validation must be like SQL constraints - simple, basic and unconditional. It's about solidity of data, it's about consistency, not roles or permissions.\r\n> \r\n> And params are form-specific, not of controller. They can be used with different models, presenters and controllers.\r\n> \r\n> One form can require :password, another one require :email, another one require :full_name and permit to another field.\r\n> \r\n> Another problem with StrongParameters - they ara introduce duplication of responsibilities:\r\n> \r\n> params.require(:user) # in controller\r\n> \r\n> and\r\n> \r\n> validates :user, :presence => true # model\r\n> \r\n> What is difference between these approaches?\r\n> \r\n> Resolution\r\n> \r\n> Checking parameters (validation, requirements etc) must be extracted to the dedicated class.\r\n> \r\n> \u2014\r\n> Reply to this email directly or view it on GitHub.\r\n> \r\n> \r\n\r\n--\r\nDavid Heinemeier Hansson", "_id": {"$oid": "523dfc3ebd354364b900c21b"}, "html_url": "https://github.com/rails/rails/pull/7251#issuecomment-8824545"}
