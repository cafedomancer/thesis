{"body": "More explanation\r\n============\r\n\r\nImagine if you set charset and collation in config/database.yml. For this example lets use the test db:\r\n\r\n    ...\r\n    \r\n    test:\r\n      adapter: mysql\r\n      database: myapp_test\r\n      username: root\r\n      host: localhost\r\n      charset: some_charset\r\n      collation: some_collation\r\n\r\nNow run\r\n\r\n    RAILS_ENV=test rake db:create\r\n\r\nit calls create_database with these options:\r\n\r\n    {:charset=>\"some_charset\", :collation=>\"some_collation\"}\r\n\r\nThis is correct and creates the database with the correct charset and collation.\r\n\r\nNow if you run\r\n\r\n    rake test\r\n\r\nit calls recreate_database which then calls create_database with the following options, (ie the entire test db config from database.yml):\r\n\r\n    {\"username\"=>\"root\", \"adapter\"=>\"mysql\", \"charset\"=>\"some_charset\", \"database\"=>\"myapp_test\", \"host\"=>\"localhost\", \"collation\"=>\"some_collation\"}\r\n\r\nNotice that it does have the collation and charset values there BUT the hash keys are symbols so there is no options[:collation] and no options[:charset] present. This causes the database to be created with the default charset of utf8 and an unspecified collation.\r\n\r\n(See create_database method here:\r\nhttps://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/mysql_adapter.rb#L520 )\r\n\r\nImpact\r\n=====\r\nIn my particular case using the default collation value causes the primary key constraint to consider primary keys as case insensitive, which means I can't load fixtures since I have some data where primary key constraints need to be case sensitive.\r\n\r\nIt's not hard to imagine other scenarios where having the test database created with a different charset and collation when running tests could lead to weirdness and problems.\r\n\r\nThe patch\r\n=======\r\nIt would be simple to patch recreate_database to work-around this (see comment above), but ideally we should respect the ENV['CHARSET'] and ENV['COLLATE'] values in the same way that rake db:create would do. So the fix is done in database.rake and involves a small refactor so create_database and recreate_database can work the same way.\r\n\r\n\r\nIn Rails 3.1\r\n========\r\nI have not confirmed it but from looking at the code I believe this problem exists in the 3.1 stable branch also. A port of this fix to 3.1 might be required if this doesn't merge cleanly.", "url": "https://api.github.com/repos/rails/rails/issues/comments/1508320", "created_at": "2011-07-05T23:33:45Z", "html_url": "https://github.com/rails/rails/pull/1952#issuecomment-1508320", "updated_at": "2011-07-05T23:33:45Z", "repo": "rails", "issue_id": 1952, "user": {"following_url": "https://api.github.com/users/simonbaird/following{/other_user}", "events_url": "https://api.github.com/users/simonbaird/events{/privacy}", "organizations_url": "https://api.github.com/users/simonbaird/orgs", "url": "https://api.github.com/users/simonbaird", "gists_url": "https://api.github.com/users/simonbaird/gists{/gist_id}", "html_url": "https://github.com/simonbaird", "subscriptions_url": "https://api.github.com/users/simonbaird/subscriptions", "avatar_url": "https://2.gravatar.com/avatar/bfaba91f41f0c01aba1ef0751458b537?d=https%3A%2F%2Fidenticons.github.com%2F4974a9fe76a5b447c35ad12a15fa0260.png", "repos_url": "https://api.github.com/users/simonbaird/repos", "received_events_url": "https://api.github.com/users/simonbaird/received_events", "gravatar_id": "bfaba91f41f0c01aba1ef0751458b537", "starred_url": "https://api.github.com/users/simonbaird/starred{/owner}{/repo}", "login": "simonbaird", "type": "User", "id": 17822, "followers_url": "https://api.github.com/users/simonbaird/followers"}, "owner": "rails", "_id": {"$oid": "52384b93bd3543c1510113b0"}, "id": 1508320, "issue_url": "https://api.github.com/repos/rails/rails/issues/1952"}
