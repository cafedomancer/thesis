{"updated_at": "2011-05-20T14:49:47Z", "repo": "rails", "created_at": "2011-05-20T14:49:47Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/1210412", "id": 1210412, "issue_url": "https://api.github.com/repos/rails/rails/issues/1162", "issue_id": 1162, "user": {"repos_url": "https://api.github.com/users/jonleighton/repos", "type": "User", "html_url": "https://github.com/jonleighton", "starred_url": "https://api.github.com/users/jonleighton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonleighton/subscriptions", "following_url": "https://api.github.com/users/jonleighton/following{/other_user}", "gravatar_id": "2940bc7d4506f3e099e3dcc32a412b98", "organizations_url": "https://api.github.com/users/jonleighton/orgs", "url": "https://api.github.com/users/jonleighton", "gists_url": "https://api.github.com/users/jonleighton/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/2940bc7d4506f3e099e3dcc32a412b98?d=https%3A%2F%2Fidenticons.github.com%2F798cebccb32617ad94123450fd137104.png", "id": 1979, "events_url": "https://api.github.com/users/jonleighton/events{/privacy}", "login": "jonleighton", "received_events_url": "https://api.github.com/users/jonleighton/received_events", "followers_url": "https://api.github.com/users/jonleighton/followers"}, "body": "@tenderlove and I discussed this the other day. We talked about the following situation:\r\n\r\n``` ruby\r\nclass Animal < AR::Base\r\nend\r\n\r\nclass Horse < Animal\r\n  self.pluralize_table_names = false\r\nend\r\n```\r\n\r\nNote that `Horse` and `Animal` will share the same table under usual circumstances.\r\n\r\n@tenderlove said that changing `pluralize_table_names` on the subclass *should* affect the superclass in this scenario, since they normally share the same table. I agreed at the time.\r\n\r\nHowever, I now think the opposite. I think that in the above situation `Horse` and `Animal` should have the table names `animal` and `animals`, because:\r\n\r\n1. If changing the subclass affects the superclass, it is at the very least a code smell to make the change in the subclass\r\n2. I think we should treat this like `self.table_name` in the sense of \"whatever you would have called this table, call it the singular of that\"\r\n3. It seems more obvious to do it this way, and certainly the implementation will be simpler (the other way would need to deal with abstract classes appropriately as well)\r\n\r\nThoughts? (All this seems quite academic though as I can't envisage the above situation arising in real life.)", "_id": {"$oid": "52385c7cbd3543c151011f13"}, "html_url": "https://github.com/rails/rails/pull/1162#issuecomment-1210412"}
