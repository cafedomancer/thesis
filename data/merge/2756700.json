{"body": "I took a crack at generating all association methods in a single module per model class. It was pretty easy, right up until I ran into the has_and_belongs_to_many [destroy_associations hook](https://github.com/joshsusser/rails/commit/7cba6a37848ba96b4decec885779fb309d71c339#L3L18). HABTM associations have been generating a module per association for quite a while. They do it so that multiple HABTMs in a class can all have their destroy_associations hooks run in series. Note that all those methods have the *same name* - they are all in separate modules that are ancestors of the same class, and each one calls the next using super. So to change this patch to use one module per class, I'll have to come up with another way to handle this case. Either that or we can punt on this one case - since HABTM isn't used very often, maybe multiple modules won't offend anyone.\r\n\r\nAlso, I wanted to respond to a few comments above.\r\n\r\n1) Programmatically creating modules is not the same as loading a bunch of helper modules from the file system so there shouldn't be any significant impact to startup time. I haven't noticed any running tests.\r\n\r\n2) As I mentioned before, having a bunch of modules should have negligible impact on performance. All current Ruby VMs optimize method dispatch so inheritance depth doesn't matter, except maybe while you have cold caches the first time you run a piece of code. That might have a tiny impact on how long tests take to run, but I doubt it would be statistically significant. If you think you are measuring a performance impact from number of modules, you're probably noticing something else.\r\n\r\nAnyway, I did add an explicit test that shows a model method using super to call the association method.", "url": "https://api.github.com/repos/rails/rails/issues/comments/2756700", "created_at": "2011-11-16T07:40:50Z", "html_url": "https://github.com/rails/rails/pull/3636#issuecomment-2756700", "updated_at": "2011-11-16T07:40:50Z", "repo": "rails", "issue_id": 3636, "user": {"following_url": "https://api.github.com/users/joshsusser/following{/other_user}", "events_url": "https://api.github.com/users/joshsusser/events{/privacy}", "organizations_url": "https://api.github.com/users/joshsusser/orgs", "url": "https://api.github.com/users/joshsusser", "gists_url": "https://api.github.com/users/joshsusser/gists{/gist_id}", "html_url": "https://github.com/joshsusser", "subscriptions_url": "https://api.github.com/users/joshsusser/subscriptions", "avatar_url": "https://0.gravatar.com/avatar/9f0f89bbd9e1ecfbaab6584e429b7a2f?d=https%3A%2F%2Fidenticons.github.com%2F1c9ac0159c94d8d0cbedc973445af2da.png", "repos_url": "https://api.github.com/users/joshsusser/repos", "received_events_url": "https://api.github.com/users/joshsusser/received_events", "gravatar_id": "9f0f89bbd9e1ecfbaab6584e429b7a2f", "starred_url": "https://api.github.com/users/joshsusser/starred{/owner}{/repo}", "login": "joshsusser", "type": "User", "id": 156, "followers_url": "https://api.github.com/users/joshsusser/followers"}, "owner": "rails", "_id": {"$oid": "523f5c6ebd354364b9017433"}, "id": 2756700, "issue_url": "https://api.github.com/repos/rails/rails/issues/3636"}
