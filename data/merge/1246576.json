{"updated_at": "2011-05-27T01:11:48Z", "repo": "rails", "created_at": "2011-05-27T01:11:48Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/1246576", "id": 1246576, "issue_url": "https://api.github.com/repos/rails/rails/issues/1315", "issue_id": 1315, "user": {"repos_url": "https://api.github.com/users/sikachu/repos", "type": "User", "html_url": "https://github.com/sikachu", "starred_url": "https://api.github.com/users/sikachu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sikachu/subscriptions", "following_url": "https://api.github.com/users/sikachu/following{/other_user}", "gravatar_id": "f1c4a3bb1606cc4a61711e61e2fe6146", "organizations_url": "https://api.github.com/users/sikachu/orgs", "url": "https://api.github.com/users/sikachu", "gists_url": "https://api.github.com/users/sikachu/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/f1c4a3bb1606cc4a61711e61e2fe6146?d=https%3A%2F%2Fidenticons.github.com%2F4a4526b1ec301744aba9526d78fcb2a6.png", "id": 4912, "events_url": "https://api.github.com/users/sikachu/events{/privacy}", "login": "sikachu", "received_events_url": "https://api.github.com/users/sikachu/received_events", "followers_url": "https://api.github.com/users/sikachu/followers"}, "body": "Aha, I'll explain to you for your further reference. Your keywords for today are `git squash commit` and `git force push` ;)\r\n\r\nFirst you'll want to look up for the commit before your commits. you can do so by `git log`. You'll see something like this:\r\n\r\n    commit 60ca8d95938eddd2e9a54fb1167fd636e510b914\r\n    Author: Andrew Davis <Lordsauron90@gmail.com>\r\n    Date:   Wed May 25 19:18:29 2011 -0400\r\n\r\n        Added a space to the comment_if helper for formatting purposes\r\n\r\n    commit 063229525f8a89cd3dd6efa4c0cead37e42d2bd6\r\n    Author: Andrew Davis <Lordsauron90@gmail.com>\r\n    Date:   Wed May 25 19:04:15 2011 -0400\r\n\r\n        Accidentally added extra IDE files, removed them.\r\n\r\n    commit 3b23759a74009cc76237f60de1cd60d0d0c97d34\r\n    Author: Andrew Davis <Lordsauron90@gmail.com>\r\n    Date:   Wed May 25 19:03:29 2011 -0400\r\n\r\n        Removed unnecessary space in application.rb for formatting\r\n\r\n    commit 9b6791870bbe67f5c93cad0a676148b7cc83e697\r\n    Merge: 7fd0a6d 9cafc28\r\n    Author: Jos\u00e9 Valim <jose.valim@gmail.com>\r\n    Date:   Wed May 25 14:55:04 2011 -0700\r\n\r\n        Merge pull request #1312 from joshk/remove_active_support_deprecations\r\n    \r\n        Removed deprecated methods and related tests from ActiveSupport\r\n\r\nSo now we see the SHA of that commit, we can then run \"interactive rebase\" with that.\r\n\r\n    git rebase -i 9b6791870bbe67f5c93cad0a676148b7cc83e697\r\n\r\nThis will open your text editor with the list of commits. It will be something along the line like this:\r\n\r\n    pick 3b23759 Removed unnecessary space in application.rb for formatting\r\n    pick 0632295 Accidentally added extra IDE files, removed them.\r\n    pick 60ca8d9 Added a space to the comment_if helper for formatting purposes\r\n    \r\n    # Rebase 9b67918..60ca8d9 onto 9b67918\r\n    #\r\n    # Commands:\r\n    #  p, pick = use commit\r\n    #  r, reword = use commit, but edit the commit message\r\n    #  e, edit = use commit, but stop for amending\r\n    #  s, squash = use commit, but meld into previous commit\r\n    #  f, fixup = like \"squash\", but discard this commit's log message\r\n    #  x, exec = run command (the rest of the line) using shell\r\n    #\r\n    # If you remove a line here THAT COMMIT WILL BE LOST.\r\n    # However, if you remove everything, the rebase will be aborted.\r\n    #\r\n\r\n\r\nIf you look at the comments there, you'll see that we need to change `pick` to `squash`. Your result will look like this:\r\n\r\n    pick 3b23759 Removed unnecessary space in application.rb for formatting\r\n    squash 0632295 Accidentally added extra IDE files, removed them.\r\n    squash 60ca8d9 Added a space to the comment_if helper for formatting purposes\r\n\r\nNow if you save and quit that file, another editor will come up and asking you to change commit message.\r\n\r\n    # This is a combination of 3 commits.\r\n    # The first commit's message is:\r\n    Removed unnecessary space in application.rb for formatting\r\n    \r\n    # This is the 2nd commit message:\r\n    \r\n    Accidentally added extra IDE files, removed them.\r\n    \r\n    # This is the 3rd commit message:\r\n    \r\n    Added a space to the comment_if helper for formatting purposes\r\n\r\nThen you just change your wording to describe those commits. After that, save and close your editor. It should say something like this:\r\n\r\n    Successfully rebased and updated refs/heads/master.\r\n\r\nNow you can force push to your remote. I assume that you have a remote name `ardavis`\r\n\r\n    git push ardavis +master\r\n\r\nYou'd then see that it pushes successfully and it would also say \"forced update\" in that log. Now wait for about 1 minute and your pull request will automatically updated with new commit.\r\n\r\n## Note Note Note\r\n\r\n**Always** use git rebase and force push only if you're the only single developer on that repository. This will be fine with your fork of Rails, as you're the single person accessing/pushing it. I would not recommend you do something like this if you're sharing a repository with somebody else, as they would facing an error that the original commit was disappeared and now they won't be able to run `git pull` anymore.", "_id": {"$oid": "523859b2bd3543c151011d2f"}, "html_url": "https://github.com/rails/rails/pull/1315#issuecomment-1246576"}
