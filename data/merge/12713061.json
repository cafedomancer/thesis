{"body": "> On the other hand, the changes hash uses the value after the type cast and it does not really make sense.\r\n\r\nYes but currently I don't see another simple solution, anyway it's better that we know that the object changes and it is invalid.\r\n\r\nAlso I think that you could simply use:\r\n\r\n```\r\ndef changes_from_zero_to_string?(old, value)\r\n  old == 0 && value.is_a?(String) && value.present? && value.to_i != 0 #or !value.to_i.zero?\r\nend\r\n```", "url": "https://api.github.com/repos/rails/rails/issues/comments/12713061", "created_at": "2013-01-25T18:06:42Z", "html_url": "https://github.com/rails/rails/pull/9042#issuecomment-12713061", "updated_at": "2013-01-25T18:06:42Z", "repo": "rails", "issue_id": 9042, "user": {"following_url": "https://api.github.com/users/acapilleri/following{/other_user}", "events_url": "https://api.github.com/users/acapilleri/events{/privacy}", "organizations_url": "https://api.github.com/users/acapilleri/orgs", "url": "https://api.github.com/users/acapilleri", "gists_url": "https://api.github.com/users/acapilleri/gists{/gist_id}", "html_url": "https://github.com/acapilleri", "subscriptions_url": "https://api.github.com/users/acapilleri/subscriptions", "avatar_url": "https://2.gravatar.com/avatar/0cd98f4e263d306bc455ca750c31443f?d=https%3A%2F%2Fidenticons.github.com%2F2e17b55bd1f302b773d04e4938adef85.png", "repos_url": "https://api.github.com/users/acapilleri/repos", "received_events_url": "https://api.github.com/users/acapilleri/received_events", "gravatar_id": "0cd98f4e263d306bc455ca750c31443f", "starred_url": "https://api.github.com/users/acapilleri/starred{/owner}{/repo}", "login": "acapilleri", "type": "User", "id": 46208, "followers_url": "https://api.github.com/users/acapilleri/followers"}, "owner": "rails", "_id": {"$oid": "523d5c7bbd354364b9006204"}, "id": 12713061, "issue_url": "https://api.github.com/repos/rails/rails/issues/9042"}
