{"updated_at": "2013-06-07T18:16:46Z", "repo": "rails", "created_at": "2013-06-07T18:16:46Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/19123901", "id": 19123901, "issue_url": "https://api.github.com/repos/rails/rails/issues/10539", "issue_id": 10539, "user": {"repos_url": "https://api.github.com/users/davidcelis/repos", "type": "User", "html_url": "https://github.com/davidcelis", "starred_url": "https://api.github.com/users/davidcelis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidcelis/subscriptions", "following_url": "https://api.github.com/users/davidcelis/following{/other_user}", "gravatar_id": "9b0144a16ba125a94460c5d45f07efb9", "organizations_url": "https://api.github.com/users/davidcelis/orgs", "url": "https://api.github.com/users/davidcelis", "gists_url": "https://api.github.com/users/davidcelis/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/9b0144a16ba125a94460c5d45f07efb9?d=https%3A%2F%2Fidenticons.github.com%2F3e1a626a9e0c39eb548886c253bf9644.png", "id": 36873, "events_url": "https://api.github.com/users/davidcelis/events{/privacy}", "login": "davidcelis", "received_events_url": "https://api.github.com/users/davidcelis/received_events", "followers_url": "https://api.github.com/users/davidcelis/followers"}, "body": "And, indeed, adding an explicit `to_a` into that test makes it pass:\r\n\r\n```ruby\r\ndef test_presence\r\n    topics = Topic.all\r\n\r\n    # the first query is triggered because there are no topics yet.\r\n    assert_queries(1) { assert topics.to_a.present? } # Test fails without this to_a\r\n\r\n    # checking if there are topics is used before you actually display them,\r\n    # thus it shouldn't invoke an extra count query.\r\n    assert_no_queries { assert topics.present? }\r\n    assert_no_queries { assert !topics.blank? }\r\n\r\n    # shows count of topics and loops after loading the query should not trigger extra queries either.\r\n    assert_no_queries { topics.size }\r\n    assert_no_queries { topics.length }\r\n    assert_no_queries { topics.each }\r\n\r\n    # count always trigger the COUNT query.\r\n    assert_queries(1) { topics.count }\r\n\r\n    assert topics.loaded?\r\n  end\r\n```", "_id": {"$oid": "5237dddcbd3543c151008b68"}, "html_url": "https://github.com/rails/rails/pull/10539#issuecomment-19123901"}
