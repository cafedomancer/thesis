{"updated_at": "2012-11-18T19:13:41Z", "repo": "rails", "created_at": "2012-11-18T19:12:59Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/10489985", "id": 10489985, "issue_url": "https://api.github.com/repos/rails/rails/issues/7980", "issue_id": 7980, "user": {"repos_url": "https://api.github.com/users/gingerlime/repos", "type": "User", "html_url": "https://github.com/gingerlime", "starred_url": "https://api.github.com/users/gingerlime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gingerlime/subscriptions", "following_url": "https://api.github.com/users/gingerlime/following{/other_user}", "gravatar_id": "00afd84dac05c525b368b3f9beafc8fb", "organizations_url": "https://api.github.com/users/gingerlime/orgs", "url": "https://api.github.com/users/gingerlime", "gists_url": "https://api.github.com/users/gingerlime/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/00afd84dac05c525b368b3f9beafc8fb?d=https%3A%2F%2Fidenticons.github.com%2F4ac1fa9b1685190560b880b9ee5993bb.png", "id": 524274, "events_url": "https://api.github.com/users/gingerlime/events{/privacy}", "login": "gingerlime", "received_events_url": "https://api.github.com/users/gingerlime/received_events", "followers_url": "https://api.github.com/users/gingerlime/followers"}, "body": "@indirect thanks. Yep. It seems so. Unicorn/Thin/Mongrel et al should all rely on an external proxy so should be fine. I was under the impression that nginx/passenger is quite a popular combination though (??), and it seems to be vulnerable too. \r\n\r\nIf you consider those web servers that [don't handle X-Forwarded-For properly](http://andre.arko.net/2011/12/26/repeated-headers-and-ruby-web-servers/), they might also be susceptible to some form of spoofing, but depends on the specifics of how they handle those headers and which webserver sits in front. I didn't get a chance to play with anything other than Unicorn and Passenger personally to test this unfortunately.\r\n\r\nI know my opinion doesn't count for much, being a complete outsider to the rails project, but I believe that there shouldn't be a need for this `use_last_forwarded_ip` option (whatever you decide to call it). I might be wrong, but I believe that if you define your proxies correctly, the current algorithm will result in the leftmost IP address being equal to the rightmost one (after those proxies were removed). And if they're not equal, the chances are that this is a result of either some spoofing or misconfiguration.", "_id": {"$oid": "523db5b8bd354364b90095e1"}, "html_url": "https://github.com/rails/rails/pull/7980#issuecomment-10489985"}
