{"body": "@ernie Maybe I haven't seen the full background to this issue but I am concerned about your proposal for 4.0 with regards to this. As an example, let's assume we have `User`, `Team` and `TeamUser` models. The `TeamUser` has belongs_to relationship both a user and a team and both the user & team models are linked to each other through the team user model. When we create a new `User` we want to assign it to a number of teams so we do this:\r\n\r\n```ruby\r\nuser = User.new\r\nuser.teams << Team.find_by_name(\"Admin\")\r\nuser.save\r\n```\r\n\r\nYour proposal means that the `TeamUser` object would be created at line two before the user exists which means the `user_id` column of the `TeamUser` object would be nil which is not valid in this scenario. \r\n\r\nWhen assigning objects in this manner before the object is actually created, I believe the current behaviour of creating these \"join\" objects after the original object has been saved is correct. \r\n\r\nIn my specific use case, I often add a validation on the join model to ensure that both parts of the association belong to the same account (in a multi-tenanted system). For example:\r\n\r\n```ruby\r\nclass TeamUser < ActiveRecord::Base\r\n  belongs_to :team\r\n  belongs_to :user\r\n  validate do\r\n    if team.account_id != user.account_id\r\n      errors.add :base, \"The team & user must belong to the same account\"\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nDo you have any thoughts on this and how this would be achieved if the model initialised, validated & saved without one of the foreign keys?", "url": "https://api.github.com/repos/rails/rails/issues/comments/12156004", "created_at": "2013-01-11T18:03:45Z", "html_url": "https://github.com/rails/rails/pull/8895#issuecomment-12156004", "updated_at": "2013-01-11T18:04:14Z", "repo": "rails", "issue_id": 8895, "user": {"following_url": "https://api.github.com/users/adamcooke/following{/other_user}", "events_url": "https://api.github.com/users/adamcooke/events{/privacy}", "organizations_url": "https://api.github.com/users/adamcooke/orgs", "url": "https://api.github.com/users/adamcooke", "gists_url": "https://api.github.com/users/adamcooke/gists{/gist_id}", "html_url": "https://github.com/adamcooke", "subscriptions_url": "https://api.github.com/users/adamcooke/subscriptions", "avatar_url": "https://0.gravatar.com/avatar/ac5a5be2f5803185530feb49ec7bafb3?d=https%3A%2F%2Fidenticons.github.com%2Fcfe795a0a3c7bc1683f2efd8837dde0c.png", "repos_url": "https://api.github.com/users/adamcooke/repos", "received_events_url": "https://api.github.com/users/adamcooke/received_events", "gravatar_id": "ac5a5be2f5803185530feb49ec7bafb3", "starred_url": "https://api.github.com/users/adamcooke/starred{/owner}{/repo}", "login": "adamcooke", "type": "User", "id": 4765, "followers_url": "https://api.github.com/users/adamcooke/followers"}, "owner": "rails", "_id": {"$oid": "5237eee5bd3543c15100a054"}, "id": 12156004, "issue_url": "https://api.github.com/repos/rails/rails/issues/8895"}
