{"updated_at": "2010-10-15T22:12:20Z", "repo": "rails", "created_at": "2010-10-15T22:12:20Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/472054", "id": 472054, "issue_url": "https://api.github.com/repos/rails/rails/issues/76", "issue_id": 76, "user": {"repos_url": "https://api.github.com/users/iain/repos", "type": "User", "html_url": "https://github.com/iain", "starred_url": "https://api.github.com/users/iain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iain/subscriptions", "following_url": "https://api.github.com/users/iain/following{/other_user}", "gravatar_id": "42ec9fd08c179b547dcb60d977e29941", "organizations_url": "https://api.github.com/users/iain/orgs", "url": "https://api.github.com/users/iain", "gists_url": "https://api.github.com/users/iain/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/42ec9fd08c179b547dcb60d977e29941?d=https%3A%2F%2Fidenticons.github.com%2Fd8a3b2dde3181c8257e2e45efbd1e8ae.png", "id": 12692, "events_url": "https://api.github.com/users/iain/events{/privacy}", "login": "iain", "received_events_url": "https://api.github.com/users/iain/received_events", "followers_url": "https://api.github.com/users/iain/followers"}, "body": "I found one bug in rails master (not specific to identity map):\r\n\r\n<pre>\r\n>> Project.select(:id).map(&:id)\r\n  Project Load (2.6ms)  SELECT 'id' FROM `projects`\r\n=> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, etc...\r\n>> Project.select('id').map(&:id)\r\n  Project Load (0.7ms)  SELECT id FROM `projects`\r\n=> [7, 16, 76, 92, 98, 101, 102, 116, etc....\r\n</pre>\r\n\r\nOn a more related note, the only other issue I could find was that ActiveRecord::IdentityMap.clear doesn't clear the aggregation cache. I'm not sure whether it should, but it is something that broke my controller spec:\r\n\r\n<pre>\r\nit \"shows errors for invalid comment when html\" do\r\n  comment.clear_aggregation_cache\r\n  put :update, :project_id => project.id, :id => comment.id, :comment => { :body => \"\" }\r\n  assigns(:comment).should_not be_valid # fails without the clear_aggregation_cache 2 lines up\r\n  response.should render_template(:edit)\r\nend\r\n</pre>\r\n\r\nI couldn't find anything else.", "_id": {"$oid": "52386bbabd3543c151012c1e"}, "html_url": "https://github.com/rails/rails/pull/76#issuecomment-472054"}
