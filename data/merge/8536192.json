{"updated_at": "2012-09-13T17:29:36Z", "repo": "rails", "created_at": "2012-09-13T17:29:36Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/8536192", "id": 8536192, "issue_url": "https://api.github.com/repos/rails/rails/issues/7613", "issue_id": 7613, "user": {"repos_url": "https://api.github.com/users/marcandre/repos", "type": "User", "html_url": "https://github.com/marcandre", "starred_url": "https://api.github.com/users/marcandre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcandre/subscriptions", "following_url": "https://api.github.com/users/marcandre/following{/other_user}", "gravatar_id": "b06d8e26b92456b228d3c77b66397534", "organizations_url": "https://api.github.com/users/marcandre/orgs", "url": "https://api.github.com/users/marcandre", "gists_url": "https://api.github.com/users/marcandre/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https%3A%2F%2Fidenticons.github.com%2F8b48ea597d2862688e4aa8a2b28651a3.png", "id": 33770, "events_url": "https://api.github.com/users/marcandre/events{/privacy}", "login": "marcandre", "received_events_url": "https://api.github.com/users/marcandre/received_events", "followers_url": "https://api.github.com/users/marcandre/followers"}, "body": "@beerlington wrote:\n> Why can't you just use: `delegate :feature_name, :to => 'self.class'`\n\nAnyone that prefers that can (and still could if my patch is accepted), at least as long as one doesn't try `:prefix => true`. That's what I wrote at the end of my original request, BTW.\n\nThe question is \n\n@rafaelfranca wrote:\n> For me delegate :feature_name, :to => 'self.class' is more obvious.\n> `delegate :feature_name, :to => :class` for me is too magical and I prefer to have less magic in the Rails code if we can.\n\nWe agree on less magic :-) but maybe not on what magic is.  I believe the fact that `to => 'self.class'` actually works relies on the implementation using `class_eval` and not `define_method`. It's also not made explicit in the documentation that `to: 'any_expression_here'` will work and I would discourage anyone from writing `to: '(customer.address || {})'`, say, even though it currently works.\n\nI like the fact that `:to => :class` can be made to work in whichever way it is implemented (`define_method` or `class_eval`), while `:to => 'self.class'` *requires* an implementation that accepts an arbitrary string expression and uses `class_eval`.\n\nI definitely won't fight to death over this, though! If I'm the only one to like it, I'll just resort to using `:to => 'self.class'`, no problem :-)", "_id": {"$oid": "5237f9c4bd3543c15100b4fd"}, "html_url": "https://github.com/rails/rails/pull/7613#issuecomment-8536192"}
