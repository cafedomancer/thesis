{"issue_url": "https://api.github.com/repos/rails/rails/issues/9923", "repo": "rails", "body": "@carlosantoniodasilva , also can we have such problem:\r\n\r\n```ruby\r\nclass AddToFirstField < ActiveRecord::Migration\r\n  self.disable_ddl_transaction!\r\n  def change\r\n    add_index :users, :first_field, algorithm: :concurrently\r\n    add_column :users, invalid, :integersss\r\n  end\r\nend\r\n```\r\n\r\nStart migration first time:\r\n```bash\r\n==  AddToFirstField: migrating ================================================\r\n-- add_index(:users, :first_field, {:algorithm=>:concurrently})\r\n   -> 0.0066s\r\n-- invalid()\r\nrake aborted!\r\nAn error has occurred, all later migrations canceled:\r\n\r\nundefined local variable or method `invalid' for #<AddToFirstField:0x007fedc2aec1a0>/Users/leo/.rvm/gems/ruby-2.0.0-p0/bundler/gems/rails-3b0b573ac3ec/activerecord/lib/active_record/migration.rb:621:in `block in method_missing'\r\n```\r\n\r\nStart migration second time:\r\n```bash\r\n==  AddToFirstField: migrating ================================================\r\n-- add_index(:users, :first_field, {:algorithm=>:concurrently})\r\nrake aborted!\r\nAn error has occurred, all later migrations canceled:\r\n\r\nIndex name 'index_users_on_first_field' on table 'users' already exists/Users/leo/.rvm/gems/ruby-2.0.0-p0/bundler/gems/rails-3b0b573ac3ec/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb:806:in `add_index_options'\r\n```\r\n\r\nAnd this case:\r\n```ruby\r\nclass AddToFirstField < ActiveRecord::Migration\r\n  self.disable_ddl_transaction!\r\n  def change\r\n    add_index :users, :second_field, algorithm: :concurrently\r\n    add_index :users, :third_field, algorithm: :concurrently\r\n  end\r\nend\r\n```\r\n\r\nStart migration first time:\r\n\r\n```bash\r\n==  AddToFirstField: migrating ================================================\r\n-- add_index(:users, :second_field, {:algorithm=>:concurrently})\r\n   -> 0.0075s\r\n-- add_index(:users, :third_field, {:algorithm=>:concurrently})\r\nrake aborted!\r\nAn error has occurred, all later migrations canceled:\r\n\r\nPG::Error: ERROR:  column \"third_field\" does not exist\r\n: CREATE  INDEX CONCURRENTLY \"index_users_on_third_field\" ON \"users\"  (\"third_field\")/Users/leo/.rvm/gems/ruby-2.0.0-p0/bundler/gems/rails-3b0b573ac3ec/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:128:in `exec'\r\n```\r\n\r\nStart migration second time:\r\n```bash\r\n==  AddToFirstField: migrating ================================================\r\n-- add_index(:users, :second_field, {:algorithm=>:concurrently})\r\nrake aborted!\r\nAn error has occurred, all later migrations canceled:\r\n\r\nIndex name 'index_users_on_second_field' on table 'users' already exists/Users/leo/.rvm/gems/ruby-2.0.0-p0/bundler/gems/rails-3b0b573ac3ec/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb:806:in `add_index_options'\r\n```\r\n\r\nConclusion: we should create separate migration for each concurent index with \"disable_ddl_transaction\" and without any aditional migration commands (add_index, add_column, etc.):\r\n\r\n```ruby\r\nclass AddToFirstField < ActiveRecord::Migration\r\n  self.disable_ddl_transaction!\r\n  def change\r\n    add_index :users, :first_field, algorithm: :concurrently\r\n  end\r\nend\r\n\r\nclass AddToSecondField < ActiveRecord::Migration\r\n  self.disable_ddl_transaction!\r\n  def change\r\n    add_index :users, :second_field, algorithm: :concurrently\r\n  end\r\nend\r\n```\r\n\r\nThis isn't Rails way (I hope).", "_id": {"$oid": "523d06b9bd354364b9003e92"}, "issue_id": 9923, "url": "https://api.github.com/repos/rails/rails/issues/comments/15682246", "html_url": "https://github.com/rails/rails/pull/9923#issuecomment-15682246", "updated_at": "2013-03-30T21:30:49Z", "user": {"subscriptions_url": "https://api.github.com/users/le0pard/subscriptions", "events_url": "https://api.github.com/users/le0pard/events{/privacy}", "repos_url": "https://api.github.com/users/le0pard/repos", "gists_url": "https://api.github.com/users/le0pard/gists{/gist_id}", "url": "https://api.github.com/users/le0pard", "login": "le0pard", "gravatar_id": "2b18d4346ca1ec18cb310cd86a51a4e2", "html_url": "https://github.com/le0pard", "following_url": "https://api.github.com/users/le0pard/following{/other_user}", "received_events_url": "https://api.github.com/users/le0pard/received_events", "organizations_url": "https://api.github.com/users/le0pard/orgs", "avatar_url": "https://0.gravatar.com/avatar/2b18d4346ca1ec18cb310cd86a51a4e2?d=https%3A%2F%2Fidenticons.github.com%2Fd9fd0920d5e926e0620d8222a3454af4.png", "starred_url": "https://api.github.com/users/le0pard/starred{/owner}{/repo}", "id": 98444, "followers_url": "https://api.github.com/users/le0pard/followers", "type": "User"}, "created_at": "2013-03-30T21:30:49Z", "id": 15682246, "owner": "rails"}
