{"updated_at": "2012-07-30T15:00:42Z", "repo": "rails", "created_at": "2012-07-30T14:58:24Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/7370747", "id": 7370747, "issue_url": "https://api.github.com/repos/rails/rails/issues/7197", "issue_id": 7197, "user": {"repos_url": "https://api.github.com/users/davidcelis/repos", "type": "User", "html_url": "https://github.com/davidcelis", "starred_url": "https://api.github.com/users/davidcelis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidcelis/subscriptions", "following_url": "https://api.github.com/users/davidcelis/following{/other_user}", "gravatar_id": "9b0144a16ba125a94460c5d45f07efb9", "organizations_url": "https://api.github.com/users/davidcelis/orgs", "url": "https://api.github.com/users/davidcelis", "gists_url": "https://api.github.com/users/davidcelis/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/9b0144a16ba125a94460c5d45f07efb9?d=https%3A%2F%2Fidenticons.github.com%2F3e1a626a9e0c39eb548886c253bf9644.png", "id": 36873, "events_url": "https://api.github.com/users/davidcelis/events{/privacy}", "login": "davidcelis", "received_events_url": "https://api.github.com/users/davidcelis/received_events", "followers_url": "https://api.github.com/users/davidcelis/followers"}, "body": "Sure, I can go over my reasoning for those things:\n\n1) I figured that this might actually be a nicety for Rails devs whose first languages aren't English or are working on a team that is primarily speaking another language. While it's true that the keywords in Ruby are all in English, I didn't really see any reason to restrict their class constants to be in English. Since the `default_locale` doesn't change after initialization, I saw it as a safe decision because the table mappings will be kept consistent. If you think that Rails internally should always use :en, however, I'm all ears.\n\n2) Singularization/Pluralization were the only methods that really made sense to me to take a locale. Underscore, camelize and titleize seem to behave consistently based on casing rather than anything dependent on language. Actually, tableize does not take a locale and, depending on your answer to question 1, it should or shouldn't (since it uses pluralize internally). Only the singularization and pluralization rules seemed to differ between languages. I can certainly make those methods locale aware as well, I just wasn't sure why I should.\n\n3) Definitely. I see a couple possibilities with this... Add (:en) to the commented out `ActiveSupport::Inflector.inflections` block, turn the existing block into a short declaration of rules for some other locale (such as the rules for :es that I gave above), or maybe just add a short block at the bottom for some other locale to give an example. Either way, I'll definitely update the commented note above it with an additional note that a locale can be specified and that multiple lists of inflections can be maintained.", "_id": {"$oid": "523e029fbd354364b900c60e"}, "html_url": "https://github.com/rails/rails/pull/7197#issuecomment-7370747"}
