{"issue_url": "https://api.github.com/repos/rails/rails/issues/7661", "repo": "rails", "body": "hey guys,\r\n\r\nI spent better part of morning investigating this change and its effects and I am convinced that, this change should be rolled back. I am trying to breakdown what is going on.\r\n\r\nA through associations is traditionally automatically saved as part of autosaving of associations. What that means is:\r\nassuming you have code like:\r\n\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  has_many :user_memberships\r\n  has_many :teams, through: :user_memberships\r\nend\r\n\r\nu = User.new()\r\nu.teams << Team.find(2)\r\n```\r\n\r\nThen when user object is saved, code in autosave_assocations.rb gets triggered and following bits of code ensures that, the join modal is created and saved:\r\n\r\n```ruby\r\nif autosave\r\n  saved = association.insert_record(record, false)\r\nelse\r\n   association.insert_record(record) unless reflection.nested?\r\nend\r\n```\r\n\r\nIf you see code of `insert_record` method, it automatically builds through record. \r\n\r\nOther than bugs (#6161 and possibly more) this pull request has introduced, let me show you another side effect of this PR. \r\n\r\n\r\n```ruby\r\nclass Article < ActiveRecord::Base\r\n  attr_accessible :content, :title\r\n  has_many :article_tags\r\n  has_many :tags, :through => :article_tags\r\n\r\n  before_validation :add_to_default_tag, :on => :create\r\n\r\n  def add_to_default_tag\r\n    if self.tags.empty?\r\n      self.tags << Tag.find_or_create_by_title(\"default\")\r\n    end\r\n  end\r\nend\r\n\r\nclass ArticleTag < ActiveRecord::Base\r\n  attr_accessible :article_id, :name, :tag_id\r\n\r\n  belongs_to :article\r\n  belongs_to :tag\r\n\r\n  validate :check_stuff\r\n\r\n  private\r\n  def check_stuff\r\n    puts \"whoa\"\r\n  end\r\n\r\nend\r\n```\r\n\r\nNow lets create a article:\r\n\r\n```ruby\r\narticle = Article.new(:title => \"hemant\", :content => \"kumar\")\r\narticle.save\r\n=> \"Whoa\"\r\n=> \"Whoa\"\r\n=> \"Whoa\"\r\n```\r\n\r\nIn other words the join record is getting created 3 times. One from newly introduced `concat_records` method and then again from autosave_assocation.rb. \r\n\r\nIf join records must be created while building the object itself, rather than when saving the record. I would want to know why.  Using `inverse_of` argument is not convincing and I suspect specifying it in a big project is not always possible (or should be introduced in a major release. like 3.3.0, not in 3.2.9) .\r\n\r\n\\cc @ernie @tenderlove @dhh \r\n\r\n\r\n\r\n", "_id": {"$oid": "5237f947bd3543c15100b40a"}, "issue_id": 7661, "url": "https://api.github.com/repos/rails/rails/issues/comments/11953206", "html_url": "https://github.com/rails/rails/pull/7661#issuecomment-11953206", "updated_at": "2013-01-07T14:28:24Z", "user": {"subscriptions_url": "https://api.github.com/users/gnufied/subscriptions", "events_url": "https://api.github.com/users/gnufied/events{/privacy}", "repos_url": "https://api.github.com/users/gnufied/repos", "gists_url": "https://api.github.com/users/gnufied/gists{/gist_id}", "url": "https://api.github.com/users/gnufied", "login": "gnufied", "gravatar_id": "6cb0b3e9e50fe72285047eac56209f49", "html_url": "https://github.com/gnufied", "following_url": "https://api.github.com/users/gnufied/following{/other_user}", "received_events_url": "https://api.github.com/users/gnufied/received_events", "organizations_url": "https://api.github.com/users/gnufied/orgs", "avatar_url": "https://0.gravatar.com/avatar/6cb0b3e9e50fe72285047eac56209f49?d=https%3A%2F%2Fidenticons.github.com%2F07cdfd23373b17c6b337251c22b7ea57.png", "starred_url": "https://api.github.com/users/gnufied/starred{/owner}{/repo}", "id": 278, "followers_url": "https://api.github.com/users/gnufied/followers", "type": "User"}, "created_at": "2013-01-07T14:25:30Z", "id": 11953206, "owner": "rails"}
