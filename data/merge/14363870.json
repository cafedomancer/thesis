{"updated_at": "2013-03-04T04:48:11Z", "repo": "rails", "created_at": "2013-03-04T04:48:11Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/14363870", "id": 14363870, "issue_url": "https://api.github.com/repos/rails/rails/issues/9522", "issue_id": 9522, "user": {"repos_url": "https://api.github.com/users/egilburg/repos", "type": "User", "html_url": "https://github.com/egilburg", "starred_url": "https://api.github.com/users/egilburg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/egilburg/subscriptions", "following_url": "https://api.github.com/users/egilburg/following{/other_user}", "gravatar_id": "cc4f5494a8dcaaf577e678cb3901dab6", "organizations_url": "https://api.github.com/users/egilburg/orgs", "url": "https://api.github.com/users/egilburg", "gists_url": "https://api.github.com/users/egilburg/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/cc4f5494a8dcaaf577e678cb3901dab6?d=https%3A%2F%2Fidenticons.github.com%2F552d65b6e9616642fd0217dc7f8361bd.png", "id": 242532, "events_url": "https://api.github.com/users/egilburg/events{/privacy}", "login": "egilburg", "received_events_url": "https://api.github.com/users/egilburg/received_events", "followers_url": "https://api.github.com/users/egilburg/followers"}, "body": "I support the idea as I would really like to see such behaviour be automatic (I never understood why parent.children.build, a very commo pattern, doesn't set parent on children without :inverse_of which is a somewhat less known option). That being said, I have some questions about implementation. \r\n\r\nWould this work with `:class_name` option? I'm also concerned that there seems to be no caching, which can cause performance issues with those to_sym and rescue on every association call.\r\n\r\nAlso, if parent has_many children and child belongs_to parent, then when using syntax `parent.children.build`, parent.children is an association object and should know the parent's ruby class and association type. Would it be possible to use this information to deterministically find the parent rather than heuristically? (e.g. try to symbolize keys and rescue if not found)\r\n", "_id": {"$oid": "523d1ea1bd354364b9004dc0"}, "html_url": "https://github.com/rails/rails/pull/9522#issuecomment-14363870"}
