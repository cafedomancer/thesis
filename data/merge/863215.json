{"issue_url": "https://api.github.com/repos/rails/rails/issues/201", "repo": "rails", "body": "-1 on this from me. Doing the count on a subquery forces the database to do full scan of the subquery. This can be very slow even on quite small datasets (e.g. my MacBook to 0.5 seconds to do the query 'SELECT COUNT(*) FROM (SELECT * FROM products LIMIT 500 OFFSET 0) AS t' where the products table contains 3000 records).\r\n\r\nIf a developer needs to know the number of records on the next page then this can be calculated very cheaply from a will_paginate or thinking-sphinx result, e.g:\r\n\r\n    # Given a results instance r\r\n    [[r.total_entries - r.offset, r.per_page].min, 0].max ", "_id": {"$oid": "523865dcbd3543c151012746"}, "issue_id": 201, "url": "https://api.github.com/repos/rails/rails/issues/comments/863215", "html_url": "https://github.com/rails/rails/pull/201#issuecomment-863215", "updated_at": "2011-03-12T08:20:11Z", "user": {"subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions", "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}", "repos_url": "https://api.github.com/users/pixeltrix/repos", "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}", "url": "https://api.github.com/users/pixeltrix", "login": "pixeltrix", "gravatar_id": "b14001f2b40640dd6cb63f0e8f1f4869", "html_url": "https://github.com/pixeltrix", "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}", "received_events_url": "https://api.github.com/users/pixeltrix/received_events", "organizations_url": "https://api.github.com/users/pixeltrix/orgs", "avatar_url": "https://1.gravatar.com/avatar/b14001f2b40640dd6cb63f0e8f1f4869?d=https%3A%2F%2Fidenticons.github.com%2F7cb36e23529e4de4c41460940cc85e6e.png", "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}", "id": 6321, "followers_url": "https://api.github.com/users/pixeltrix/followers", "type": "User"}, "created_at": "2011-03-12T08:20:11Z", "id": 863215, "owner": "rails"}
