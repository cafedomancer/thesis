{"body": "Hmm, I've got a big problem with that myself, although it's the call of core group, I'd beg you to reconsider. \r\n\r\nThe current ConnectionPool does a pretty great job of doing what it does -- especially after these couple recent bug fixes. \r\n\r\nThis is what a pool DOES, this is what a pool is for, managing an n-to-m mapping of resources to consumers, where you can have more consumers than resources, using a checkout system.  Any other language/environment that supports threading has such pools, like Java does.  There's a whole lot of accumulated knowledge and bugfixes and improvements that went into making the current AR ConnectionPool work as well it does -- it works WAY better than it did in Rails 2.1 or 2.3 days, and with these bug fixes I believe it works pretty damn good (at least my app is finally behaving in a manner that makes sense to me). \r\n\r\nIt's got nothing to do with managing communicating between threads -- there's no support for that now, and there doesn't need to be. It's not the connectionpool's responsibility to manage 'inter-process communication' -- it is the connectionpool's reponsibility to let M consumers share N resources, using a checkin/checkout convention. That's what a pool is for.  \r\n\r\nI agree with getting rid of 'implicit checkout'.  In any intentionally multi-threaded application, you should be using `with_connection` as your main goto tool. \r\n\r\nI think getting rid of the ConnectionPool actually _being_ a pool and allowing n-to-m management is a horrible shame though. Seriously, might you reconsider? It's working well for me after this bugfixes.  In a multi-threaded application, you _want_ many threads to be able to take short checkouts of limited resources (like db connections), sharing them among threads. To require there be as many connections as there are worker threads is such a limitation that you're barely supporting multiple-threaded use at all (hello DataMapper, which I believe will allow an n-to-m mapping of workers to db connections just fine). \r\n\r\nIf you really want to move there, I suppose someone else could pull out the 3-2-stable connectionpool and make it an optional gem for Rails 4. But that'll get increasingly hard to do as Rails diverges -- it was a hard-fought battle to get this stuff working as well as it does! (But I thought you told me hardly anything had changed in master compared to 3-2-stable just yet, heh)", "url": "https://api.github.com/repos/rails/rails/issues/comments/4489945", "created_at": "2012-03-14T00:46:59Z", "html_url": "https://github.com/rails/rails/pull/5423#issuecomment-4489945", "updated_at": "2012-03-14T00:46:59Z", "repo": "rails", "issue_id": 5423, "user": {"following_url": "https://api.github.com/users/jrochkind/following{/other_user}", "events_url": "https://api.github.com/users/jrochkind/events{/privacy}", "organizations_url": "https://api.github.com/users/jrochkind/orgs", "url": "https://api.github.com/users/jrochkind", "gists_url": "https://api.github.com/users/jrochkind/gists{/gist_id}", "html_url": "https://github.com/jrochkind", "subscriptions_url": "https://api.github.com/users/jrochkind/subscriptions", "avatar_url": "https://1.gravatar.com/avatar/6a13e655e637138f8d571cec3f9cea76?d=https%3A%2F%2Fidenticons.github.com%2Fd54ea80e1dddb765bab019d4dfe36c23.png", "repos_url": "https://api.github.com/users/jrochkind/repos", "received_events_url": "https://api.github.com/users/jrochkind/received_events", "gravatar_id": "6a13e655e637138f8d571cec3f9cea76", "starred_url": "https://api.github.com/users/jrochkind/starred{/owner}{/repo}", "login": "jrochkind", "type": "User", "id": 149304, "followers_url": "https://api.github.com/users/jrochkind/followers"}, "owner": "rails", "_id": {"$oid": "5238182abd3543c15100e011"}, "id": 4489945, "issue_url": "https://api.github.com/repos/rails/rails/issues/5423"}
