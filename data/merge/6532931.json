{"updated_at": "2012-06-24T13:47:29Z", "repo": "rails", "created_at": "2012-06-24T13:43:12Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/6532931", "id": 6532931, "issue_url": "https://api.github.com/repos/rails/rails/issues/6839", "issue_id": 6839, "user": {"repos_url": "https://api.github.com/users/mauricio/repos", "type": "User", "html_url": "https://github.com/mauricio", "starred_url": "https://api.github.com/users/mauricio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mauricio/subscriptions", "following_url": "https://api.github.com/users/mauricio/following{/other_user}", "gravatar_id": "a91bd6cef23eb3516245a092e196c4da", "organizations_url": "https://api.github.com/users/mauricio/orgs", "url": "https://api.github.com/users/mauricio", "gists_url": "https://api.github.com/users/mauricio/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/a91bd6cef23eb3516245a092e196c4da?d=https%3A%2F%2Fidenticons.github.com%2Fc7be03f5d811ed29c328526ca8ab0d61.png", "id": 5742, "events_url": "https://api.github.com/users/mauricio/events{/privacy}", "login": "mauricio", "received_events_url": "https://api.github.com/users/mauricio/received_events", "followers_url": "https://api.github.com/users/mauricio/followers"}, "body": "I don't know how DelayedJob works so I'm going to do an example based on Resque and ResqueMailer alone.\n\nI have [this simple project](https://github.com/mauricio/failed_resque_mailer) and I call the mailer like this:\n\n```ruby\nPostMailer.new_post( Post.last ).deliver\n```\nSince it uses Resque, the Post object (that is an AR object) will be turned to JSON like this:\n\n```ruby\n{\"body\"=>\"sample\", \"id\"=>1, \"title\"=>\"sample\"}\n```\n\nThere is no class information whatsoever here. \n\nWhen I start Resque to start working on this queue this is what happens:\n\n```\n** [10:12:36 2012-06-24] 1408: Checking mailer\n** [10:12:36 2012-06-24] 1408: Found job on mailer\n** [10:12:36 2012-06-24] 1408: got: (Job{mailer} | PostMailer | [\"post_created\", {\"body\"=>\"sample\", \"id\"=>1, \"title\"=>\"sample\"}])\n** [10:12:36 2012-06-24] 1408: resque-1.20.0: Forked 1431 at 1340543556\n** [10:12:36 2012-06-24] 1431: resque-1.20.0: Processing mailer since 1340543556\n** [10:12:36 2012-06-24] 1431: (Job{mailer} | PostMailer | [\"post_created\", {\"body\"=>\"sample\", \"id\"=>1, \"title\"=>\"sample\"}]) failed: #<NoMethodError: undefined method `title' for {\"body\"=>\"sample\", \"id\"=>1, \"title\"=>\"sample\"}:Hash>\n```\nResque won't be able to figure out what this object was (a Post object) and all it sees is a hash, that doesn't have the `title` method (but has a `title` key, which is also important, as Resque turns `Symbol` objects into `String`, so, if your mailer parameters is a symbolized hash, all keys will become strings and you will also have to work around this).\n\nA couple of years ago I even created [a gem that delivers emails using Resque](https://github.com/mauricio/resque_action_mailer_backend_example) exactly because of this impossibility of using AR objects as parameters and using AR objects as mailer parameters seems to be a very common practice when using mailers.\n\nSo I think it would be nice at least to let the users know that they need to understand how their queue implementation works before turning something like this on or just ignore it and send the TMail object encoded as string over the wire.", "_id": {"$oid": "523802c3bd3543c15100c36f"}, "html_url": "https://github.com/rails/rails/pull/6839#issuecomment-6532931"}
