{"updated_at": "2011-12-28T20:38:41Z", "repo": "rails", "created_at": "2011-12-28T20:38:41Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/3294852", "id": 3294852, "issue_url": "https://api.github.com/repos/rails/rails/issues/4220", "issue_id": 4220, "user": {"repos_url": "https://api.github.com/users/bensie/repos", "type": "User", "html_url": "https://github.com/bensie", "starred_url": "https://api.github.com/users/bensie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bensie/subscriptions", "following_url": "https://api.github.com/users/bensie/following{/other_user}", "gravatar_id": "80643cc5c7a70d4cdddebc3185cd3c18", "organizations_url": "https://api.github.com/users/bensie/orgs", "url": "https://api.github.com/users/bensie", "gists_url": "https://api.github.com/users/bensie/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/80643cc5c7a70d4cdddebc3185cd3c18?d=https%3A%2F%2Fidenticons.github.com%2F2f364281f619584f24f63a794a12e354.png", "id": 4595, "events_url": "https://api.github.com/users/bensie/events{/privacy}", "login": "bensie", "received_events_url": "https://api.github.com/users/bensie/received_events", "followers_url": "https://api.github.com/users/bensie/followers"}, "body": "@tenderlove Any chance we can just revert to:\r\n\r\n```ruby\r\n  def singleton_class?\r\n    # in case somebody is crazy enough to overwrite allocate\r\n    allocate = Class.instance_method(:allocate)\r\n    # object.class always points to a real (non-singleton) class\r\n    allocate.bind(self).call.class != self\r\n  rescue TypeError\r\n    # MRI/YARV/JRuby all disallow creating new instances of a singleton class\r\n    true\r\n  end\r\n```\r\n\r\nThis worked fine.\r\n\r\n@tonycoco Can you produce a failing test that shows the breakage you're seeing?  I've been unable to reproduce in the AS tests so far.", "_id": {"$oid": "523829c3bd3543c15100f091"}, "html_url": "https://github.com/rails/rails/pull/4220#issuecomment-3294852"}
