{"updated_at": "2012-11-17T23:21:38Z", "repo": "rails", "created_at": "2012-11-17T23:21:38Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/10480297", "id": 10480297, "issue_url": "https://api.github.com/repos/rails/rails/issues/8246", "issue_id": 8246, "user": {"repos_url": "https://api.github.com/users/fxn/repos", "type": "User", "html_url": "https://github.com/fxn", "starred_url": "https://api.github.com/users/fxn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxn/subscriptions", "following_url": "https://api.github.com/users/fxn/following{/other_user}", "gravatar_id": "7223c62b7310e164eb79c740188abbda", "organizations_url": "https://api.github.com/users/fxn/orgs", "url": "https://api.github.com/users/fxn", "gists_url": "https://api.github.com/users/fxn/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/7223c62b7310e164eb79c740188abbda?d=https%3A%2F%2Fidenticons.github.com%2F4a11654ad1e1e48352252859ff3032a0.png", "id": 3387, "events_url": "https://api.github.com/users/fxn/events{/privacy}", "login": "fxn", "received_events_url": "https://api.github.com/users/fxn/received_events", "followers_url": "https://api.github.com/users/fxn/followers"}, "body": "Cool, thanks for this work. Let me give you some feedback on the proposal:\r\n\r\nWhile I understand the intention of introducing the ObjectSerializer, as I suggested previously I'd prefer to decorate `Marshal.load`. I mean, `alias_method_chain` decoration.\r\n\r\nThe ObjectSerializer class would introduce a new contract that all cache stores, core and plugins, should use. Note that the very memcache store the patch updates does **not** use the new `dump`. So it is no following the contract, if we change `dump` later the store won't use the new version.\r\n\r\nThe thing is that the mismatch is not really in `ActiveSupport::Cache` vs constant autoloading. That's a symptom of the core issue. The core of this problem is that constant autoloading does not play well with `Marshal.load`. That affects to *any* usage of `Marshal.load`, either there or anywhere else, including direct usage by the end user. And I believe that is what AS has to address.\r\n\r\nRegarding the tests, while we are preventing an exception from being raised, what we really want to test is that loading the serialized data yields what we dumped. So instead of basing the tests on `assert_nothing_raised` it would be better to write assertions about the objects that we expect to load.\r\n\r\nThen a couple of stylistic points:\r\n\r\n* Would be nice that the code follows our [code conventions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#follow-the-coding-conventions). In particular a space after the hash that opens a comment, and a space after commas in arguments/parameters.\r\n\r\n* The regexp that captures the class name from the exception message could use an alternative delimiter to avoid the need of a backslash, and the anchor `$` is redundant, no need to put that anchor.\r\n\r\nFinally, this needs to be registered in the CHANGELOG of Active Support.\r\n\r\nCould you please give it a second pass?", "_id": {"$oid": "523da0f4bd354364b900870f"}, "html_url": "https://github.com/rails/rails/pull/8246#issuecomment-10480297"}
