{"updated_at": "2013-03-06T04:12:23Z", "repo": "rails", "created_at": "2013-03-06T04:11:15Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/14481624", "id": 14481624, "issue_url": "https://api.github.com/repos/rails/rails/issues/9522", "issue_id": 9522, "user": {"repos_url": "https://api.github.com/users/wangjohn/repos", "type": "User", "html_url": "https://github.com/wangjohn", "starred_url": "https://api.github.com/users/wangjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangjohn/subscriptions", "following_url": "https://api.github.com/users/wangjohn/following{/other_user}", "gravatar_id": "ddbca6015f428461aa5ed3b5f0fb74ab", "organizations_url": "https://api.github.com/users/wangjohn/orgs", "url": "https://api.github.com/users/wangjohn", "gists_url": "https://api.github.com/users/wangjohn/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/ddbca6015f428461aa5ed3b5f0fb74ab?d=https%3A%2F%2Fidenticons.github.com%2F0f072cda8c91e247b8dd76fa1b10a64e.png", "id": 1075780, "events_url": "https://api.github.com/users/wangjohn/events{/privacy}", "login": "wangjohn", "received_events_url": "https://api.github.com/users/wangjohn/received_events", "followers_url": "https://api.github.com/users/wangjohn/followers"}, "body": "I've done a bunch of things to improve this PR. First, I've added caching as @egilburg suggested. The results for each reflection are computed once and stored in the ``@automatic_inverse_of`` (the user can also clear this cache using ``remove_automatic_inverse_of!``). \r\n\r\nSecond, I've added the ability for a user to opt out of having the reflection automatically find an inverse, as @al2o3cr  suggested. You can now use the following syntax to opt out of the automatic inverse finding:\r\n\r\n```ruby\r\nhas_many :posts, :automatic_inverse_of => false\r\n```\r\n\r\nThe option only works when you are given an explicit ``false`` value. \r\n\r\nThird, I've limited the method so that that when particular options are specified on an association, the automatic inverse finding will fail. The association options that cause a failure in the automatic inverse finder are specified in:\r\n\r\n```ruby\r\nINVALID_AUTOMATIC_INVERSE_OPTIONS = [:class_name, :conditions, :through, :polymorphic, :foreign_key]\r\n```\r\n\r\nThese options are checked for both the current reflection and the potential inverse. \r\n\r\nAs a side note: a couple of the models in the ActiveRecord tests had to be changed to ``:automatic_inverse_of => false`` because they relied on the models not have inverses.", "_id": {"$oid": "523d1ea1bd354364b9004dc3"}, "html_url": "https://github.com/rails/rails/pull/9522#issuecomment-14481624"}
