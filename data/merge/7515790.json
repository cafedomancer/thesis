{"body": "@rafaelfranca maybe it's not worth the added complexity, but I do feel like it's more consistent with other ActiveRecord APIs. When I'm working with models, I tend to be thinking in terms of relationships and objects as opposed to database columns. Take the following two examples:\n\n```ruby\n# associations use models and hide foreign key details\nbelongs_to :author\n\n# creating related objects uses models too\nPost.new(:author => Author.first)\n```\n\nBut then when you are querying, you sort of shift to an object/database hybrid mindset:\n\n```ruby\nPost.where(:author_id => Author.first)\n```\n\nI am specifying the foreign key on one side, and the object on the other, and I think it can be hard to remember when you can use the associations and when you can't. Obviously a more practical approach would be to use `Author.first.posts`, but this gives flexibility in cases where you might not have the relationships fully setup.\n\nAnother useful thing about it is that it works with polymorphic belongs_to relationships as well:\n\n```ruby\nclass Image < ActiveRecord::Base\n  belongs_to :imageable, :polymorphic => true\nend\n\nclass Cat < ActiveRecord::Base\n  has_many :images, :as => :imageable, :dependent => :destroy\nend\n\n# So you can do...\nImage.where(:imageable => Cat.first)\n```\n\nHonestly though, I was just looking for an excuse to dig into the internals of ActiveRecord and it turned out to be much less hacky than I thought it would. I won't be offended if you guys give it a :-1: since it was a great learning experience. :)", "url": "https://api.github.com/repos/rails/rails/issues/comments/7515790", "created_at": "2012-08-06T03:01:14Z", "html_url": "https://github.com/rails/rails/pull/7273#issuecomment-7515790", "updated_at": "2012-08-06T03:01:14Z", "repo": "rails", "issue_id": 7273, "user": {"following_url": "https://api.github.com/users/beerlington/following{/other_user}", "events_url": "https://api.github.com/users/beerlington/events{/privacy}", "organizations_url": "https://api.github.com/users/beerlington/orgs", "url": "https://api.github.com/users/beerlington", "gists_url": "https://api.github.com/users/beerlington/gists{/gist_id}", "html_url": "https://github.com/beerlington", "subscriptions_url": "https://api.github.com/users/beerlington/subscriptions", "avatar_url": "https://0.gravatar.com/avatar/45b75f9f866d240362c0d7fa125025ba?d=https%3A%2F%2Fidenticons.github.com%2F75a8415011978d373d5ce689611a62cc.png", "repos_url": "https://api.github.com/users/beerlington/repos", "received_events_url": "https://api.github.com/users/beerlington/received_events", "gravatar_id": "45b75f9f866d240362c0d7fa125025ba", "starred_url": "https://api.github.com/users/beerlington/starred{/owner}{/repo}", "login": "beerlington", "type": "User", "id": 77580, "followers_url": "https://api.github.com/users/beerlington/followers"}, "owner": "rails", "_id": {"$oid": "523dfa91bd354364b900c0e6"}, "id": 7515790, "issue_url": "https://api.github.com/repos/rails/rails/issues/7273"}
