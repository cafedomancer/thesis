{"issue_url": "https://api.github.com/repos/rails/rails/issues/7713", "repo": "rails", "body": "So here is the problem:\n\nRack creates a `Tempfile` instance to give access to the uploaded file ([here](https://github.com/rack/rack/blob/master/lib/rack/multipart/parser.rb#L99)) and the tricky bit is that Ruby unlinks these files when it finalizes the objects.\n\nIn the case of `params[:file]` the instance is not going to be finalized because the `params` hash is alive, so I believe your code above is safe.\n\nIt is an unusual use case, but I see no reason not to support `close`. The implementation would need to accept an optional flag though to provide the same signature.", "_id": {"$oid": "523dcf5ebd354364b900a52f"}, "issue_id": 7713, "url": "https://api.github.com/repos/rails/rails/issues/comments/8782274", "html_url": "https://github.com/rails/rails/pull/7713#issuecomment-8782274", "updated_at": "2012-09-21T22:28:44Z", "user": {"subscriptions_url": "https://api.github.com/users/fxn/subscriptions", "events_url": "https://api.github.com/users/fxn/events{/privacy}", "repos_url": "https://api.github.com/users/fxn/repos", "gists_url": "https://api.github.com/users/fxn/gists{/gist_id}", "url": "https://api.github.com/users/fxn", "login": "fxn", "gravatar_id": "7223c62b7310e164eb79c740188abbda", "html_url": "https://github.com/fxn", "following_url": "https://api.github.com/users/fxn/following{/other_user}", "received_events_url": "https://api.github.com/users/fxn/received_events", "organizations_url": "https://api.github.com/users/fxn/orgs", "avatar_url": "https://0.gravatar.com/avatar/7223c62b7310e164eb79c740188abbda?d=https%3A%2F%2Fidenticons.github.com%2F4a11654ad1e1e48352252859ff3032a0.png", "starred_url": "https://api.github.com/users/fxn/starred{/owner}{/repo}", "id": 3387, "followers_url": "https://api.github.com/users/fxn/followers", "type": "User"}, "created_at": "2012-09-21T22:27:14Z", "id": 8782274, "owner": "rails"}
