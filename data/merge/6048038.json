{"updated_at": "2012-05-31T21:27:35Z", "repo": "rails", "created_at": "2012-05-31T21:26:17Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/6048038", "id": 6048038, "issue_url": "https://api.github.com/repos/rails/rails/issues/6492", "issue_id": 6492, "user": {"repos_url": "https://api.github.com/users/jrochkind/repos", "type": "User", "html_url": "https://github.com/jrochkind", "starred_url": "https://api.github.com/users/jrochkind/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrochkind/subscriptions", "following_url": "https://api.github.com/users/jrochkind/following{/other_user}", "gravatar_id": "6a13e655e637138f8d571cec3f9cea76", "organizations_url": "https://api.github.com/users/jrochkind/orgs", "url": "https://api.github.com/users/jrochkind", "gists_url": "https://api.github.com/users/jrochkind/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/6a13e655e637138f8d571cec3f9cea76?d=https%3A%2F%2Fidenticons.github.com%2Fd54ea80e1dddb765bab019d4dfe36c23.png", "id": 149304, "events_url": "https://api.github.com/users/jrochkind/events{/privacy}", "login": "jrochkind", "received_events_url": "https://api.github.com/users/jrochkind/received_events", "followers_url": "https://api.github.com/users/jrochkind/followers"}, "body": "> If I understand correctly, you have a condition (@queue.size > @num_waiting) evaluate to false (and thus poll with no timeout fails, sending you into the else branch) but, while still holding the lock, your log message says the condition now evaluates to true?\n\nYes, exactly. \n\nI have added a log line [here](https://github.com/pmahoney/rails/blob/02b233556377e9c40f17e2142d60cd82976ca9ea/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L427) , that logs `@available.size` (number of available connections) as well as `@available.num_waiting` (had to add a method to Queue to make that number available). \n\nThat line should not be reached unless [`@available.poll` with no argument](https://github.com/pmahoney/rails/blob/02b233556377e9c40f17e2142d60cd82976ca9ea/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L422) returns nil.  `@available.poll` with no argument should only return nil if [no_wait_poll](https://github.com/pmahoney/rails/blob/02b233556377e9c40f17e2142d60cd82976ca9ea/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L173) returns nil, which should only happen if **NOT** `@queue.size > @num_waiting`, as per [can_remove_no_wait](https://github.com/pmahoney/rails/blob/02b233556377e9c40f17e2142d60cd82976ca9ea/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L162)\n\nYet, my debug line sometimes outputs a `@queue.size` that's greater than `@num_waiting`. \n\nI don't know that this is really causing a significant problem -- it may be that when this happens, okay, the waiting thread goes to `@available.poll(@checkout_timeout)` (the next line), but then ends up immediately getting a connection without a `wait` anyhow.  I am not sure. \n\nBut it seems mysteriously unexplainable, and when weird mysterious unexplainable things happen with this kind of concurrency stuff, I get worried. ", "_id": {"$oid": "52380779bd3543c15100cabf"}, "html_url": "https://github.com/rails/rails/pull/6492#issuecomment-6048038"}
