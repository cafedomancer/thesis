{"body": "> Is it possible to modify the Sprockets compiler (which I believe is the root of all this trouble) so that we don't need new evocations to be able to reset it?\r\n\r\nPossibly, but you'd have to dig into the sprockets code base (not the `StaticCompiler` task helper used by the assets rake task) to disable the caching mechanism during compilation or something.\r\n\r\nThe other reason for re-invocation is to ensure that the `RAILS_GROUPS` and `RAILS_ENV` environment variables are set up correctly for asset compilation.  No real way round this that I've been able to come up with yet.\r\n\r\n> Additionally what is the reason that we are forcing undigested assets to be generated?\r\n\r\nThese are generated for use by static pages (error pages for example) or in emails.  Their use is somewhat of an edge case (IMHO) but necessary when you're in a situation where you have no idea what the digested name is.\r\n\r\nThere has been some previous discussion about how best to deal with this use case - there's a middleware that deals with it for example - but the simplest way to prevent the stack from being entered at all is to have them generated en masse at compilation time.\r\n\r\n(As an aside: I personally favour a web server URL rewriting configuration for dealing with this, but I understand that this is less than simple to get up and running and Rails can't really help you out with your web server configuration! :-)).\r\n\r\n", "url": "https://api.github.com/repos/rails/rails/issues/comments/2310952", "created_at": "2011-10-06T15:16:08Z", "html_url": "https://github.com/rails/rails/pull/3225#issuecomment-2310952", "updated_at": "2011-10-06T15:16:08Z", "repo": "rails", "issue_id": 3225, "user": {"following_url": "https://api.github.com/users/mjtko/following{/other_user}", "events_url": "https://api.github.com/users/mjtko/events{/privacy}", "organizations_url": "https://api.github.com/users/mjtko/orgs", "url": "https://api.github.com/users/mjtko", "gists_url": "https://api.github.com/users/mjtko/gists{/gist_id}", "html_url": "https://github.com/mjtko", "subscriptions_url": "https://api.github.com/users/mjtko/subscriptions", "avatar_url": "https://0.gravatar.com/avatar/be9f8a7e49b430ac89efe1bc8aa1026d?d=https%3A%2F%2Fidenticons.github.com%2F88d16337f620f14a9d05a6b5d459802c.png", "repos_url": "https://api.github.com/users/mjtko/repos", "received_events_url": "https://api.github.com/users/mjtko/received_events", "gravatar_id": "be9f8a7e49b430ac89efe1bc8aa1026d", "starred_url": "https://api.github.com/users/mjtko/starred{/owner}{/repo}", "login": "mjtko", "type": "User", "id": 206834, "followers_url": "https://api.github.com/users/mjtko/followers"}, "owner": "rails", "_id": {"$oid": "52383942bd3543c1510100a2"}, "id": 2310952, "issue_url": "https://api.github.com/repos/rails/rails/issues/3225"}
