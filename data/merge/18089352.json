{"body": "Oops, by \"security\" I meant development security (the same security a compiler would give you) and not the \"protecting from an attack security\".\r\n\r\n> If we decide to revert this change, please make sure that things work as you expect transitioning from Rails 3 to 4, and to make sure the upgrade guide explains the change\r\n\r\nWill do.\r\n\r\n> I don't think the scope option you propose would work. \r\n\r\nWhy? From what I have in mind it would work just fine since the engine routes come after.\r\n\r\n> If this is a legitimate use case, why should we have a warning? \"Warning: you are doing something perfectly reasonable.\" Either this is a legitimate use case or it isn't.\r\n\r\nAgreed. I believe this is a legitimate use case and if we don't want to support it directly, we should at least have an option to. Again, this is very inconsistent with how we do everything else in Ruby and Rails. For example:\r\n\r\n    respond_to do\r\n      format.html { render \"hello\" }\r\n      format.json { render json: @model }\r\n      format.html { render \"oops\" }\r\n    end\r\n\r\nBefore `respond_with` came out, plugins were use to have default blocks too:\r\n\r\n    def default_respond_to\r\n      respond_to do\r\n        format.html { render \"hello\" }\r\n        format.json { render json: @model }\r\n        yield format\r\n      end\r\n    end\r\n\r\nWe could raise an error on duplicated format calls above assuming people could accidentally duplicate formats but we would be punishing legit use cases. Similar things happen with callbacks, method definitions, etc. It just feels like a random restriction.", "url": "https://api.github.com/repos/rails/rails/issues/comments/18089352", "created_at": "2013-05-17T22:31:41Z", "html_url": "https://github.com/rails/rails/pull/9704#issuecomment-18089352", "updated_at": "2013-05-17T22:31:54Z", "repo": "rails", "issue_id": 9704, "user": {"following_url": "https://api.github.com/users/josevalim/following{/other_user}", "events_url": "https://api.github.com/users/josevalim/events{/privacy}", "organizations_url": "https://api.github.com/users/josevalim/orgs", "url": "https://api.github.com/users/josevalim", "gists_url": "https://api.github.com/users/josevalim/gists{/gist_id}", "html_url": "https://github.com/josevalim", "subscriptions_url": "https://api.github.com/users/josevalim/subscriptions", "avatar_url": "https://2.gravatar.com/avatar/e837f6b7fd146ab16ed3d663476c063e?d=https%3A%2F%2Fidenticons.github.com%2Fe20b21ae6508f22fc189c60a0880d0b8.png", "repos_url": "https://api.github.com/users/josevalim/repos", "received_events_url": "https://api.github.com/users/josevalim/received_events", "gravatar_id": "e837f6b7fd146ab16ed3d663476c063e", "starred_url": "https://api.github.com/users/josevalim/starred{/owner}{/repo}", "login": "josevalim", "type": "User", "id": 9582, "followers_url": "https://api.github.com/users/josevalim/followers"}, "owner": "rails", "_id": {"$oid": "523d10fbbd354364b90046ab"}, "id": 18089352, "issue_url": "https://api.github.com/repos/rails/rails/issues/9704"}
