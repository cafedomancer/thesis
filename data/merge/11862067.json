{"updated_at": "2013-01-03T21:39:28Z", "repo": "rails", "created_at": "2013-01-03T21:39:28Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/11862067", "id": 11862067, "issue_url": "https://api.github.com/repos/rails/rails/issues/8718", "issue_id": 8718, "user": {"repos_url": "https://api.github.com/users/jstirk/repos", "type": "User", "html_url": "https://github.com/jstirk", "starred_url": "https://api.github.com/users/jstirk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstirk/subscriptions", "following_url": "https://api.github.com/users/jstirk/following{/other_user}", "gravatar_id": "9155bf296c0cc5450b0b8edc82d149dd", "organizations_url": "https://api.github.com/users/jstirk/orgs", "url": "https://api.github.com/users/jstirk", "gists_url": "https://api.github.com/users/jstirk/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/9155bf296c0cc5450b0b8edc82d149dd?d=https%3A%2F%2Fidenticons.github.com%2Fb607aa5b2fd58dd860bfb55619389982.png", "id": 4892, "events_url": "https://api.github.com/users/jstirk/events{/privacy}", "login": "jstirk", "received_events_url": "https://api.github.com/users/jstirk/received_events", "followers_url": "https://api.github.com/users/jstirk/followers"}, "body": "@rafaelfranca OK, thanks for your feedback. I've updated the PR to remove the `id` check as you recommended, rebased and squashed.\r\n\r\nI was thinking about your comment about fixing the scope builder. From what I can see it looks possible to do things this way, but I think we would need to have a `ActiveRecord::*` exception raised rather than `NoMethodException` on calling `to_i`. We could then have `populate_with_current_scope_attributes` silently ignore just that exception when it tries to set an attribute.\r\n\r\nThe big benefit of that approach is that `post.category_id = Category.find(1)` would fail with an exception, but `Post.where(:category_id => [ 1, 2 ]).new` would work correctly.\r\n\r\nWhat do you think? I'm happy to prepare a separate PR for that if you think it's worthwhile, as it's a bit wider issue than this and probably needs a fair bit of discussion on how it works across all the types.", "_id": {"$oid": "5237f092bd3543c15100a2e9"}, "html_url": "https://github.com/rails/rails/pull/8718#issuecomment-11862067"}
