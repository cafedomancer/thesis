{"body": "But as we are based on@exception.name which is coming nil in ruby 2.0.0\r\n\r\nOr we can do something like  basically checks specially for \"::\" \r\n\r\nSo if split is become blank then return the word itself and that will be matched in first expression.\r\n\r\n```ruby\r\n    def const_regexp(camel_cased_word) #:nodoc:\r\n      parts = camel_cased_word.split(\"::\")\r\n      if parts.blank?\r\n        return camel_cased_word\r\n      end\r\n      last  = parts.pop\r\n\r\n      parts.reverse.inject(last) do |acc, part|\r\n        part.empty? ? acc : \"#{part}(::#{acc})?\"\r\n      end\r\n    end\r\n```", "url": "https://api.github.com/repos/rails/rails/issues/comments/19469613", "created_at": "2013-06-14T17:09:43Z", "html_url": "https://github.com/rails/rails/pull/10946#issuecomment-19469613", "updated_at": "2013-06-14T17:09:43Z", "repo": "rails", "issue_id": 10946, "user": {"following_url": "https://api.github.com/users/arunagw/following{/other_user}", "events_url": "https://api.github.com/users/arunagw/events{/privacy}", "organizations_url": "https://api.github.com/users/arunagw/orgs", "url": "https://api.github.com/users/arunagw", "gists_url": "https://api.github.com/users/arunagw/gists{/gist_id}", "html_url": "https://github.com/arunagw", "subscriptions_url": "https://api.github.com/users/arunagw/subscriptions", "avatar_url": "https://2.gravatar.com/avatar/ee85853909657f47c8a68e8a9bc7d992?d=https%3A%2F%2Fidenticons.github.com%2F6df182582740607da754e4515b70e32d.png", "repos_url": "https://api.github.com/users/arunagw/repos", "received_events_url": "https://api.github.com/users/arunagw/received_events", "gravatar_id": "ee85853909657f47c8a68e8a9bc7d992", "starred_url": "https://api.github.com/users/arunagw/starred{/owner}{/repo}", "login": "arunagw", "type": "User", "id": 3948, "followers_url": "https://api.github.com/users/arunagw/followers"}, "owner": "rails", "_id": {"$oid": "5237da6dbd3543c1510086e5"}, "id": 19469613, "issue_url": "https://api.github.com/repos/rails/rails/issues/10946"}
