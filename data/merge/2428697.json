{"issue_url": "https://api.github.com/repos/rails/rails/issues/3340", "repo": "rails", "body": "Jos\u00e9, you are absolutely correct: this is a much larger problem with boolean fields.  I hadn't considered that until I read your response.\r\n\r\nHowever, I am concerned that checking for all false values in this case might be overreaching.  What if I have a model called \"Amounts\" that does nothing but store dollar amounts where zero is a valid value?  Indiscriminately checking for false values would incorrectly reject the creation of this record.\r\n\r\nAs you mentioned, this is a problem with checkboxes, so I think what we really want to check is:  1) is the value blank   2) is the value false AND the attribute is a boolean field\r\n\r\nHowever, since _destroy does not actually exist on the model, it would also need to ignore this meta field separately.  This really starts to make implementation messy:\r\n\r\n<pre>\r\n# horrible, horrible pseudo-code -- only being shown as illustration\r\nproc { |attributes| attributes.all? { |key, value| value.blank? || key=='_destroy' || (FALSE_VALUES.include?(value) && boolean_column?(key))} }\r\n</pre>\r\n\r\nWhat are your thoughts on perusing a simpler implementation that handles 90%+ cases versus just allowing developers to implement their own rejection method?\r\n\r\nI'm willing to submit a patch either way.", "_id": {"$oid": "523f6d0dbd354364b9018014"}, "issue_id": 3340, "url": "https://api.github.com/repos/rails/rails/issues/comments/2428697", "html_url": "https://github.com/rails/rails/pull/3340#issuecomment-2428697", "updated_at": "2011-10-17T13:31:24Z", "user": {"subscriptions_url": "https://api.github.com/users/surfacedamage/subscriptions", "events_url": "https://api.github.com/users/surfacedamage/events{/privacy}", "repos_url": "https://api.github.com/users/surfacedamage/repos", "gists_url": "https://api.github.com/users/surfacedamage/gists{/gist_id}", "url": "https://api.github.com/users/surfacedamage", "login": "surfacedamage", "gravatar_id": "f8613ea4c0b83b835c69740e1105a91d", "html_url": "https://github.com/surfacedamage", "following_url": "https://api.github.com/users/surfacedamage/following{/other_user}", "received_events_url": "https://api.github.com/users/surfacedamage/received_events", "organizations_url": "https://api.github.com/users/surfacedamage/orgs", "avatar_url": "https://2.gravatar.com/avatar/f8613ea4c0b83b835c69740e1105a91d?d=https%3A%2F%2Fidenticons.github.com%2Fb6331792a66d1eab017c0f109aee728c.png", "starred_url": "https://api.github.com/users/surfacedamage/starred{/owner}{/repo}", "id": 18446, "followers_url": "https://api.github.com/users/surfacedamage/followers", "type": "User"}, "created_at": "2011-10-17T13:25:23Z", "id": 2428697, "owner": "rails"}
