{"updated_at": "2012-07-20T15:01:03Z", "repo": "rails", "created_at": "2012-07-20T15:01:03Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/7132357", "id": 7132357, "issue_url": "https://api.github.com/repos/rails/rails/issues/7007", "issue_id": 7007, "user": {"repos_url": "https://api.github.com/users/Mik-die/repos", "type": "User", "html_url": "https://github.com/Mik-die", "starred_url": "https://api.github.com/users/Mik-die/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mik-die/subscriptions", "following_url": "https://api.github.com/users/Mik-die/following{/other_user}", "gravatar_id": "7d116b912a4fc7986b40d5d0d0d811d6", "organizations_url": "https://api.github.com/users/Mik-die/orgs", "url": "https://api.github.com/users/Mik-die", "gists_url": "https://api.github.com/users/Mik-die/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/7d116b912a4fc7986b40d5d0d0d811d6?d=https%3A%2F%2Fidenticons.github.com%2Fa587d6b5be4a306d5b73620593d05627.png", "id": 426230, "events_url": "https://api.github.com/users/Mik-die/events{/privacy}", "login": "Mik-die", "received_events_url": "https://api.github.com/users/Mik-die/received_events", "followers_url": "https://api.github.com/users/Mik-die/followers"}, "body": "I don't understand, which _sensible_ code we can break by this patch..\n\nI can assume some code, that'll be broken after patch:\n\n```\nx = params.extract!(:x)\ndo_something if x.present? \ndo_something2 if x.has_key?(:x) \n```\nIn this code both methods ```do_something``` and ```do_something2``` run without patch, and don't run with patch. But this is not sensible code, because now x will always be present and always had key :x, therefore both conditions are redundant.\n\nOn the other hand, if we try to access key ```:x```, in both cases we get ```nil``` value", "_id": {"$oid": "523e1211bd354364b900d080"}, "html_url": "https://github.com/rails/rails/pull/7007#issuecomment-7132357"}
