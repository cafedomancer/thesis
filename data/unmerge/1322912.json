{"updated_at": "2011-06-07T21:53:26Z", "repo": "rails", "created_at": "2011-06-07T21:53:26Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/1322912", "id": 1322912, "issue_url": "https://api.github.com/repos/rails/rails/issues/1422", "issue_id": 1422, "user": {"repos_url": "https://api.github.com/users/tribalvibes/repos", "type": "User", "html_url": "https://github.com/tribalvibes", "starred_url": "https://api.github.com/users/tribalvibes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tribalvibes/subscriptions", "following_url": "https://api.github.com/users/tribalvibes/following{/other_user}", "gravatar_id": "251e5499b8ad4f6518e29a6a6f2b2c82", "organizations_url": "https://api.github.com/users/tribalvibes/orgs", "url": "https://api.github.com/users/tribalvibes", "gists_url": "https://api.github.com/users/tribalvibes/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/251e5499b8ad4f6518e29a6a6f2b2c82?d=https%3A%2F%2Fidenticons.github.com%2F38c0bb6153a37c4f42fbe27a45e3b51f.png", "id": 167275, "events_url": "https://api.github.com/users/tribalvibes/events{/privacy}", "login": "tribalvibes", "received_events_url": "https://api.github.com/users/tribalvibes/received_events", "followers_url": "https://api.github.com/users/tribalvibes/followers"}, "body": "Thanks, that's clarifying, except that \\#2 doesn't work.  If I remove the `require_dependency 'xx/location/geoip_geocoders'` it does not find `XX::Location::GeoipGeocoders` although it is properly nested and located. It gives the error:\r\n\r\n`You tried to call GeoipGeocoder#geocode, but GeoipGeocoder is not defined on /Users/xxx/dev/xxx/app/models/xx/location/location.rb:267:in `geoip'`\r\n\r\nwhere it  is referenced.  Does AS::Dependencies walk the folder tree only from the referencing `__FILE__`'s dir or does it start with `app/models`?\r\n\r\nUnless it's the problem of #1, in which case how do I tell Rails that the enclosing top-level module is really named `XX` and not `Xx` ?\r\n\r\nIt may be off-topic, but hopefully definitive answers will help others hitting the same problems over and over again.  Also could someone import lighthouse 2283 to github, and/or how could I gain read access to the old lighthouse tickets (other than goog cache?)\r\n\r\nI will try to extract a gist that demonstrates the problem, but it is exactly the situation we are discussing--Rails is not autoloading the tertiary nested model classes.", "_id": {"$oid": "523857a2bd3543c151011b8e"}, "html_url": "https://github.com/rails/rails/pull/1422#issuecomment-1322912"}
