{"body": "There'd be a small risk of people who just *happened* to store `cookies[:a] = {:value=>{:_expires=>1, :value=>\"asdf\"}}` but honestly, that's not worth the problems with the MessageVerifier approach where we have to attempt to provide backwards compatibility which is risky stuff.\r\n\r\nWhat's the attack where an attacker has control of your hash keys?  They could cause the application to generate an expired cookie that expired at a known time in cases where you currently generate non-expiring cookies?  They couldn't force your application to generate *unsigned* cookie or force your app to generate cookies which expire later than you wanted them to?\r\n\r\n", "url": "https://api.github.com/repos/rails/rails/issues/comments/20719431", "created_at": "2013-07-10T03:18:01Z", "html_url": "https://github.com/rails/rails/pull/11168#issuecomment-20719431", "updated_at": "2013-07-10T03:18:01Z", "repo": "rails", "issue_id": 11168, "user": {"following_url": "https://api.github.com/users/NZKoz/following{/other_user}", "events_url": "https://api.github.com/users/NZKoz/events{/privacy}", "organizations_url": "https://api.github.com/users/NZKoz/orgs", "url": "https://api.github.com/users/NZKoz", "gists_url": "https://api.github.com/users/NZKoz/gists{/gist_id}", "html_url": "https://github.com/NZKoz", "subscriptions_url": "https://api.github.com/users/NZKoz/subscriptions", "avatar_url": "https://2.gravatar.com/avatar/efa76b164a7de4a5730e4fa397cc4425?d=https%3A%2F%2Fidenticons.github.com%2F85d8ce590ad8981ca2c8286f79f59954.png", "repos_url": "https://api.github.com/users/NZKoz/repos", "received_events_url": "https://api.github.com/users/NZKoz/received_events", "gravatar_id": "efa76b164a7de4a5730e4fa397cc4425", "starred_url": "https://api.github.com/users/NZKoz/starred{/owner}{/repo}", "login": "NZKoz", "type": "User", "id": 197, "followers_url": "https://api.github.com/users/NZKoz/followers"}, "owner": "rails", "_id": {"$oid": "5237d81cbd3543c151008451"}, "id": 20719431, "issue_url": "https://api.github.com/repos/rails/rails/issues/11168"}
