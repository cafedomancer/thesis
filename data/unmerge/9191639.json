{"updated_at": "2012-10-05T22:21:28Z", "repo": "rails", "created_at": "2012-10-05T22:21:28Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/9191639", "id": 9191639, "issue_url": "https://api.github.com/repos/rails/rails/issues/2200", "issue_id": 2200, "user": {"repos_url": "https://api.github.com/users/grantovich/repos", "type": "User", "html_url": "https://github.com/grantovich", "starred_url": "https://api.github.com/users/grantovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grantovich/subscriptions", "following_url": "https://api.github.com/users/grantovich/following{/other_user}", "gravatar_id": "b6c92201404bd9b616fbba5e783cb3d8", "organizations_url": "https://api.github.com/users/grantovich/orgs", "url": "https://api.github.com/users/grantovich", "gists_url": "https://api.github.com/users/grantovich/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/b6c92201404bd9b616fbba5e783cb3d8?d=https%3A%2F%2Fidenticons.github.com%2F50bf48b85ed71ba0f25be359e2495785.png", "id": 394835, "events_url": "https://api.github.com/users/grantovich/events{/privacy}", "login": "grantovich", "received_events_url": "https://api.github.com/users/grantovich/received_events", "followers_url": "https://api.github.com/users/grantovich/followers"}, "body": "I also just ran into this issue, and after looking at the code it seems like overriding `serializable_hash` is closer to being the \"right\" thing to do. If anything it's actually less of a hack than overriding `as_json`. Sadly, this doesn't fix the many blogs and tutorials already out there that recommend the latter approach.\r\n\r\nIf the default `serializable_hash` can indeed get caught in an infinite loop, that would be a separate bug report/pull request (but I imagine if that was the case, the default `as_json` would also be susceptible to it, since it's just a thin wrapper around `serializable_hash`).", "_id": {"$oid": "5238472ebd3543c151011049"}, "html_url": "https://github.com/rails/rails/pull/2200#issuecomment-9191639"}
