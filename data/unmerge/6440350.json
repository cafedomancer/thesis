{"body": "@fxn totally agree.\n\nWe definitely need the preloading stuff to be per-environment, and I think those should stay as is (but we change to default to preloading in production).  I think the main point of contention is whether or not we insert `Rack::Lock` in the middleware.\n\n> Let me add I don't understand why we insert Rack::Lock, are there use cases where people want to deploy a non-thread-safe app in a threaded server? Seems a weird combination to me (and those users could insert the middleware themselves in any case). \n\nI have exactly the same doubts.  I'll need to check out the webrick situation though! :-)", "url": "https://api.github.com/repos/rails/rails/issues/comments/6440350", "created_at": "2012-06-19T23:09:54Z", "html_url": "https://github.com/rails/rails/pull/6685#issuecomment-6440350", "updated_at": "2012-06-19T23:09:54Z", "repo": "rails", "issue_id": 6685, "user": {"following_url": "https://api.github.com/users/tenderlove/following{/other_user}", "events_url": "https://api.github.com/users/tenderlove/events{/privacy}", "organizations_url": "https://api.github.com/users/tenderlove/orgs", "url": "https://api.github.com/users/tenderlove", "gists_url": "https://api.github.com/users/tenderlove/gists{/gist_id}", "html_url": "https://github.com/tenderlove", "subscriptions_url": "https://api.github.com/users/tenderlove/subscriptions", "avatar_url": "https://0.gravatar.com/avatar/f29327647a9cff5c69618bae420792ea?d=https%3A%2F%2Fidenticons.github.com%2F7c78335a8924215ea5c22fda1aac7b75.png", "repos_url": "https://api.github.com/users/tenderlove/repos", "received_events_url": "https://api.github.com/users/tenderlove/received_events", "gravatar_id": "f29327647a9cff5c69618bae420792ea", "starred_url": "https://api.github.com/users/tenderlove/starred{/owner}{/repo}", "login": "tenderlove", "type": "User", "id": 3124, "followers_url": "https://api.github.com/users/tenderlove/followers"}, "owner": "rails", "_id": {"$oid": "52380552bd3543c15100c714"}, "id": 6440350, "issue_url": "https://api.github.com/repos/rails/rails/issues/6685"}
