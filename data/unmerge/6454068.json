{"issue_url": "https://api.github.com/repos/rails/rails/issues/6685", "repo": "rails", "body": "Let's look at this sentence more closely:\n\n\"And of course, if your target is multi-process you do not write and should not bother to write thread-safe code.\"\n\nI would argue you're saying \"if your target is multi-process you should not bother to write safe code.\"\n\nThe potential here is that nearly all libraries and all apps might eventually be run in a threaded environment. By discouraging writing thread-safe code (and perhaps even encouraging thread-safety ignorance as here) we're just pushing those bugs to someone in the future. Is that what we want to do? Do we want Rails' legacy to remain \"unsafe by default\"?\n\nA large part of libraries out there spun off someone's project and grew from there. Encouraging people to ignore thread safety means more new libraries will have threading issues out of the box. That's what we want?\n\n\"As a consequence, statistically speaking, the vast majority of our users are going to need to comment out that line. And in my book that means the default value for the flag is wrong.\"\n\nSo Rails isn't opinionated anymore? :)\n\nI think Aaron's post pointed out that there's only one class of users that will ever have to turn threadsafe *off*: those who are writing code to target a threaded server and that don't want to write threadsafe code. Is that the horse we want to bet Rails' future on?\n\nIt's not hard to write thread-safe code in a Rails application. Simple rules will save any app:\n\n* Don't share mutable state\n* If you must share mutable state, mutex around all accesses to it\n\nThreading is a reality in the Ruby world (always has been) and now with JRuby parallel threading is seeing wide use. It's time for Rails to be threadsafe by default and time for us to start encouraging and helping users write threadsafe applications and libraries.", "_id": {"$oid": "52380552bd3543c15100c716"}, "issue_id": 6685, "url": "https://api.github.com/repos/rails/rails/issues/comments/6454068", "html_url": "https://github.com/rails/rails/pull/6685#issuecomment-6454068", "updated_at": "2012-06-20T13:42:13Z", "user": {"subscriptions_url": "https://api.github.com/users/headius/subscriptions", "events_url": "https://api.github.com/users/headius/events{/privacy}", "repos_url": "https://api.github.com/users/headius/repos", "gists_url": "https://api.github.com/users/headius/gists{/gist_id}", "url": "https://api.github.com/users/headius", "login": "headius", "gravatar_id": "f1d37642fdaa1662ff46e4c65731e9ab", "html_url": "https://github.com/headius", "following_url": "https://api.github.com/users/headius/following{/other_user}", "received_events_url": "https://api.github.com/users/headius/received_events", "organizations_url": "https://api.github.com/users/headius/orgs", "avatar_url": "https://1.gravatar.com/avatar/f1d37642fdaa1662ff46e4c65731e9ab?d=https%3A%2F%2Fidenticons.github.com%2F36bedb6eb7152f39b16328448942822b.png", "starred_url": "https://api.github.com/users/headius/starred{/owner}{/repo}", "id": 10135, "followers_url": "https://api.github.com/users/headius/followers", "type": "User"}, "created_at": "2012-06-20T13:41:23Z", "id": 6454068, "owner": "rails"}
