{"updated_at": "2012-05-07T14:26:20Z", "repo": "rails", "created_at": "2012-05-07T14:00:08Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/5550562", "id": 5550562, "issue_url": "https://api.github.com/repos/rails/rails/issues/6185", "issue_id": 6185, "user": {"repos_url": "https://api.github.com/users/erichmenge/repos", "type": "User", "html_url": "https://github.com/erichmenge", "starred_url": "https://api.github.com/users/erichmenge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erichmenge/subscriptions", "following_url": "https://api.github.com/users/erichmenge/following{/other_user}", "gravatar_id": "d309ddb80e1e28e6f8e3a9685d1f8b29", "organizations_url": "https://api.github.com/users/erichmenge/orgs", "url": "https://api.github.com/users/erichmenge", "gists_url": "https://api.github.com/users/erichmenge/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/d309ddb80e1e28e6f8e3a9685d1f8b29?d=https%3A%2F%2Fidenticons.github.com%2F54ffc15ef26ae3d74868acd1923d76e0.png", "id": 552146, "events_url": "https://api.github.com/users/erichmenge/events{/privacy}", "login": "erichmenge", "received_events_url": "https://api.github.com/users/erichmenge/received_events", "followers_url": "https://api.github.com/users/erichmenge/followers"}, "body": "@josevalim I take your point about the current message not being supposed to appear, and I agree with you on your points.  I guess what I'm confused about is this: If both the password and password_digest is validated, and password_digest is strict, wouldn't that always raise if the password is blank? Not giving an opportunity for the nice error message to be displayed since the validations chain?\r\n\r\n``` ruby\r\nhas_secure_password\r\nvalidates :password, presence: true, on: :create\r\n```\r\n\r\nWhen the user doesn't enter a password, as it is right now, two validation failures are displayed, `password: can't be blank` and `password_digest: can't be blank`.  With strict mode, it will raise an exception and not even display `password: can't be blank`.  Right?\r\n\r\nInstead of a validation, what if it was something like:\r\n\r\n``` ruby\r\nbefore_create -> { raise \"Password digest is blank\" if password_digest.blank? }\r\n```\r\n\r\nGiving the developer a chance to do validations the way he wants, but also ensuring that a user isn't created with a blank password digest?\r\n\r\nSorry if I'm frustrating you.  I feel like I must be missing something and am just trying to understand.\r\n\r\n", "_id": {"$oid": "52380cd0bd3543c15100d20e"}, "html_url": "https://github.com/rails/rails/pull/6185#issuecomment-5550562"}
