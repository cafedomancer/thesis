{"updated_at": "2012-03-01T17:49:21Z", "repo": "rails", "created_at": "2012-03-01T17:46:35Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/4263025", "id": 4263025, "issue_url": "https://api.github.com/repos/rails/rails/issues/5226", "issue_id": 5226, "user": {"repos_url": "https://api.github.com/users/seryl/repos", "type": "User", "html_url": "https://github.com/seryl", "starred_url": "https://api.github.com/users/seryl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seryl/subscriptions", "following_url": "https://api.github.com/users/seryl/following{/other_user}", "gravatar_id": "62836541449daf9d3d30c1db630468a3", "organizations_url": "https://api.github.com/users/seryl/orgs", "url": "https://api.github.com/users/seryl", "gists_url": "https://api.github.com/users/seryl/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/62836541449daf9d3d30c1db630468a3?d=https%3A%2F%2Fidenticons.github.com%2F3757ef8dbf4f63ea1ed090c08172fff5.png", "id": 134032, "events_url": "https://api.github.com/users/seryl/events{/privacy}", "login": "seryl", "received_events_url": "https://api.github.com/users/seryl/received_events", "followers_url": "https://api.github.com/users/seryl/followers"}, "body": "Given a schema:\r\n\r\n```ruby\r\nActiveRecord::Schema.define(:version => 1) do\r\n\r\n  create_table \"sample_table\", :force => true do |t|\r\n    t.string \"broken_string\"\r\n  end\r\n\r\nend\r\n````\r\nAnd corresponding model:\r\n\r\n````ruby\r\nclass SampleTable < ActiveRecord::Base\r\n  attr_accessible :broken_string\r\nend\r\n````\r\nI have this bin file:\r\n\r\n````ruby\r\n#!/usr/bin/env ruby\r\n$:.unshift File.join(File.dirname(__FILE__), '..', 'app')\r\n\r\nrequire 'break_sqlite'\r\n\r\nBreakSqlite.new\r\n````\r\n\r\nwhich loads app/break_sqlite.rb:\r\n\r\n````ruby\r\n$:.unshift File.dirname(__FILE__)\r\nrequire 'securerandom'\r\nrequire 'active_record'\r\nrequire 'models/sample_table'\r\n\r\nclass BreakSqlite\r\n  DATABASE_CONFIG = {\r\n    :adapter => \"sqlite3\",\r\n    :database => \"db/development.sqlite3\"\r\n  }\r\n  \r\n  def initialize\r\n    ActiveRecord::Base.establish_connection(DATABASE_CONFIG)\r\n    ActiveRecord::Base.connection\r\n    \r\n    require 'pry'\r\n    binding.pry\r\n  end\r\n  \r\n  def example\r\n    st = SampleTable.new\r\n    st.broken_string = SecureRandom.hex\r\n    st.save\r\n  end\r\nend\r\n````\r\n\r\nBreaks with:\r\n\r\n````bash\r\njtoft@mogu: Desktop/testing> rake db:migrate          \r\n==  CreateSampleTables: migrating =============================================\r\n-- create_table(:sample_tables)\r\n   -> 0.0007s\r\n==  CreateSampleTables: migrated (0.0008s) ====================================\r\n\r\njtoft@mogu: Desktop/testing> ./bin/break_sqlite \r\n\r\nFrom: /Users/jtoft/Desktop/testing/app/break_sqlite.rb @ line 17 in BreakSqlite#initialize:\r\n````\r\n\r\n````ruby\r\n\r\n    12:   def initialize\r\n    13:     ActiveRecord::Base.establish_connection(DATABASE_CONFIG)\r\n    14:     ActiveRecord::Base.connection\r\n    15:     \r\n    16:     require 'pry'\r\n => 17:     binding.pry\r\n    18:   end\r\n    19:   \r\n    20:   def example\r\n    21:     st = SampleTable.new\r\n    22:     st.broken_string = SecureRandom.hex\r\n````\r\n\r\n````ruby\r\n[1] pry(#<BreakSqlite>)> example\r\nActiveRecord::StatementInvalid: NoMethodError: undefined method `error' for nil:NilClass: INSERT INTO \"sample_tables\" (\"broken_string\") VALUES (?)\r\nfrom /Users/jtoft/.rvm/gems/ruby-1.9.3-p0@testing/gems/activerecord-3.2.1/lib/active_record/connection_adapters/sqlite_adapter.rb:212:in `type_cast'\r\n[2] pry(#<BreakSqlite>)>\r\n````\r\n\r\nThe problem occurs because of the following:\r\n\r\n````bash\r\njtoft@mogu: Desktop/testing> sed '211,214!d' ~/.rvm/gems/ruby-1.9.3-p0@testing/gems/activerecord-3.2.1/lib/active_record/connection_adapters/sqlite_adapter.rb\r\n````\r\n\r\n````ruby\r\n  if column.type == :string && value.encoding == Encoding::ASCII_8BIT\r\n    @logger.error \"Binary data inserted for `string` type on column `#{column.name}`\"\r\n    value.encode! 'utf-8'\r\n  end\r\n````\r\n\r\nWhen you pry into the sqlite_adapter, you'll see that the column.type here is :string, but the value.encoding is Encoding::US_ASCII.\r\n\r\nSo the exception is thrown because US_ASCII isn't handled.\r\n\r\nSeem reasonable?", "_id": {"$oid": "52381b1bbd3543c15100e3a1"}, "html_url": "https://github.com/rails/rails/pull/5226#issuecomment-4263025"}
