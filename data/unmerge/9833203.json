{"updated_at": "2012-10-27T06:47:14Z", "repo": "rails", "created_at": "2012-10-27T06:47:14Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/9833203", "id": 9833203, "issue_url": "https://api.github.com/repos/rails/rails/issues/7806", "issue_id": 7806, "user": {"repos_url": "https://api.github.com/users/jarl-dk/repos", "type": "User", "html_url": "https://github.com/jarl-dk", "starred_url": "https://api.github.com/users/jarl-dk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jarl-dk/subscriptions", "following_url": "https://api.github.com/users/jarl-dk/following{/other_user}", "gravatar_id": "968fba3ba6e5df2df68a458218be7104", "organizations_url": "https://api.github.com/users/jarl-dk/orgs", "url": "https://api.github.com/users/jarl-dk", "gists_url": "https://api.github.com/users/jarl-dk/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/968fba3ba6e5df2df68a458218be7104?d=https%3A%2F%2Fidenticons.github.com%2Fd0cac2a26433f3f23b23854cd7d9215e.png", "id": 191521, "events_url": "https://api.github.com/users/jarl-dk/events{/privacy}", "login": "jarl-dk", "received_events_url": "https://api.github.com/users/jarl-dk/received_events", "followers_url": "https://api.github.com/users/jarl-dk/followers"}, "body": "@rafaelfranca : Good point that it can be set per application.\r\n\r\nI agree with your conclusion. It is not the responsibility of Rails to support specific file systems. To be honest I think actually that it is a problem with eCryptFS (not with Rails) that it has such a rather low limitation on file name size as 143 opposed to many other file systems which has a limit on 255 (and some even no limit at all). However I would like to emphasize some things:\r\n\r\n1. I ran into this because I was hacking rails in my home dir (which is eCryptFS), so developing Rails is not recommended/supported on eCryptFS.\r\n1. People running Rails application in production on eCryptFS (maybe due to privacy/security/encryption policies) will not discover this problem until it is too late.\r\n\r\nPoint 1 is not a big issue... But regarding point 2: is there anything that can be done to warn these people (I am not one of them) earlier than \"too late\". Maybe emphasize in release notes or warning in the log at application boot or something else. A warning at boot time could be done by probing the file system being capable of creating files with names up to 255 characters. Such probe will not be eCryptFS specific but will just examine the file system capability in general. Kind of like using `file_system.respond_to? :create_file_name_up_to_255_characters` in the boot process before exploiting that capability later on during run-time. Or should these poor people installing Rails apps on eCryptFS just experience the issue with the flawed file system the hard way?\r\n", "_id": {"$oid": "5237f8b0bd3543c15100b324"}, "html_url": "https://github.com/rails/rails/pull/7806#issuecomment-9833203"}
