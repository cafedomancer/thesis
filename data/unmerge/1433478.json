{"updated_at": "2011-06-24T16:42:02Z", "repo": "rails", "created_at": "2011-06-24T16:28:28Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/1433478", "id": 1433478, "issue_url": "https://api.github.com/repos/rails/rails/issues/1846", "issue_id": 1846, "user": {"repos_url": "https://api.github.com/users/barttenbrinke/repos", "type": "User", "html_url": "https://github.com/barttenbrinke", "starred_url": "https://api.github.com/users/barttenbrinke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barttenbrinke/subscriptions", "following_url": "https://api.github.com/users/barttenbrinke/following{/other_user}", "gravatar_id": "a49172d1ddae42fa062770b59823c01d", "organizations_url": "https://api.github.com/users/barttenbrinke/orgs", "url": "https://api.github.com/users/barttenbrinke", "gists_url": "https://api.github.com/users/barttenbrinke/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/a49172d1ddae42fa062770b59823c01d?d=https%3A%2F%2Fidenticons.github.com%2F313e98866f7643ecdbf07e2ba4cfc55b.png", "id": 8935, "events_url": "https://api.github.com/users/barttenbrinke/events{/privacy}", "login": "barttenbrinke", "received_events_url": "https://api.github.com/users/barttenbrinke/received_events", "followers_url": "https://api.github.com/users/barttenbrinke/followers"}, "body": "I was thinking I might need to clarify the locking issues.\r\nEventhough SessionStore uses ActiveReord, Rack still handles the session. This is what happens when a single user opens a rails website that uses SessionStore. Say the site has a dashboard that fires 3 ajax requests:\r\n\r\nWithout patch:\r\n\r\n      /widgets/1.js-----[Rack load session] [Rails Render] [Rack saves session ] [Response to user]\r\n      /widgets/2.js-----[Rack load session] [Rails Render] [Rack wait for save ] [Rack saves session] [Response to user]\r\n      /widgets/3.js-----[Rack load session] [Rails Render] [Rack wait for save ...................  ] [Rack saves session] [Response to user]\r\n\r\nWith patch:\r\n\r\n      /widgets/1.js-----[Rack load session] [Rails Render] [Response to user]\r\n      /widgets/2.js-----[Rack load session] [Rails Render] [Response to user]\r\n      /widgets/3.js-----[Rack load session] [Rails Render] [Response to user]\r\n\r\nThe cause of the wait is the database locking the session row on update. This is what I mean with the locking problem. It will not deadlock, just create a locking queue on your database. This causes your parallel ajax requests to be returned in sequence to the user. Also note that this slowdown will NOT appear in your Rails production log or other analysis tools, because Rails is 'done' when it hands of the request to Rack.\r\n\r\nNext to that, on high load this will hammer your sessions table a lot, but that is not the main issue.", "_id": {"$oid": "52384d5fbd3543c1510114d9"}, "html_url": "https://github.com/rails/rails/pull/1846#issuecomment-1433478"}
