{"updated_at": "2012-08-22T11:22:52Z", "repo": "rails", "created_at": "2012-08-22T11:22:52Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/7931244", "id": 7931244, "issue_url": "https://api.github.com/repos/rails/rails/issues/7417", "issue_id": 7417, "user": {"repos_url": "https://api.github.com/users/carlosantoniodasilva/repos", "type": "User", "html_url": "https://github.com/carlosantoniodasilva", "starred_url": "https://api.github.com/users/carlosantoniodasilva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosantoniodasilva/subscriptions", "following_url": "https://api.github.com/users/carlosantoniodasilva/following{/other_user}", "gravatar_id": "77237b97a465ae5a293ad323b7296837", "organizations_url": "https://api.github.com/users/carlosantoniodasilva/orgs", "url": "https://api.github.com/users/carlosantoniodasilva", "gists_url": "https://api.github.com/users/carlosantoniodasilva/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https%3A%2F%2Fidenticons.github.com%2F60b997fd68261ce70cadaf6c8226c042.png", "id": 26328, "events_url": "https://api.github.com/users/carlosantoniodasilva/events{/privacy}", "login": "carlosantoniodasilva", "received_events_url": "https://api.github.com/users/carlosantoniodasilva/received_events", "followers_url": "https://api.github.com/users/carlosantoniodasilva/followers"}, "body": "I think you could achieve the same by overriding the `columns` class method in your own class, without relying on Active Record additions:\n\n```ruby\nclass Topic < ActiveRecord::Base\n  IGNORED_COLUMNS = %w(attributes class)\n\n  def self.columns\n    @columns ||= super.reject { |c| IGNORED_COLUMNS.include?(c.name) }\n  end\nend\n```\n\nOr something like that should solve the problem. If more logic is involved, than I'm :+1: for an external gem.\n\nThanks!", "_id": {"$oid": "5237fbcdbd3543c15100b885"}, "html_url": "https://github.com/rails/rails/pull/7417#issuecomment-7931244"}
