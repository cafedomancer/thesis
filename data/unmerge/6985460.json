{"issue_url": "https://api.github.com/repos/rails/rails/issues/7008", "repo": "rails", "body": "\nI'm suggesting that Rails should have method like `compact` that works the same across collections. `compact` works on arrays, but if you are working with a hash or json you have to do it yourself. \n\nNil and empty strings are often interchangeable in web apps. Whenever you're working with ActiveRecord model attributes you see this. Attributes can be nil or empty depending on if a user has edited the model.\n\nEven working with the 37signals API (HighRise and Basecamp) it's common for interchangeable nils and empties to turn up in the response.\n\nThere are a number of scenarios for removing empties.\n\n1) Using the console and inspecting records (better diffing and comparing of objects)\n2) Rendering a JSON API\n4) Parsing CSV/DAT files with a lot of headers\n\nI've found a few snippets from other libraries that are similar to what `clean` is trying to do. They are not exact but it's the same `compact` `reject` `blank` pattern.\n\n```ruby\n# activerecord/lib/active_record/railties/databases.rake:603\nActiveRecord::Base.configurations.values_at(*environments).compact.reject { |config| config['database'].blank? }\n\n# formtastic/lib/formtastic/inputs/base/choices.rb:81\n.compact.reject { |i| i.blank? }.join(\"_\")\n\n# bundler-1.1.3/lib/bundler.rb:307:        \npaths = possibles.flatten.compact.uniq.reject { |p| p.empty? }\n```\n\nFrom my own projects here are some snippets.\n\nWorking with data logger file for a local school solar project. Over 500 headers and only about 20 or so records needed for the data record model.\n\n```ruby\n  task :import => :environment do\n    # data looks like this\n    # '', '',,'',,,,,,'',,123.1,,,1,'','',,\n    CSV.foreach(File.open('tmp/15min.dat', 'r'), :headers => true) do |line|\n      DataRecord.new(line.to_hash.reject { |k,v| v.blank? && !v.is_a?(FalseClass) })\n    end\n  end\n```\n\nExpose customer phone numbers via JSON API \n\n```ruby\n@phone_numbers = Person.limit(100).map(&:phone_numbers).reject { |k,v| v.is_a?(Array) ? v.compact! && v.empty? : v.empty? }\n\nrespond_to do |format|\n   format.json { render :json => @phone_numbers.to_json }\nend\n```\n\nI agree if that not everything should go into Active Support. I don't want to beat a dead horse if others don't think it's useful. Just trying to articulate as best I can why I think it should be added.\n\nI appreciate the feedback. \n\n", "_id": {"$oid": "523800dcbd3543c15100c068"}, "issue_id": 7008, "url": "https://api.github.com/repos/rails/rails/issues/comments/6985460", "html_url": "https://github.com/rails/rails/pull/7008#issuecomment-6985460", "updated_at": "2012-07-14T18:37:42Z", "user": {"subscriptions_url": "https://api.github.com/users/seanbehan/subscriptions", "events_url": "https://api.github.com/users/seanbehan/events{/privacy}", "repos_url": "https://api.github.com/users/seanbehan/repos", "gists_url": "https://api.github.com/users/seanbehan/gists{/gist_id}", "url": "https://api.github.com/users/seanbehan", "login": "seanbehan", "gravatar_id": "09edaa101c1df80158e7ab4101a2e65a", "html_url": "https://github.com/seanbehan", "following_url": "https://api.github.com/users/seanbehan/following{/other_user}", "received_events_url": "https://api.github.com/users/seanbehan/received_events", "organizations_url": "https://api.github.com/users/seanbehan/orgs", "avatar_url": "https://2.gravatar.com/avatar/09edaa101c1df80158e7ab4101a2e65a?d=https%3A%2F%2Fidenticons.github.com%2Fcba2e39793995b3b682da78f854786f2.png", "starred_url": "https://api.github.com/users/seanbehan/starred{/owner}{/repo}", "id": 23435, "followers_url": "https://api.github.com/users/seanbehan/followers", "type": "User"}, "created_at": "2012-07-14T18:37:42Z", "id": 6985460, "owner": "rails"}
