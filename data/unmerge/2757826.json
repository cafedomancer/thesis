{"body": "> @NZKoz I don't think the \"route proliferation\" is so bad. In fact, even if Rails ends up supporting PATCH in the distant future, I'd prefer PUT be left as a standard route, perhaps linked to a different action (replace/upsert/etc.) This might not jive with a must-map-to-CRUD mindset, but it definitely jives with HTTP.\r\n\r\nIf @tenderlove says an extra route is almost free, I am +1 for including all routes, but I doubt this is the case. Remember some apps have more hundreds of resources routes. In the past, generating the format route proved to be quite expensive (for example).\r\n\r\n> If so, let me reiterate that supporting PATCH is not to *merely* adhere to an RFC. The reason is because Rails currently has broken support for HTTP as commonly understood--leading to potentially problematic interoperability with RESTful clients, caching mechanisms, and proxies.\r\n\r\nDo you have anything to support this? PATCH is a new verb in the specs, so I doubt proxies and caching mechanisms went crazy to support it and change PUT behavior.\r\n\r\n> Finally, Rails shouldn't inhibit change just to retain backwards compatibility with blogs, books, and screencasts. In fact, I don't think Rails ever did care about that.\r\n\r\nYes, we should and we do care about that (we always consider it when doing big changes. If one of us forgets, other is there to remember). It is funny how everyone complains when Rails breaks backwards compatibility when moving from 3.0 to 3.1 but no one cares to ensure it. It is not just documentation that would be broken, but generators, engines and everything else. As I said in other ticket, each plugin checking for `request.put?` would now be broken in an app using PATCH as default.\r\n\r\nIn other words, +1 for this pull but leaving PUT as default to allow the community to catch up. Also, +1 if we can avoid routes proliferation.", "url": "https://api.github.com/repos/rails/rails/issues/comments/2757826", "created_at": "2011-11-16T10:06:46Z", "html_url": "https://github.com/rails/rails/pull/505#issuecomment-2757826", "updated_at": "2011-11-16T10:06:46Z", "repo": "rails", "issue_id": 505, "user": {"following_url": "https://api.github.com/users/josevalim/following{/other_user}", "events_url": "https://api.github.com/users/josevalim/events{/privacy}", "organizations_url": "https://api.github.com/users/josevalim/orgs", "url": "https://api.github.com/users/josevalim", "gists_url": "https://api.github.com/users/josevalim/gists{/gist_id}", "html_url": "https://github.com/josevalim", "subscriptions_url": "https://api.github.com/users/josevalim/subscriptions", "avatar_url": "https://1.gravatar.com/avatar/e837f6b7fd146ab16ed3d663476c063e?d=https%3A%2F%2Fidenticons.github.com%2Fe20b21ae6508f22fc189c60a0880d0b8.png", "repos_url": "https://api.github.com/users/josevalim/repos", "received_events_url": "https://api.github.com/users/josevalim/received_events", "gravatar_id": "e837f6b7fd146ab16ed3d663476c063e", "starred_url": "https://api.github.com/users/josevalim/starred{/owner}{/repo}", "login": "josevalim", "type": "User", "id": 9582, "followers_url": "https://api.github.com/users/josevalim/followers"}, "owner": "rails", "_id": {"$oid": "52385f14bd3543c151012104"}, "id": 2757826, "issue_url": "https://api.github.com/repos/rails/rails/issues/505"}
