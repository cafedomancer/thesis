{"updated_at": "2012-05-05T07:31:19Z", "repo": "rails", "created_at": "2012-05-05T07:31:19Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/5525140", "id": 5525140, "issue_url": "https://api.github.com/repos/rails/rails/issues/6165", "issue_id": 6165, "user": {"repos_url": "https://api.github.com/users/pixeltrix/repos", "type": "User", "html_url": "https://github.com/pixeltrix", "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions", "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}", "gravatar_id": "b14001f2b40640dd6cb63f0e8f1f4869", "organizations_url": "https://api.github.com/users/pixeltrix/orgs", "url": "https://api.github.com/users/pixeltrix", "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/b14001f2b40640dd6cb63f0e8f1f4869?d=https%3A%2F%2Fidenticons.github.com%2F7cb36e23529e4de4c41460940cc85e6e.png", "id": 6321, "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}", "login": "pixeltrix", "received_events_url": "https://api.github.com/users/pixeltrix/received_events", "followers_url": "https://api.github.com/users/pixeltrix/followers"}, "body": "I'm :thumbsdown: on this because the ancestors chain can be quite large so could have a negative performance impact, e.g:\r\n\r\n``` irb\r\n>> class Foo < ActiveRecord::Base; end\r\n>> Foo.ancestors.size\r\n=> 67\r\n```\r\n\r\nAlso as implemented it wouldn't detect constants in the ancestors chain that appear after `Object` - the implementation would need to be something like this:\r\n\r\n``` ruby\r\ndef constantize(camel_cased_word) #:nodoc:\r\n  names = camel_cased_word.split('::')\r\n  names.shift if names.empty? || names.first.empty?\r\n\r\n  names.inject(Object) do |constant, name|\r\n    constant = constant.ancestors.detect(constant) do |ancestor|\r\n      ancestor.const_defined?(name) unless ancestor == Object\r\n    end\r\n    constant.const_get(name, false)\r\n  end\r\nend\r\n```\r\n\r\nOne possible performance optimisation would be to let ruby search the ancestor chain by passing `true` for the second parameter and then rejecting any constants returned that have `Object` as their parent - though I'm not sure whether there are some edge cases around that idea.", "_id": {"$oid": "52380d03bd3543c15100d254"}, "html_url": "https://github.com/rails/rails/pull/6165#issuecomment-5525140"}
