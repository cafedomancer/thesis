{"updated_at": "2011-12-16T13:53:57Z", "repo": "rails", "created_at": "2011-12-16T13:53:22Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/3177353", "id": 3177353, "issue_url": "https://api.github.com/repos/rails/rails/issues/505", "issue_id": 505, "user": {"repos_url": "https://api.github.com/users/mikekelly/repos", "type": "User", "html_url": "https://github.com/mikekelly", "starred_url": "https://api.github.com/users/mikekelly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikekelly/subscriptions", "following_url": "https://api.github.com/users/mikekelly/following{/other_user}", "gravatar_id": "fddf4e0508e0ab09171063fc13062b85", "organizations_url": "https://api.github.com/users/mikekelly/orgs", "url": "https://api.github.com/users/mikekelly", "gists_url": "https://api.github.com/users/mikekelly/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/fddf4e0508e0ab09171063fc13062b85?d=https%3A%2F%2Fidenticons.github.com%2F425fbd8cd12d7ed14264bdd50d8da0b1.png", "id": 55782, "events_url": "https://api.github.com/users/mikekelly/events{/privacy}", "login": "mikekelly", "received_events_url": "https://api.github.com/users/mikekelly/received_events", "followers_url": "https://api.github.com/users/mikekelly/followers"}, "body": "> What's your issue with the 'expose a sub-resource' strategy?\r\n\r\noff the top of my head:\r\n\r\n- splitting up every potential partial into individual resources is not practical if you want to be able to partially update each individual attribute of a resource.\r\n- it's much more efficient to put (oh snap!) this optimisation in the hands of the clients, rather than try and second guess what they want.\r\n- smearing your resource state is a pain for things like caching; it's redundant, you introduce shared state between resources which cases problems with cache invalidation, etc etc\r\n\r\nhaving said that, I do favour using sub-resource strategy based around deletion, which does tend to overlap somewhat. There are also ways to get around the third point about caching, but at a cost of increased complexity to your system.", "_id": {"$oid": "52385f14bd3543c151012133"}, "html_url": "https://github.com/rails/rails/pull/505#issuecomment-3177353"}
