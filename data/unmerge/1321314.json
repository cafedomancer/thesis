{"issue_url": "https://api.github.com/repos/rails/rails/issues/1422", "repo": "rails", "body": "@thedar changing the nested class `require` to `require_dependency` does make this example work--thanks! However, why couldn't we eliminate this explicit require altogether and have the nested classes autoload from `app/models/**` with that Rails magic?\n\n@pixeltrix 1) the folder hierarchy does match the class/module nesting. That is unless Rails is doing something brilliant like converting the enclosing module named XX (caps) in folder xx (lowercase) to Xx (mixed case) instead of XX ?\n\n2) numerous blog posts (fwiw) advise adding all model subdirs to the `autoload_paths` in `config/application.rb` as we've done.  Are you implying that all subdirs of `app/models` (or of app) are already autoloaded without explicitly adding to the path?  If not, how would nested classes of models living in subdirs be autoloaded?\n\n3) replacing the `require 'xx/location/geoip_geocoders'` (i.e. the nested class require from the enclosing class) to `autoload XX::Location::GeoipGeocoders` does not work and yields a new error, \n\n`Routing Error\nYou tried to call GeoipGeocoder#respond_to?, but GeoipGeocoder is not defined on /Users/xxx/dev/xxx/app/models/xx/location.rb:432:in `<top (required)>'`\n\n4) there's no problem with a hard `require` for gems that are truly 'external' to the app. However, now with Bundler especially in dev mode with local source paths, it is common to want to reload the source for a gem which is being co-developed with the app. Thoughts on how to do this without cluttering the source?  Would `require_dependency` work if the gem is then packaged as an external gem in production?\n", "_id": {"$oid": "523857a2bd3543c151011b8b"}, "issue_id": 1422, "url": "https://api.github.com/repos/rails/rails/issues/comments/1321314", "html_url": "https://github.com/rails/rails/pull/1422#issuecomment-1321314", "updated_at": "2011-06-07T19:53:14Z", "user": {"subscriptions_url": "https://api.github.com/users/tribalvibes/subscriptions", "events_url": "https://api.github.com/users/tribalvibes/events{/privacy}", "repos_url": "https://api.github.com/users/tribalvibes/repos", "gists_url": "https://api.github.com/users/tribalvibes/gists{/gist_id}", "url": "https://api.github.com/users/tribalvibes", "login": "tribalvibes", "gravatar_id": "251e5499b8ad4f6518e29a6a6f2b2c82", "html_url": "https://github.com/tribalvibes", "following_url": "https://api.github.com/users/tribalvibes/following{/other_user}", "received_events_url": "https://api.github.com/users/tribalvibes/received_events", "organizations_url": "https://api.github.com/users/tribalvibes/orgs", "avatar_url": "https://2.gravatar.com/avatar/251e5499b8ad4f6518e29a6a6f2b2c82?d=https%3A%2F%2Fidenticons.github.com%2F38c0bb6153a37c4f42fbe27a45e3b51f.png", "starred_url": "https://api.github.com/users/tribalvibes/starred{/owner}{/repo}", "id": 167275, "followers_url": "https://api.github.com/users/tribalvibes/followers", "type": "User"}, "created_at": "2011-06-07T19:49:00Z", "id": 1321314, "owner": "rails"}
