{"updated_at": "2012-10-15T20:50:49Z", "repo": "rails", "created_at": "2012-10-15T20:50:49Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/9461093", "id": 9461093, "issue_url": "https://api.github.com/repos/rails/rails/issues/7954", "issue_id": 7954, "user": {"repos_url": "https://api.github.com/users/tenderlove/repos", "type": "User", "html_url": "https://github.com/tenderlove", "starred_url": "https://api.github.com/users/tenderlove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tenderlove/subscriptions", "following_url": "https://api.github.com/users/tenderlove/following{/other_user}", "gravatar_id": "f29327647a9cff5c69618bae420792ea", "organizations_url": "https://api.github.com/users/tenderlove/orgs", "url": "https://api.github.com/users/tenderlove", "gists_url": "https://api.github.com/users/tenderlove/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/f29327647a9cff5c69618bae420792ea?d=https%3A%2F%2Fidenticons.github.com%2F7c78335a8924215ea5c22fda1aac7b75.png", "id": 3124, "events_url": "https://api.github.com/users/tenderlove/events{/privacy}", "login": "tenderlove", "received_events_url": "https://api.github.com/users/tenderlove/received_events", "followers_url": "https://api.github.com/users/tenderlove/followers"}, "body": "I'm worried about raising an exception on unknown data types.  SQLite3 has no datatypes, so it can actually support *all* data types (it just doesn't know how to cast some of them).  We use this feature, developing on SQLite3, then pushing to Oracle in production.\r\n\r\nI think the correct way to fix this is for SQLite3, we accept any data type, then fix the output of schema.rb.\r\n\r\nAlso, I think this is a dup of #2708", "_id": {"$oid": "5237f759bd3543c15100b031"}, "html_url": "https://github.com/rails/rails/pull/7954#issuecomment-9461093"}
