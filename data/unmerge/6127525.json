{"issue_url": "https://api.github.com/repos/rails/rails/issues/6610", "repo": "rails", "body": "> rails not exporting good enough APIs so people hack using internals - wasn't rails3 supposed to solve that problem, so gem/plugin authors can finally write good code?\n\nPlease note that situation since Rails 3 is much better than in 2.x times and there is a lot of good APIs that can be used by gem developers (or application developer, if they need something other than defaults). However, it's virtually impossible to predict every case of framework extension. If there is anything that can't be done with current API, people should open issues (or better pull requests).\n\nAlso, I was not trying to say that people use rails internals, mainly because rails doesn't provide good APIs. It can be the case, but most of the time I've seen code that tried to be \"too clever\" in my opinion - a lot of things can be achieved in many different ways and often code that touch internals can be refactored into proper implementation that doesn't do it.\n\n> I have an impression that you gave up and prefer to stick to older rails patch level instead of promoting fixed version - which fixes security issues (because that's what you do for every patch version increase).\n\nI haven't given up. I think that people **should** be on the latest stable release. The thing is, changing `Gemfile` will not force people to upgrade. I've seen **a lot** of apps that **can't** be upgraded because a lot of things breaks after upgrading to next version - in such situation they will not upgrade, they will hardcode current version in `Gemfile` anyway.\n\nThe other thing is, I see a little problem with your reasoning. You say that people will upgrade version **only** after running `bundle update rails` or `bundle update` intentionally. And in the same time you say that having the number hardcoded in `Gemfile` will keep people from intentional upgrades.\n\nI assume that given that most rails apps are hard to upgrade painlessly and `~>` operator in `Gemfile`, people will just avoid `bundle update` until they explicitly want to upgrade, which will have similar effect that hardcoding version - in both situations upgrade is done when needed. The difference is that if you run `bundle update` by mistake, you may end up with broken production application.", "_id": {"$oid": "52380636bd3543c15100c8a6"}, "issue_id": 6610, "url": "https://api.github.com/repos/rails/rails/issues/comments/6127525", "html_url": "https://github.com/rails/rails/pull/6610#issuecomment-6127525", "updated_at": "2012-06-05T15:17:15Z", "user": {"subscriptions_url": "https://api.github.com/users/drogus/subscriptions", "events_url": "https://api.github.com/users/drogus/events{/privacy}", "repos_url": "https://api.github.com/users/drogus/repos", "gists_url": "https://api.github.com/users/drogus/gists{/gist_id}", "url": "https://api.github.com/users/drogus", "login": "drogus", "gravatar_id": "582034b63279abeaa8e76acf12f5ee30", "html_url": "https://github.com/drogus", "following_url": "https://api.github.com/users/drogus/following{/other_user}", "received_events_url": "https://api.github.com/users/drogus/received_events", "organizations_url": "https://api.github.com/users/drogus/orgs", "avatar_url": "https://1.gravatar.com/avatar/582034b63279abeaa8e76acf12f5ee30?d=https%3A%2F%2Fidenticons.github.com%2F3202111cf90e7c816a472aaceb72b0df.png", "starred_url": "https://api.github.com/users/drogus/starred{/owner}{/repo}", "id": 5004, "followers_url": "https://api.github.com/users/drogus/followers", "type": "User"}, "created_at": "2012-06-05T15:17:15Z", "id": 6127525, "owner": "rails"}
