{"updated_at": "2013-06-17T08:00:14Z", "repo": "rails", "created_at": "2013-06-17T08:00:14Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/19530920", "id": 19530920, "issue_url": "https://api.github.com/repos/rails/rails/issues/10912", "issue_id": 10912, "user": {"repos_url": "https://api.github.com/users/Bertg/repos", "type": "User", "html_url": "https://github.com/Bertg", "starred_url": "https://api.github.com/users/Bertg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bertg/subscriptions", "following_url": "https://api.github.com/users/Bertg/following{/other_user}", "gravatar_id": "f80b5bd87ed2e62e1c3fd52e90ee7563", "organizations_url": "https://api.github.com/users/Bertg/orgs", "url": "https://api.github.com/users/Bertg", "gists_url": "https://api.github.com/users/Bertg/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/f80b5bd87ed2e62e1c3fd52e90ee7563?d=https%3A%2F%2Fidenticons.github.com%2F7895fc13088ee37f511913bac71fa66f.png", "id": 1434, "events_url": "https://api.github.com/users/Bertg/events{/privacy}", "login": "Bertg", "received_events_url": "https://api.github.com/users/Bertg/received_events", "followers_url": "https://api.github.com/users/Bertg/followers"}, "body": "@neerajdotname pointed out that not raising would create \"more issues\" and might introduces more \"surprise\", but this is not the case as the behavior would be more consistent. \r\n\r\nIf we ignore (or warn for) non existing associations there is less surprise. The fact that eager loading raises or not is greatly dependent on the result of the first query. In one case the query can select for records that meet the requested eager loaded associations and all will be fine. While in a different situation the same query raise an error. This to me is a more confusing (or surprising) behavior. By not raising the code keeps behaving the same.\r\n", "_id": {"$oid": "5237daa9bd3543c15100872b"}, "html_url": "https://github.com/rails/rails/pull/10912#issuecomment-19530920"}
