{"updated_at": "2011-06-24T12:52:59Z", "repo": "rails", "created_at": "2011-06-24T12:52:59Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/1432126", "id": 1432126, "issue_url": "https://api.github.com/repos/rails/rails/issues/1846", "issue_id": 1846, "user": {"repos_url": "https://api.github.com/users/pixeltrix/repos", "type": "User", "html_url": "https://github.com/pixeltrix", "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions", "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}", "gravatar_id": "b14001f2b40640dd6cb63f0e8f1f4869", "organizations_url": "https://api.github.com/users/pixeltrix/orgs", "url": "https://api.github.com/users/pixeltrix", "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/b14001f2b40640dd6cb63f0e8f1f4869?d=https%3A%2F%2Fidenticons.github.com%2F7cb36e23529e4de4c41460940cc85e6e.png", "id": 6321, "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}", "login": "pixeltrix", "received_events_url": "https://api.github.com/users/pixeltrix/received_events", "followers_url": "https://api.github.com/users/pixeltrix/followers"}, "body": "First thing - tests! Not going to get applied without any tests - add the tests in this [file][1]. You'll need to test that the save doesn't occur when the session is not changed and does occur when it's changed - there are no tests at the moment for saving since it's just the standard AR save. Use assert_no_queries and assert_queries to test whether the save occurs.\r\n\r\nSecond thing - what's locking the database? The Session model doesn't (unless you've added a lock_version column) so isn't there still a chance that you can get a lock exception? Should we retry the save instead? Also if the session table has an updated_at column (which it does by default) then someone might be using that as a last accessed timestamp value - this alters that to last time the session changed.\r\n\r\nThird thing - should we check the marshalled string for equality rather than the unmarshalled data since that's dependent on the behaviour of :== for each object in the hash.\r\n\r\n[1]: https://github.com/rails/rails/blob/master/activerecord/test/cases/session_store/session_test.rb", "_id": {"$oid": "52384d5fbd3543c1510114d4"}, "html_url": "https://github.com/rails/rails/pull/1846#issuecomment-1432126"}
