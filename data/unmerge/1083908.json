{"updated_at": "2011-05-01T18:38:19Z", "repo": "rails", "created_at": "2011-05-01T18:38:19Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/1083908", "id": 1083908, "issue_url": "https://api.github.com/repos/rails/rails/issues/356", "issue_id": 356, "user": {"repos_url": "https://api.github.com/users/tenderlove/repos", "type": "User", "html_url": "https://github.com/tenderlove", "starred_url": "https://api.github.com/users/tenderlove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tenderlove/subscriptions", "following_url": "https://api.github.com/users/tenderlove/following{/other_user}", "gravatar_id": "f29327647a9cff5c69618bae420792ea", "organizations_url": "https://api.github.com/users/tenderlove/orgs", "url": "https://api.github.com/users/tenderlove", "gists_url": "https://api.github.com/users/tenderlove/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/f29327647a9cff5c69618bae420792ea?d=https%3A%2F%2Fidenticons.github.com%2F7c78335a8924215ea5c22fda1aac7b75.png", "id": 3124, "events_url": "https://api.github.com/users/tenderlove/events{/privacy}", "login": "tenderlove", "received_events_url": "https://api.github.com/users/tenderlove/received_events", "followers_url": "https://api.github.com/users/tenderlove/followers"}, "body": "1.9.3 emits warnings for variables that are not used.  These warnings happen at parse time, so ruby cannot consider eval'd strings.  In this case, the variable is used in an evaled string.  A cheap way to avoid the warning in this case is the double assignment.\r\n\r\nProbably a better solution would be to make `assert_difference` take a lambda.  Then we can remove the double assignment, avoid eval, and eliminate the warning.", "_id": {"$oid": "5238618bbd3543c15101234d"}, "html_url": "https://github.com/rails/rails/pull/356#issuecomment-1083908"}
