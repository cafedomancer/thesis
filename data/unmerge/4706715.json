{"updated_at": "2012-03-26T23:27:53Z", "repo": "rails", "created_at": "2012-03-26T23:27:23Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/4706715", "id": 4706715, "issue_url": "https://api.github.com/repos/rails/rails/issues/5580", "issue_id": 5580, "user": {"repos_url": "https://api.github.com/users/brainopia/repos", "type": "User", "html_url": "https://github.com/brainopia", "starred_url": "https://api.github.com/users/brainopia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brainopia/subscriptions", "following_url": "https://api.github.com/users/brainopia/following{/other_user}", "gravatar_id": "254513687a01330ba0ae676538de459b", "organizations_url": "https://api.github.com/users/brainopia/orgs", "url": "https://api.github.com/users/brainopia", "gists_url": "https://api.github.com/users/brainopia/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/254513687a01330ba0ae676538de459b?d=https%3A%2F%2Fidenticons.github.com%2F39461a19e9eddfb385ea76b26521ea48.png", "id": 386, "events_url": "https://api.github.com/users/brainopia/events{/privacy}", "login": "brainopia", "received_events_url": "https://api.github.com/users/brainopia/received_events", "followers_url": "https://api.github.com/users/brainopia/followers"}, "body": "Ruby docs: `Regexp#=== \u2013 Case Equality\u2014Synonym for Regexp#=~ used in case statements.`\r\n\r\nJudging by the code of Rubinius and MRI `Regexp#===` is almost the same as `Regexp#=~`. It performs the same logic for search but `===` accounts for type conversion and returns boolean instead of position \u2013 that's all.\r\n\r\nThere is small chance to benchmark it properly, but @headius perfomed the same benchmark as @tarcieri and had different results: https://gist.github.com/2176643.\r\n\r\nSo there is no evidence it will improve even roflscale benchmarks. Therefore, I do not think it's appropriate to attempt to play benchmark card in this case.\r\n\r\nP.S.\r\n\r\nThere are a lot of aggressive and emotional arguments addressed at @fxn. It's not nice. It seems some people forgot not only ruby foundations but also the ruby way \u2013 \"Matz is nice so we are nice\".\r\n\r\nTo these I address: Please respect the people who make the final call and who spent countless number of their own free time to create something you probably use to earn money.", "_id": {"$oid": "523815a3bd3543c15100dd3e"}, "html_url": "https://github.com/rails/rails/pull/5580#issuecomment-4706715"}
