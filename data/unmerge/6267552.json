{"issue_url": "https://api.github.com/repos/rails/rails/issues/6685", "repo": "rails", "body": "Thanks @nahi, may I ask you a couple more questions?\n\nIn the backport discussion, Yehuda raised a scenario about parallel autoloads (where Foo and Bar depend on which other) and later parallel requires were failing. Which of those are fixed on trunk?\n\nAlso, assuming the parallel autoload is fixed, is it fixed by having an autoload lock? If so, I assume requires inside autoloaded files won't run in parallel, so even if if the parallel requires are not fixed, it should not be an issue with Rails.\n\n@nahi regarding your comments about the customized versions of autoload, Rails depends on two autoload mechanisms and on two loading strategies. Libraries code (and Rails code) are developed using Ruby's autoload, application code (models, controllers, etc) are loaded via AS::Dependencies. Code loaded via Ruby's autoload is not unloaded after a request, the ones loaded via AS::Dependencies are.\n\nIn development, both are really lazy loaded (lazy strategy). In production, we eager load (eager strategy) but what we eager load depends on if `config.threadsafe!` was called or not. If not threadsafe, we eager load all of AS::Dependencies (models, controllers, etc) and that is it. If threadsafe, we eager load all of AS::Dependencies plus all libraries and Rails frameworks that we are aware of. The reason we do this second step is to exactly work around the fact Ruby's autoload was not thread safe.\n\nIn other words:\n\n1) If we want to stop preloading frameworks (which is expensive), Ruby's autoload needs to be thread safe\n\n2) If we want to use threadsafe in development **and/or** stop eager loading `AS::Dependencies` in production, we need to make Rails' autoload thread safe. While I believe multi-process apps could benefit from not having eager loading in production (faster boot time, load only what is need on every request), eager loading is probably a good idea for multi-threaded apps (to avoid dog-pile effect on multiple threads loading the same code at the same time)", "_id": {"$oid": "52380552bd3543c15100c706"}, "issue_id": 6685, "url": "https://api.github.com/repos/rails/rails/issues/comments/6267552", "html_url": "https://github.com/rails/rails/pull/6685#issuecomment-6267552", "updated_at": "2012-06-12T10:46:51Z", "user": {"subscriptions_url": "https://api.github.com/users/josevalim/subscriptions", "events_url": "https://api.github.com/users/josevalim/events{/privacy}", "repos_url": "https://api.github.com/users/josevalim/repos", "gists_url": "https://api.github.com/users/josevalim/gists{/gist_id}", "url": "https://api.github.com/users/josevalim", "login": "josevalim", "gravatar_id": "e837f6b7fd146ab16ed3d663476c063e", "html_url": "https://github.com/josevalim", "following_url": "https://api.github.com/users/josevalim/following{/other_user}", "received_events_url": "https://api.github.com/users/josevalim/received_events", "organizations_url": "https://api.github.com/users/josevalim/orgs", "avatar_url": "https://1.gravatar.com/avatar/e837f6b7fd146ab16ed3d663476c063e?d=https%3A%2F%2Fidenticons.github.com%2Fe20b21ae6508f22fc189c60a0880d0b8.png", "starred_url": "https://api.github.com/users/josevalim/starred{/owner}{/repo}", "id": 9582, "followers_url": "https://api.github.com/users/josevalim/followers", "type": "User"}, "created_at": "2012-06-12T10:46:51Z", "id": 6267552, "owner": "rails"}
