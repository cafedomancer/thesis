{"updated_at": "2012-09-12T22:16:48Z", "repo": "rails", "created_at": "2012-09-12T22:16:48Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/8512105", "id": 8512105, "issue_url": "https://api.github.com/repos/rails/rails/issues/7611", "issue_id": 7611, "user": {"repos_url": "https://api.github.com/users/joshuaflanagan/repos", "type": "User", "html_url": "https://github.com/joshuaflanagan", "starred_url": "https://api.github.com/users/joshuaflanagan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshuaflanagan/subscriptions", "following_url": "https://api.github.com/users/joshuaflanagan/following{/other_user}", "gravatar_id": "10adb7caa4eff9c02d244172bc8db6df", "organizations_url": "https://api.github.com/users/joshuaflanagan/orgs", "url": "https://api.github.com/users/joshuaflanagan", "gists_url": "https://api.github.com/users/joshuaflanagan/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/10adb7caa4eff9c02d244172bc8db6df?d=https%3A%2F%2Fidenticons.github.com%2F3592eda3e878dde5bc1bddde6ffabe36.png", "id": 81455, "events_url": "https://api.github.com/users/joshuaflanagan/events{/privacy}", "login": "joshuaflanagan", "received_events_url": "https://api.github.com/users/joshuaflanagan/received_events", "followers_url": "https://api.github.com/users/joshuaflanagan/followers"}, "body": "What other areas are you referring to? The double quote is safe in the <%= fake_safe %> context. It is only invalid within a double-quoted attribute value.\n\nWhen I return the string in a StringBuffer, I am stating that I do not want any further encoding on it before it is passed to the output stream. I trust it, as-is. However, when it is passed in an attribute value, it is tripped up by the implementation of the #tag method which chose to use double-quotes to delimit the value. The #tag method knows this implementation detail, and should be smart enough to not allow passed in values to cause unintended behavior.", "_id": {"$oid": "523ddb11bd354364b900abc9"}, "html_url": "https://github.com/rails/rails/pull/7611#issuecomment-8512105"}
