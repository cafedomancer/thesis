{"updated_at": "2013-01-05T14:30:23Z", "repo": "rails", "created_at": "2013-01-05T14:28:15Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/11914588", "id": 11914588, "issue_url": "https://api.github.com/repos/rails/rails/issues/5721", "issue_id": 5721, "user": {"repos_url": "https://api.github.com/users/stevenharman/repos", "type": "User", "html_url": "https://github.com/stevenharman", "starred_url": "https://api.github.com/users/stevenharman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevenharman/subscriptions", "following_url": "https://api.github.com/users/stevenharman/following{/other_user}", "gravatar_id": "3585262a963f04894a749aabccd99a86", "organizations_url": "https://api.github.com/users/stevenharman/orgs", "url": "https://api.github.com/users/stevenharman", "gists_url": "https://api.github.com/users/stevenharman/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/3585262a963f04894a749aabccd99a86?d=https%3A%2F%2Fidenticons.github.com%2Fb98004311446c60521a8831075423c20.png", "id": 48658, "events_url": "https://api.github.com/users/stevenharman/events{/privacy}", "login": "stevenharman", "received_events_url": "https://api.github.com/users/stevenharman/received_events", "followers_url": "https://api.github.com/users/stevenharman/followers"}, "body": "I'm another victim of quietly using `DATABASE_URL` when it's present.\r\n\r\nThis was brought to my attention when I tried to tweak the connection pool size for a background worker (Sidekiq) during its initialization:\r\n\r\n```ruby\r\nActiveRecord::Base.configurations[Rails.env]['pool'] = ENV['SIDEKIQ_CONCURRENCY']\r\n```\r\n\r\nand found that the `ActiveRecord::Base.configurations` hash was empty on production (Heroku), but perfectly fine locally in development and test. After [much digging](https://github.com/mperham/sidekiq/issues/503#issuecomment-11862427) I found that `ActiveRecord::Base.establish_connection` automatically picking up `DATABASE_URL` results in the `configurations` hash never being set, so we can't alter it for one process (worker) vs another (Rails app).\r\n\r\nFurther more, if we want to keep dev/test/prod parity (as much as possible) we need to have `DATABASE_URL` configured for both development and test, which means hand-rolling some custom configuration/setup lest we clobber our development DB when running tests (as @tpope alluded to).\r\n\r\nAn idea: What about allowing users to opt in/out of automagically picking up the `DATABASE_URL`?\r\n\r\nEdit: For posterity, a long discussion on how I came across this is at mperham/sidekiq#503", "_id": {"$oid": "523813aabd3543c15100dae9"}, "html_url": "https://github.com/rails/rails/pull/5721#issuecomment-11914588"}
