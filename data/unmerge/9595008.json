{"updated_at": "2012-10-19T09:42:33Z", "repo": "rails", "created_at": "2012-10-19T09:42:33Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/9595008", "id": 9595008, "issue_url": "https://api.github.com/repos/rails/rails/issues/7780", "issue_id": 7780, "user": {"repos_url": "https://api.github.com/users/jonleighton/repos", "type": "User", "html_url": "https://github.com/jonleighton", "starred_url": "https://api.github.com/users/jonleighton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonleighton/subscriptions", "following_url": "https://api.github.com/users/jonleighton/following{/other_user}", "gravatar_id": "2940bc7d4506f3e099e3dcc32a412b98", "organizations_url": "https://api.github.com/users/jonleighton/orgs", "url": "https://api.github.com/users/jonleighton", "gists_url": "https://api.github.com/users/jonleighton/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/2940bc7d4506f3e099e3dcc32a412b98?d=https%3A%2F%2Fidenticons.github.com%2F798cebccb32617ad94123450fd137104.png", "id": 1979, "events_url": "https://api.github.com/users/jonleighton/events{/privacy}", "login": "jonleighton", "received_events_url": "https://api.github.com/users/jonleighton/received_events", "followers_url": "https://api.github.com/users/jonleighton/followers"}, "body": "I discussed with the @jeremy the other day and he was concerned that we would be pushing busy work onto users by merging this, because if a user has `strict: false` then the default is *reported* by mysql as `null` but it is *in fact* an empty string. (By which I mean `insert into foo values ()` will place an empty string in the field, but `show full fields from foo` will report null.)\r\n\r\nHowever, I think that in `strict: true` mode, if a user has *chosen* to make the field a not null, they don't actually want it to be magically populated with an empty string, as this then changes the expected behaviour of strict mode.\r\n\r\nSo my suggestion is that:\r\n\r\n* We keep the hack which makes `Column#default` report `''`, but only for non-strict mode\r\n* We get rid of the `keys.concat` thing in `dirty.rb`. If the user is in strict mode, they *should* get an error if they haven't set the field's value. If they're in non-strict mode, the database will set the field's value to `''` automatically.\r\n\r\nI think they allows users an opt-out from the busy work (by setting `strict: false`) but keeps the semantics of strict mode consistent and allows us to avoid a horrible hack in `dirty.rb`.\r\n\r\nI will try to catch up with @jeremy about this again today.", "_id": {"$oid": "5237f901bd3543c15100b3a0"}, "html_url": "https://github.com/rails/rails/pull/7780#issuecomment-9595008"}
