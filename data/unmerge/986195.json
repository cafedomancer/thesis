{"updated_at": "2011-04-11T21:24:06Z", "repo": "rails", "created_at": "2011-04-11T21:24:06Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/986195", "id": 986195, "issue_url": "https://api.github.com/repos/rails/rails/issues/258", "issue_id": 258, "user": {"repos_url": "https://api.github.com/users/dchelimsky/repos", "type": "User", "html_url": "https://github.com/dchelimsky", "starred_url": "https://api.github.com/users/dchelimsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dchelimsky/subscriptions", "following_url": "https://api.github.com/users/dchelimsky/following{/other_user}", "gravatar_id": "5d38ab152e1e3e219512a9859fcd93af", "organizations_url": "https://api.github.com/users/dchelimsky/orgs", "url": "https://api.github.com/users/dchelimsky", "gists_url": "https://api.github.com/users/dchelimsky/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/5d38ab152e1e3e219512a9859fcd93af?d=https%3A%2F%2Fidenticons.github.com%2F46072631582fc240dd2674a7d063b040.png", "id": 1075, "events_url": "https://api.github.com/users/dchelimsky/events{/privacy}", "login": "dchelimsky", "received_events_url": "https://api.github.com/users/dchelimsky/received_events", "followers_url": "https://api.github.com/users/dchelimsky/followers"}, "body": "Can't tell if the game is still on, but if it is, how about:\r\n\r\n    1.included?(1,2,3)\r\n    4.excluded?(1,2,3)\r\n\r\nThey're a clear positive/negative pair and they also align well with the Ruby method we're looking at in a mirror, making it more intuitive IMO:\r\n\r\n    [1,2,3].include?(1)\r\n    1.included?(1,2,3)\r\n\r\nOn a separate note, I find the in/either pairing confusing. I'd recommend just implementing one that takes a list:\r\n\r\n    def included?(*args); args.include?(self); end\r\n\r\nAgain, this aligns very nicely with the existing Ruby method, doesn't require understanding the subtle diff between `in` and `either`, and offers an intuitive symmetry with the existing API.", "_id": {"$oid": "52386422bd3543c1510125b8"}, "html_url": "https://github.com/rails/rails/pull/258#issuecomment-986195"}
