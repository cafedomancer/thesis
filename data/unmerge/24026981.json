{"issue_url": "https://api.github.com/repos/rails/rails/issues/12162", "repo": "rails", "body": "We already had this discussion in rails 4 and the conclusion was: there are\r\nno real gain other than theoretical thought.\r\n\r\nAlso include also means inheritance in Ruby, so this change is not worth of\r\nall the the complexity of maintaining the code for support both way\r\nOn Sep 8, 2013 3:42 PM, \"Eugene Gilburg\" <notifications@github.com> wrote:\r\n\r\n> Thanks! Given the very large scope of this PR, could this be a right time\r\n> to discuss extension vs composition?\r\n>\r\n> I've seen some feedback of people discussing that directly subclassing\r\n> from AR::Base goes counter to domain-driven design, under which class\r\n> hierarchy should be driven by the problem domain rather than technical\r\n> implementation. Under this school of thought, the following would be\r\n> preferable:\r\n>\r\n> class Person\r\n>   # Person is the root object under the problem domain.\r\n>   # The fact it uses AR::Base as a persistence implementation, shouldn't drive the domain class hierarchy.\r\n>   include ActiveRecord::Base # Or ApplicationModelend\r\n> class Client < Person\r\n>   # Client is a domain-driven subclass of Person, so it makes sense for it to be an actual subclassend\r\n>\r\n> The above would also make it more flexible to use include statements\r\n> either before or after including ActiveRecord::Base (or ApplicationModel),\r\n> for more granular control over inclusion order and module hierarchy.\r\n>\r\n> \u2014\r\n> Reply to this email directly or view it on GitHub<https://github.com/rails/rails/pull/12162#issuecomment-24026590>\r\n> .\r\n>", "_id": {"$oid": "5237ce86bd3543c151007a66"}, "issue_id": 12162, "url": "https://api.github.com/repos/rails/rails/issues/comments/24026981", "html_url": "https://github.com/rails/rails/pull/12162#issuecomment-24026981", "updated_at": "2013-09-08T19:02:10Z", "user": {"subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions", "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}", "repos_url": "https://api.github.com/users/rafaelfranca/repos", "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}", "url": "https://api.github.com/users/rafaelfranca", "login": "rafaelfranca", "gravatar_id": "0525b332aafb83307b32d9747a93de03", "html_url": "https://github.com/rafaelfranca", "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}", "received_events_url": "https://api.github.com/users/rafaelfranca/received_events", "organizations_url": "https://api.github.com/users/rafaelfranca/orgs", "avatar_url": "https://0.gravatar.com/avatar/0525b332aafb83307b32d9747a93de03?d=https%3A%2F%2Fidenticons.github.com%2F2c7b84fa30f0cea96a90729afe2970a0.png", "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}", "id": 47848, "followers_url": "https://api.github.com/users/rafaelfranca/followers", "type": "User"}, "created_at": "2013-09-08T19:02:10Z", "id": 24026981, "owner": "rails"}
