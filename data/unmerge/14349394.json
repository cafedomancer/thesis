{"updated_at": "2013-03-03T16:26:40Z", "repo": "rails", "created_at": "2013-03-03T16:26:40Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/14349394", "id": 14349394, "issue_url": "https://api.github.com/repos/rails/rails/issues/9503", "issue_id": 9503, "user": {"repos_url": "https://api.github.com/users/wangjohn/repos", "type": "User", "html_url": "https://github.com/wangjohn", "starred_url": "https://api.github.com/users/wangjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangjohn/subscriptions", "following_url": "https://api.github.com/users/wangjohn/following{/other_user}", "gravatar_id": "ddbca6015f428461aa5ed3b5f0fb74ab", "organizations_url": "https://api.github.com/users/wangjohn/orgs", "url": "https://api.github.com/users/wangjohn", "gists_url": "https://api.github.com/users/wangjohn/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/ddbca6015f428461aa5ed3b5f0fb74ab?d=https%3A%2F%2Fidenticons.github.com%2F0f072cda8c91e247b8dd76fa1b10a64e.png", "id": 1075780, "events_url": "https://api.github.com/users/wangjohn/events{/privacy}", "login": "wangjohn", "received_events_url": "https://api.github.com/users/wangjohn/received_events", "followers_url": "https://api.github.com/users/wangjohn/followers"}, "body": "@schneems You raise some valid points. The scan over the in memory objects is pretty expensive. Also, I believe it is indeed possible to update the database and not the in-memory object which would lead to some invalid caches.\r\n\r\nTo address the first point, maybe we could implement that target instance variable as a hash instead of an array. The hash would be keyed on the object id, and hold the object. This would make finding an id a lot faster without significantly changing the time to iterate over it or add to the target. \r\n\r\nThe second point of invalid caches seems a lot harder (maybe this is why it wasn't implemented before?). The one solution I can think of (though it probably will take a lot of work), is to enforce a policy of having only one ActiveRecord object per id. If this were implemented correctly, then the only way of changing the database and not the in-memory object would be to use pure SQL for updating, but this case is already unsupported. ", "_id": {"$oid": "5237e8bfbd3543c15100975d"}, "html_url": "https://github.com/rails/rails/pull/9503#issuecomment-14349394"}
