{"updated_at": "2011-12-17T23:37:34Z", "repo": "rails", "created_at": "2011-12-17T23:37:06Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/3192228", "id": 3192228, "issue_url": "https://api.github.com/repos/rails/rails/issues/505", "issue_id": 505, "user": {"repos_url": "https://api.github.com/users/mikekelly/repos", "type": "User", "html_url": "https://github.com/mikekelly", "starred_url": "https://api.github.com/users/mikekelly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikekelly/subscriptions", "following_url": "https://api.github.com/users/mikekelly/following{/other_user}", "gravatar_id": "fddf4e0508e0ab09171063fc13062b85", "organizations_url": "https://api.github.com/users/mikekelly/orgs", "url": "https://api.github.com/users/mikekelly", "gists_url": "https://api.github.com/users/mikekelly/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/fddf4e0508e0ab09171063fc13062b85?d=https%3A%2F%2Fidenticons.github.com%2F425fbd8cd12d7ed14264bdd50d8da0b1.png", "id": 55782, "events_url": "https://api.github.com/users/mikekelly/events{/privacy}", "login": "mikekelly", "received_events_url": "https://api.github.com/users/mikekelly/received_events", "followers_url": "https://api.github.com/users/mikekelly/followers"}, "body": "@dlee I don't want to argue semantics because it won't go anywhere, but would you agree there must've be some ambiguity that causes it to need updating by httpbis?\r\n\r\nThe problem with moving to PATCH is that it's not equivalent since its definition is not idempotent: \"[PATCH is neither safe nor idempotent](http://tools.ietf.org/html/rfc5789#section-2)\", this means that - on the web - these requests cannot be considered idempotent (even if your client and server know better). This means that any supporting infrastructure e.g. HTTP client libraries which know they can retry PUT requests on network failure, or generic accelerating proxies that perform a similar function cannot do so on these PATCH requests - even if they are intended idempotently, on the network they aren't.\r\n\r\nFwiw, that kind of argument does not hold up in the same way for the guaranteed fullness of a PUT request, which is exactly my problem with that (over)specification. ", "_id": {"$oid": "52385f14bd3543c15101214c"}, "html_url": "https://github.com/rails/rails/pull/505#issuecomment-3192228"}
