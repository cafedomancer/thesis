{"issue_url": "https://api.github.com/repos/rails/rails/issues/9020", "repo": "rails", "body": "@tylerdooling The way I usually accomplish this is using `Hash#fetch` to set default values.\r\n\r\n```ruby\r\nif response.fetch(:part, {}).fetch(:availability, {})[:quantity_backordered]\r\n  # do something if deep hash is not a \"falsy\" value\r\nend\r\n```\r\nIf this gets merged in, I'll definitely be using it, but until then that is the cleanest and simplest solution with pure Ruby.", "_id": {"$oid": "523d5db1bd354364b90062e5"}, "issue_id": 9020, "url": "https://api.github.com/repos/rails/rails/issues/comments/12517813", "html_url": "https://github.com/rails/rails/pull/9020#issuecomment-12517813", "updated_at": "2013-01-21T21:16:07Z", "user": {"subscriptions_url": "https://api.github.com/users/mattdbridges/subscriptions", "events_url": "https://api.github.com/users/mattdbridges/events{/privacy}", "repos_url": "https://api.github.com/users/mattdbridges/repos", "gists_url": "https://api.github.com/users/mattdbridges/gists{/gist_id}", "url": "https://api.github.com/users/mattdbridges", "login": "mattdbridges", "gravatar_id": "fa4b5f21ddfec459b530bfce99079e54", "html_url": "https://github.com/mattdbridges", "following_url": "https://api.github.com/users/mattdbridges/following{/other_user}", "received_events_url": "https://api.github.com/users/mattdbridges/received_events", "organizations_url": "https://api.github.com/users/mattdbridges/orgs", "avatar_url": "https://1.gravatar.com/avatar/fa4b5f21ddfec459b530bfce99079e54?d=https%3A%2F%2Fidenticons.github.com%2F0f3da53df1c3935c37f47ffbc13d554b.png", "starred_url": "https://api.github.com/users/mattdbridges/starred{/owner}{/repo}", "id": 442443, "followers_url": "https://api.github.com/users/mattdbridges/followers", "type": "User"}, "created_at": "2013-01-21T21:16:07Z", "id": 12517813, "owner": "rails"}
