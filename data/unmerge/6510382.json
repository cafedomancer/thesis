{"body": "@thedarkone good point. there's always more complicated trade-offs in details, that's why I don't bet all my money on either threads or CoW. I found in this conversation that threads are overrated (even without GIL like JRuby) so I took the stance for promoting CoW a little bit.\n\nBut honestly, switching logical address space is costly (switch_mm() does nothing with threads) if you have 100s of them. Also as @tarcieri pointed out, GC overhead would be significant, as they run per process.\n\nThat said, I don't see any realistic rationale for threaded concurrency yet.\n\nFor instance, we need N+ processes for N cores anyway, assuming unfortunately we'll continue to have GIL. GIL won't go away anytime soon. And by saying N+, I mean up to N*2, depending on I/O ratio in our app. We could ask [New Relic](http://newrelic.com/) for real data but I believe ruby/db breakdown in time spent would be something around 2:1 in a typical Rails app. If your database is slower than this, adding ruby concurrency won't help anyway, it just makes the situation worse so fix your query. If we assume ruby:db = 2:1, we only need N * 1.5 processes.\n\nGuess what I'm saying? With this typical breakdown scenario, we need at least N worker processes, whichever you choose Puma or Unicorn, to utilize CPU cores, and to save iowait, we only need 50% more concurrency. 2 threads per process is more than enough. Why not just add 50% more processes instead? You don't need 100s of concurrency for 16 CPUs. You need about 24 processes. That's roughly the range we're talking about, and in this range, 24 threads or 24 processes shouldn't matter much, with CPU affinity of modern kernels.\n\nIf you have a quad-core processor, and a process size is 60MB, you need 60MB * 4-cores * 1.5 = 360MB RAM (not considering CoW, even). And that's our real setup on Linode 512 (many of them btw), the cheapest plan on one of the most popular VPS.\n\nWe could argue that iowait is not just database, we have external APIs like twitter, facebook, etc. and that is a valid argument. But things can go crazy, yesterday Twitter went down for 2 hours, and if an app depends and blocks on Twitter, it will go down with Twitter anyway, no matter how many concurrency it had. If we don't want to let the entire site down, we need to have asymmetric control to external dependency (segment workers that do/don't handle external APIs), rather than having more concurrency. Or if you have 10,000s of external dependency like web crawlers, use an evented server. From this perspective, threaded concurrency makes very little difference from multi-processes in practice.\n\nAnd I have to disagree with @rosenfeld on overestimated thread-safety. It's not that hard to write, if you are aware upfront, but it's extremely hard to track down the bug once it's slipped and deployed. You can never find the bug on development environment, and it's hard to write sane tests for them. How many people here have actually written tests for race conditions? If you have, you know what I mean.\n\nSo, not worrying about thread safety (both GIL and single concurrency per process) has been a big \"feature\". It's the best default, ever. And now we shed lights on another cool option.", "url": "https://api.github.com/repos/rails/rails/issues/comments/6510382", "created_at": "2012-06-22T15:24:31Z", "html_url": "https://github.com/rails/rails/pull/6685#issuecomment-6510382", "updated_at": "2012-06-22T18:02:19Z", "repo": "rails", "issue_id": 6685, "user": {"following_url": "https://api.github.com/users/kenn/following{/other_user}", "events_url": "https://api.github.com/users/kenn/events{/privacy}", "organizations_url": "https://api.github.com/users/kenn/orgs", "url": "https://api.github.com/users/kenn", "gists_url": "https://api.github.com/users/kenn/gists{/gist_id}", "html_url": "https://github.com/kenn", "subscriptions_url": "https://api.github.com/users/kenn/subscriptions", "avatar_url": "https://2.gravatar.com/avatar/f3c42aa7989a9a0c37709abc08a6327f?d=https%3A%2F%2Fidenticons.github.com%2F20d749bc05f47d2bd3026ce457dcfd8e.png", "repos_url": "https://api.github.com/users/kenn/repos", "received_events_url": "https://api.github.com/users/kenn/received_events", "gravatar_id": "f3c42aa7989a9a0c37709abc08a6327f", "starred_url": "https://api.github.com/users/kenn/starred{/owner}{/repo}", "login": "kenn", "type": "User", "id": 10350, "followers_url": "https://api.github.com/users/kenn/followers"}, "owner": "rails", "_id": {"$oid": "52380552bd3543c15100c739"}, "id": 6510382, "issue_url": "https://api.github.com/repos/rails/rails/issues/6685"}
