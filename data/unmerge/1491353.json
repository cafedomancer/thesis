{"updated_at": "2011-07-03T04:12:49Z", "repo": "rails", "created_at": "2011-07-03T04:09:55Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/1491353", "id": 1491353, "issue_url": "https://api.github.com/repos/rails/rails/issues/1944", "issue_id": 1944, "user": {"repos_url": "https://api.github.com/users/cmeiklejohn/repos", "type": "User", "html_url": "https://github.com/cmeiklejohn", "starred_url": "https://api.github.com/users/cmeiklejohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmeiklejohn/subscriptions", "following_url": "https://api.github.com/users/cmeiklejohn/following{/other_user}", "gravatar_id": "3e09fee7b359be847ed5fa48f524a3d3", "organizations_url": "https://api.github.com/users/cmeiklejohn/orgs", "url": "https://api.github.com/users/cmeiklejohn", "gists_url": "https://api.github.com/users/cmeiklejohn/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/3e09fee7b359be847ed5fa48f524a3d3?d=https%3A%2F%2Fidenticons.github.com%2F7cbabebc4ff57faf9cd22b4188243793.png", "id": 44939, "events_url": "https://api.github.com/users/cmeiklejohn/events{/privacy}", "login": "cmeiklejohn", "received_events_url": "https://api.github.com/users/cmeiklejohn/received_events", "followers_url": "https://api.github.com/users/cmeiklejohn/followers"}, "body": "The specific use case that I'm working with is being able to build both a primary and associated object with specific primary keys at creation time.\r\n\r\nCurrently the following works:\r\n\r\n    User.accepts_nested_attributes_for :cars\r\n\r\n    @user = User.new\r\n    @user.assign_attributes( { :id => \"1\", :name => \"Chris\" } , :without_protection => true)\r\n    @user.send(:cars_attributes=, [ { :id => \"1\", :make => \"Toyota\" } ], :without_protection => true)\r\n\r\nBoth assign_attributes, and #{association}_attributes both take option hash's that allow overriding of protected attributes (specifically id).  assign_attributes is a replacement for attributes=(attributes, guard_protected_attributes = false) which is currently deprecated.  #{association}_attributes is a new feature introduced by the commit mentioned above.\r\n\r\nThis pull allows the following to work:\r\n\r\n    User.accepts_nested_attributes_for :cars, :without_protection => true \r\n\r\n    @user = User.new\r\n    @user.assigns_attributes({ :id => \"1\", :name => \"Chris\", \r\n      :cars_attributes => [ { :id => \"1\", :make => \"Toyota\" } ] }, \r\n      :without_protection => true)", "_id": {"$oid": "52384bc5bd3543c1510113cb"}, "html_url": "https://github.com/rails/rails/pull/1944#issuecomment-1491353"}
