{"updated_at": "2012-12-04T02:41:19Z", "repo": "rails", "created_at": "2012-12-04T02:41:19Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/10981937", "id": 10981937, "issue_url": "https://api.github.com/repos/rails/rails/issues/8408", "issue_id": 8408, "user": {"repos_url": "https://api.github.com/users/jeremy/repos", "type": "User", "html_url": "https://github.com/jeremy", "starred_url": "https://api.github.com/users/jeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremy/subscriptions", "following_url": "https://api.github.com/users/jeremy/following{/other_user}", "gravatar_id": "24d2f8804e6bb4b7ea6bd11e0a586470", "organizations_url": "https://api.github.com/users/jeremy/orgs", "url": "https://api.github.com/users/jeremy", "gists_url": "https://api.github.com/users/jeremy/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/24d2f8804e6bb4b7ea6bd11e0a586470?d=https%3A%2F%2Fidenticons.github.com%2F84d9ee44e457ddef7f2c4f25dc8fa865.png", "id": 199, "events_url": "https://api.github.com/users/jeremy/events{/privacy}", "login": "jeremy", "received_events_url": "https://api.github.com/users/jeremy/received_events", "followers_url": "https://api.github.com/users/jeremy/followers"}, "body": "On further review, I feel this is a regression in the user's experience. Seeing `min_cost = true` is easy to understand and operate, while offering little control or flexibility. It happens to align with the most pressing need for cost adjustment: simply to speed up tests. To change this API to allow arbitrary costs means exposing \"magic\" cost numbers as an API. It requires googling to understand what a cost is and to evaluate which cost is best.\r\n\r\nThe `BCrypt::Engine.calibrate(milliseconds)` API offers an alternative. We could expose a time limit as a rough measure of how much it should \"cost\" to compute.\r\n\r\n```ruby\r\n> BCrypt::Engine.calibrate(100)\r\n=> 10\r\n> BCrypt::Engine.calibrate(1000)\r\n=> 13\r\n```\r\n\r\nSetting `ActiveModel::SecurePassword.computation_time = 1.second` would set `ActiveModel::SecurePassword.cost = BCrypt::Engine.calibrate(1000 * computation_time)`", "_id": {"$oid": "523d9148bd354364b9007df2"}, "html_url": "https://github.com/rails/rails/pull/8408#issuecomment-10981937"}
