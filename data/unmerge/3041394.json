{"updated_at": "2011-12-07T00:34:08Z", "repo": "rails", "created_at": "2011-12-07T00:34:08Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/3041394", "id": 3041394, "issue_url": "https://api.github.com/repos/rails/rails/issues/3871", "issue_id": 3871, "user": {"repos_url": "https://api.github.com/users/exviva/repos", "type": "User", "html_url": "https://github.com/exviva", "starred_url": "https://api.github.com/users/exviva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/exviva/subscriptions", "following_url": "https://api.github.com/users/exviva/following{/other_user}", "gravatar_id": "56c0f984e7a1cccbd5ea165ef310ba4f", "organizations_url": "https://api.github.com/users/exviva/orgs", "url": "https://api.github.com/users/exviva", "gists_url": "https://api.github.com/users/exviva/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/56c0f984e7a1cccbd5ea165ef310ba4f?d=https%3A%2F%2Fidenticons.github.com%2Fa77d299ee00dfee2de17de8fcd02c69a.png", "id": 80070, "events_url": "https://api.github.com/users/exviva/events{/privacy}", "login": "exviva", "received_events_url": "https://api.github.com/users/exviva/received_events", "followers_url": "https://api.github.com/users/exviva/followers"}, "body": "The way I see it, there are two goals we're trying to achieve here:\r\n\r\n1. provide convenient syntax sugar for `User.map(&:email)`, possibly with variable argument number, regardless whether `:email` is a column or an instance method\r\n2. provide a lower-level resource-efficient way of projecting an SQL select to a subset of columns\r\n\r\nI guess both are \"kind of\" useful, although mostly for hacking in the console. Most of the time we don't want to access models in isolation, without their business methods, associations, validations, etc.\r\n\r\nI'd venture an opinion that the second goal is more valuable for most applications, in a specific context (e.g. batch jobs). How about we name it `select_columns`, `project_columns`, `map_columns`, `projection`, or something similar? It sounds more low-level (as it should for that specific context).\r\n\r\nHonestly, I've been missing that kind of syntax goodness like `pluck` for months now, but maybe it's not worth to introduce such an API just for the sake of it.", "_id": {"$oid": "52383067bd3543c15100f63b"}, "html_url": "https://github.com/rails/rails/pull/3871#issuecomment-3041394"}
