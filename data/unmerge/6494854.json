{"updated_at": "2012-06-21T21:24:03Z", "repo": "rails", "created_at": "2012-06-21T21:24:03Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/6494854", "id": 6494854, "issue_url": "https://api.github.com/repos/rails/rails/issues/6685", "issue_id": 6685, "user": {"repos_url": "https://api.github.com/users/kenn/repos", "type": "User", "html_url": "https://github.com/kenn", "starred_url": "https://api.github.com/users/kenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenn/subscriptions", "following_url": "https://api.github.com/users/kenn/following{/other_user}", "gravatar_id": "f3c42aa7989a9a0c37709abc08a6327f", "organizations_url": "https://api.github.com/users/kenn/orgs", "url": "https://api.github.com/users/kenn", "gists_url": "https://api.github.com/users/kenn/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/f3c42aa7989a9a0c37709abc08a6327f?d=https%3A%2F%2Fidenticons.github.com%2F20d749bc05f47d2bd3026ce457dcfd8e.png", "id": 10350, "events_url": "https://api.github.com/users/kenn/events{/privacy}", "login": "kenn", "received_events_url": "https://api.github.com/users/kenn/received_events", "followers_url": "https://api.github.com/users/kenn/followers"}, "body": "@rosenfeld agree with most of your points, but when we have MRI 2.0 with CoW-friendly GC, forking multi processes would cost less and less in terms of memory usage.\n\nIdeally, all pages that are eager loaded before forking should be shared between N+1 processes, down to the point where no difference in memory usage observed than threaded environments. Eventually the gain from writing threaded codes *for request concurrency* would be marginal.\n\nWhich would we expect to be accomplished earlier, all libraries in the wild become threadsafe or MRI 2.0's better GC works out of the box? I don't know, so I'd bet evenly both, +1 to threadsafe by default for Rails.\n", "_id": {"$oid": "52380552bd3543c15100c71d"}, "html_url": "https://github.com/rails/rails/pull/6685#issuecomment-6494854"}
