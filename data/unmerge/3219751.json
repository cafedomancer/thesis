{"issue_url": "https://api.github.com/repos/rails/rails/issues/2200", "repo": "rails", "body": "@arunagw, ok the `:include` brings the associations data to the hash. But, one behavior is very weird to me, when include has no options, the default is to pick the base options. So, we have the following ISSUE.\r\n\r\nSuppose we want this:\r\n\r\n    > customer.as_json(:only => [:id, :name], :include => {:orders => {:only => [:id, :order_date]}})\r\n    => {\"name\"=>\"John Doe\", :orders=>[{\"order_date\"=>Thu, 22 Dec 2011 13:34:37 UTC +00:00, \"id\"=>1}], \"id\"=>1}\r\n\r\nThe as_json options is huge to be repeated everytime in the controllers. One simpler approach would be to wrap it up into its respective models. In this case:\r\n\r\n    class Customer < ActiveRecord::Base\r\n        has_many :orders\r\n\r\n        def serializable_hash(options = nil)\r\n            super({:only => [:id, :name]}.merge!(options || {}))\r\n        end\r\n    end\r\n\r\n    class Order < ActiveRecord::Base\r\n        belongs_to :customer\r\n\r\n        def serializable_hash(options = nil)\r\n            super({:only => [:id, :order_date]}.merge!(options || {}))\r\n        end\r\n    end\r\n\r\nNow, we would be able to simply write this `customer.as_json(:include => :orders)`. But, oh oh:\r\n\r\n    customer.as_json(:include => :orders)\r\n    => {\"name\"=>\"John Doe\", :orders=>[{\"id\"=>1}], \"id\"=>1}\r\n\r\nOn lib/active_record/serialization.rb, line 49, we have the below \"villain\" code.\r\n\r\n    association_options = include_has_options ? include_associations[association] : base_only_or_except\r\n\r\nThe above scenario is very common on thin-server architectures, where the communication from the server to the client is made by using JSON messages to the rich Javascript clients.\r\n\r\nMaybe, there is a simpler/better approach to implement the above that I may be missing... But, I would like to know what's the rails opinion about changing it to work properly? May I send a pull request with necessary changes?\r\n\r\nThanks\r\n\r\nPS: Thanks @nfm for the help debugging it.", "_id": {"$oid": "5238472ebd3543c151011044"}, "issue_id": 2200, "url": "https://api.github.com/repos/rails/rails/issues/comments/3219751", "html_url": "https://github.com/rails/rails/pull/2200#issuecomment-3219751", "updated_at": "2011-12-20T14:58:33Z", "user": {"subscriptions_url": "https://api.github.com/users/rxaviers/subscriptions", "events_url": "https://api.github.com/users/rxaviers/events{/privacy}", "repos_url": "https://api.github.com/users/rxaviers/repos", "gists_url": "https://api.github.com/users/rxaviers/gists{/gist_id}", "url": "https://api.github.com/users/rxaviers", "login": "rxaviers", "gravatar_id": "6e836e35b57421faa0067702089ed46e", "html_url": "https://github.com/rxaviers", "following_url": "https://api.github.com/users/rxaviers/following{/other_user}", "received_events_url": "https://api.github.com/users/rxaviers/received_events", "organizations_url": "https://api.github.com/users/rxaviers/orgs", "avatar_url": "https://1.gravatar.com/avatar/6e836e35b57421faa0067702089ed46e?d=https%3A%2F%2Fidenticons.github.com%2F641871771f4662453908e9fe5af58dd7.png", "starred_url": "https://api.github.com/users/rxaviers/starred{/owner}{/repo}", "id": 967155, "followers_url": "https://api.github.com/users/rxaviers/followers", "type": "User"}, "created_at": "2011-12-20T14:58:33Z", "id": 3219751, "owner": "rails"}
