{"updated_at": "2013-06-13T06:11:30Z", "repo": "rails", "created_at": "2013-06-13T06:10:27Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/19373917", "id": 19373917, "issue_url": "https://api.github.com/repos/rails/rails/issues/10930", "issue_id": 10930, "user": {"repos_url": "https://api.github.com/users/egilburg/repos", "type": "User", "html_url": "https://github.com/egilburg", "starred_url": "https://api.github.com/users/egilburg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/egilburg/subscriptions", "following_url": "https://api.github.com/users/egilburg/following{/other_user}", "gravatar_id": "cc4f5494a8dcaaf577e678cb3901dab6", "organizations_url": "https://api.github.com/users/egilburg/orgs", "url": "https://api.github.com/users/egilburg", "gists_url": "https://api.github.com/users/egilburg/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/cc4f5494a8dcaaf577e678cb3901dab6?d=https%3A%2F%2Fidenticons.github.com%2F552d65b6e9616642fd0217dc7f8361bd.png", "id": 242532, "events_url": "https://api.github.com/users/egilburg/events{/privacy}", "login": "egilburg", "received_events_url": "https://api.github.com/users/egilburg/received_events", "followers_url": "https://api.github.com/users/egilburg/followers"}, "body": "You could consider implementing a Registry based on https://github.com/rails/rails/blob/master/activesupport/lib/active_support/per_thread_registry.rb for this, so API would be like `ActionDispatch::RequestRegistry.request_id` or whatever makes sense.\r\n\r\nBut it would be nice seeing what are some of the use cases you are thinking of. One could argue that encapsulating request info in the controller to the exclusion of other parts of the code is by MVC design.", "_id": {"$oid": "5237da7fbd3543c151008706"}, "html_url": "https://github.com/rails/rails/pull/10930#issuecomment-19373917"}
