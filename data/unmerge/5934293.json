{"issue_url": "https://api.github.com/repos/rails/rails/issues/6488", "repo": "rails", "body": ">  I'm actually still confused about the fairness.\n\n>    If thread1, thread2, and thread3 are all waiting (yep, thread3 is already waiting too)\n>    and then two connections become avail at more or less the same time\n>    are both thread1 and thread2 guaranteed to get a connection before thread3 (which was also waiting?)\n\n> your order check in the test seems to guarantee this in fact is true, I think?\n\nThe `test_checkout_fairness_by_group` is a better test of this.  What happens (I think) is that a ConditionVariable *does* guarantee that the longest waiting thread is the first *to wake up*.  But the first thing a thread does after being woken up is re-acquire the monitor.  It's this second action that is a free-for-all.  So, yes, thread1 and thread2 will get the connection ahead of thread3 in your example, because thread3 will not be woken up.\n", "_id": {"$oid": "52380786bd3543c15100cae1"}, "issue_id": 6488, "url": "https://api.github.com/repos/rails/rails/issues/comments/5934293", "html_url": "https://github.com/rails/rails/pull/6488#issuecomment-5934293", "updated_at": "2012-05-25T16:14:03Z", "user": {"subscriptions_url": "https://api.github.com/users/pmahoney/subscriptions", "events_url": "https://api.github.com/users/pmahoney/events{/privacy}", "repos_url": "https://api.github.com/users/pmahoney/repos", "gists_url": "https://api.github.com/users/pmahoney/gists{/gist_id}", "url": "https://api.github.com/users/pmahoney", "login": "pmahoney", "gravatar_id": "27598e1b77ce41fb0bd8a6fc4a3715d4", "html_url": "https://github.com/pmahoney", "following_url": "https://api.github.com/users/pmahoney/following{/other_user}", "received_events_url": "https://api.github.com/users/pmahoney/received_events", "organizations_url": "https://api.github.com/users/pmahoney/orgs", "avatar_url": "https://0.gravatar.com/avatar/27598e1b77ce41fb0bd8a6fc4a3715d4?d=https%3A%2F%2Fidenticons.github.com%2F55d630b2da03cc33c4e3f00c113d14d7.png", "starred_url": "https://api.github.com/users/pmahoney/starred{/owner}{/repo}", "id": 103822, "followers_url": "https://api.github.com/users/pmahoney/followers", "type": "User"}, "created_at": "2012-05-25T16:14:03Z", "id": 5934293, "owner": "rails"}
