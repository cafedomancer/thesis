{"updated_at": "2012-07-13T16:49:36Z", "repo": "rails", "created_at": "2012-07-13T16:49:36Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/6968667", "id": 6968667, "issue_url": "https://api.github.com/repos/rails/rails/issues/7008", "issue_id": 7008, "user": {"repos_url": "https://api.github.com/users/seanbehan/repos", "type": "User", "html_url": "https://github.com/seanbehan", "starred_url": "https://api.github.com/users/seanbehan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seanbehan/subscriptions", "following_url": "https://api.github.com/users/seanbehan/following{/other_user}", "gravatar_id": "09edaa101c1df80158e7ab4101a2e65a", "organizations_url": "https://api.github.com/users/seanbehan/orgs", "url": "https://api.github.com/users/seanbehan", "gists_url": "https://api.github.com/users/seanbehan/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/09edaa101c1df80158e7ab4101a2e65a?d=https%3A%2F%2Fidenticons.github.com%2Fcba2e39793995b3b682da78f854786f2.png", "id": 23435, "events_url": "https://api.github.com/users/seanbehan/events{/privacy}", "login": "seanbehan", "received_events_url": "https://api.github.com/users/seanbehan/received_events", "followers_url": "https://api.github.com/users/seanbehan/followers"}, "body": "@igoodrich It's not _just_ removing blanks deeply. False is kept, which returns `true` with `blank?`. \n\nDo you use `compact` or `reject(&:nil?)`? They are the same (and the latter may be more expressive to some) but one is more pleasant to work with. From your example, to accomplish the same as `clean` you'd have to write instead... \n\n```ruby\nPerson.all.map(&:phone_numbers).reject_deeply { |obj| obj.blank? && !obj.is_a?(FalseClass) }\n```\n\nI think in many places in rails apps (active record attributes, form params... etc) nil and empty strings are interchangeable. Having a method that removes both would be nice, imo. I'm not hung up on the name of the method. \n\nThanks for the input.", "_id": {"$oid": "523800dcbd3543c15100c064"}, "html_url": "https://github.com/rails/rails/pull/7008#issuecomment-6968667"}
