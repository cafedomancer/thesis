{"updated_at": "2011-04-10T21:22:58Z", "repo": "rails", "created_at": "2011-04-10T21:22:58Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/981143", "id": 981143, "issue_url": "https://api.github.com/repos/rails/rails/issues/258", "issue_id": 258, "user": {"repos_url": "https://api.github.com/users/elight/repos", "type": "User", "html_url": "https://github.com/elight", "starred_url": "https://api.github.com/users/elight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elight/subscriptions", "following_url": "https://api.github.com/users/elight/following{/other_user}", "gravatar_id": "cfc1397a59f523269342e1a7bdfe096b", "organizations_url": "https://api.github.com/users/elight/orgs", "url": "https://api.github.com/users/elight", "gists_url": "https://api.github.com/users/elight/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/cfc1397a59f523269342e1a7bdfe096b?d=https%3A%2F%2Fidenticons.github.com%2F712a67567ec10c52c2b966224cf94d1e.png", "id": 10112, "events_url": "https://api.github.com/users/elight/events{/privacy}", "login": "elight", "received_events_url": "https://api.github.com/users/elight/received_events", "followers_url": "https://api.github.com/users/elight/followers"}, "body": "Off-topc: no one's crying uncle. I responded inappropriately. You want an apology here? I'm sorry I said it was \"silly\" just because it's different.\n\nOn-topic: Nuts. Here I will cry \"uncle\" and admit I was wrong. I use the hell out of Object#present? This is similar. When I'm in for a penny, I'm in for a pound. I withdraw my protest.\n\nEvan Light\nOn Sunday, April 10, 2011 at 2:18 PM, dhh wrote: \n> I offered you a clear explanation of why the semantic difference mattered and my personal appreciation for that difference. You choose to take to first belittle that argument with \"silly\" and then consider it a slight. Now you're crying uncle because I didn't pick up on your off-ticket request for forgiveness on silly? Please.\n> \n> Back on topic: Let this be an open invitation for more expressiveness around these methods. I'm looking for the opposite version of Object#in? (no, #out? doesn't fit, and #not_in? is ugly). Just like we have blank/present and include/exclude. I already have a good fit for #either? in #neither? but I'm hesitant to add it unless we can find a version for #in?.\n> \n> How's that for expressiveness. We'll then have 5 semantic variations on Enumerable#include? :)\n> \n> -- \n> Reply to this email directly or view it on GitHub:\n> https://github.com/rails/rails/pull/258#issuecomment-981132\n>", "_id": {"$oid": "52386422bd3543c151012587"}, "html_url": "https://github.com/rails/rails/pull/258#issuecomment-981143"}
