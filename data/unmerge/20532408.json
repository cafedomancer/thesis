{"updated_at": "2013-07-05T18:24:12Z", "repo": "rails", "created_at": "2013-07-05T18:19:49Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/20532408", "id": 20532408, "issue_url": "https://api.github.com/repos/rails/rails/issues/11165", "issue_id": 11165, "user": {"repos_url": "https://api.github.com/users/egilburg/repos", "type": "User", "html_url": "https://github.com/egilburg", "starred_url": "https://api.github.com/users/egilburg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/egilburg/subscriptions", "following_url": "https://api.github.com/users/egilburg/following{/other_user}", "gravatar_id": "cc4f5494a8dcaaf577e678cb3901dab6", "organizations_url": "https://api.github.com/users/egilburg/orgs", "url": "https://api.github.com/users/egilburg", "gists_url": "https://api.github.com/users/egilburg/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/cc4f5494a8dcaaf577e678cb3901dab6?d=https%3A%2F%2Fidenticons.github.com%2F552d65b6e9616642fd0217dc7f8361bd.png", "id": 242532, "events_url": "https://api.github.com/users/egilburg/events{/privacy}", "login": "egilburg", "received_events_url": "https://api.github.com/users/egilburg/received_events", "followers_url": "https://api.github.com/users/egilburg/followers"}, "body": "Why not improve existing implementation to allow for default block similar to how fetch does it? You can combine varargs with block, `def deep_fetch(*args, &block)`. You'd be adding the flexibility that `fetch` has without losing anything, and also making your new method for recognizable for existing users by naming it similar to an existing method except for the `deep` prefix, which would in fact describe the only difference between the two.\r\n\r\nThe only reason I see NOT to do this is due to different variation - `fetch` raises if given a missing key, and I'm not sure you want this in your method.\r\n\r\nUpdate - nevermind, I realized that `fetch` allows not only a default block but a default as 2nd argument. This will indeed cause conflicts with varargs.", "_id": {"$oid": "5237d821bd3543c15100846f"}, "html_url": "https://github.com/rails/rails/pull/11165#issuecomment-20532408"}
