{"issue_url": "https://api.github.com/repos/rails/rails/issues/8597", "repo": "rails", "body": "Problem with the action_args approach is that it doesn't deal with the preload pattern:\r\n\r\n```\r\nclass UsersController < ApplicationController\r\n  before_action :set_user, only: %i( show edit update destroy )\r\n\r\n  # GET /users\r\n  def index\r\n    @users = User.all\r\n  end\r\n\r\n  # GET /users/1\r\n  def show\r\n  end\r\n\r\n  # GET /users/new\r\n  def new\r\n    @user = User.new\r\n  end\r\n\r\n  # GET /users/1/edit\r\n  def edit\r\n  end\r\n\r\n  # POST /users\r\n  def create(user)\r\n    @user = User.new(user)\r\n\r\n    if @user.save\r\n      redirect_to @user, notice: 'User was successfully created.'\r\n    else\r\n      render action: 'new'\r\n    end\r\n  end\r\n\r\n  # PUT /users/1\r\n  def update(user)\r\n    if @user.update_attributes(user)\r\n      redirect_to @user, notice: 'User was successfully updated.'\r\n    else\r\n      render action: 'edit'\r\n    end\r\n  end\r\n\r\n  # DELETE /users/1\r\n  def destroy\r\n    @user.destroy\r\n    redirect_to users_url\r\n  end\r\n  \r\n  private\r\n    def set_user\r\n      @user = User.find(id)\r\n    end\r\nend\r\n```\r\n\r\nIt gets even worse if you have a more complicated finder:\r\n\r\n```\r\ndef set_person\r\n  if @bucket.nil? && params[:person_id].present?\r\n    @person = @current_account.people.find(params[:person_id])\r\n  elsif params[:id] == \"null\"\r\n    @person = @bucket.all_people.find(params[:person_id])\r\n  else\r\n    @person = @bucket.all_accesses.find(params[:id]).person\r\n  end\r\nend\r\n```\r\n\r\nOr one that has the power to redirect:\r\n\r\n```\r\ndef set_attachment\r\n  @attachment = @bucket.attachments.find_by_id(params[:id]) || redirect_to_moved(Attachment, params[:id])\r\nend\r\n```\r\n\r\nSecond problem is that it's just not very clear what the parameters are:\r\n\r\n```\r\ndef create(user)\r\n  @user = User.new(user)\r\nend\r\n```\r\n\r\nYou're passing in a parameter that just says \"user\", but it's not a user object, like the one assigned to @user, it's a set of parameters for the user. params[:user] is much more clear about what this variable actually contains.\r\n\r\nFinally, passing in parameters like that implies that the controller instance is kept around (and all existing state with it). This of course isn't the case.\r\n\r\nSo while it's attractive on the surface, I don't think it stands up when applied to most real-world controllers. Therefore it's not a good fit for Rails, but feel free to go hogwild in a plugin.", "_id": {"$oid": "5237f1c8bd3543c15100a4d7"}, "issue_id": 8597, "url": "https://api.github.com/repos/rails/rails/issues/comments/11656181", "html_url": "https://github.com/rails/rails/pull/8597#issuecomment-11656181", "updated_at": "2012-12-24T08:33:07Z", "user": {"subscriptions_url": "https://api.github.com/users/dhh/subscriptions", "events_url": "https://api.github.com/users/dhh/events{/privacy}", "repos_url": "https://api.github.com/users/dhh/repos", "gists_url": "https://api.github.com/users/dhh/gists{/gist_id}", "url": "https://api.github.com/users/dhh", "login": "dhh", "gravatar_id": "ed9635566b34ade32274f510f0f9a6d2", "html_url": "https://github.com/dhh", "following_url": "https://api.github.com/users/dhh/following{/other_user}", "received_events_url": "https://api.github.com/users/dhh/received_events", "organizations_url": "https://api.github.com/users/dhh/orgs", "avatar_url": "https://1.gravatar.com/avatar/ed9635566b34ade32274f510f0f9a6d2?d=https%3A%2F%2Fidenticons.github.com%2Fcdcb2f5c7b071143529ef7f2705dfbc4.png", "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}", "id": 2741, "followers_url": "https://api.github.com/users/dhh/followers", "type": "User"}, "created_at": "2012-12-24T08:33:07Z", "id": 11656181, "owner": "rails"}
