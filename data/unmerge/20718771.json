{"updated_at": "2013-07-10T02:49:11Z", "repo": "rails", "created_at": "2013-07-10T02:49:11Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/20718771", "id": 20718771, "issue_url": "https://api.github.com/repos/rails/rails/issues/11168", "issue_id": 11168, "user": {"repos_url": "https://api.github.com/users/josh/repos", "type": "User", "html_url": "https://github.com/josh", "starred_url": "https://api.github.com/users/josh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh/subscriptions", "following_url": "https://api.github.com/users/josh/following{/other_user}", "gravatar_id": "bbe5dc8dcf248706525ab76f46185520", "organizations_url": "https://api.github.com/users/josh/orgs", "url": "https://api.github.com/users/josh", "gists_url": "https://api.github.com/users/josh/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/bbe5dc8dcf248706525ab76f46185520?d=https%3A%2F%2Fidenticons.github.com%2F3988c7f88ebcb58c6ce932b957b6f332.png", "id": 137, "events_url": "https://api.github.com/users/josh/events{/privacy}", "login": "josh", "received_events_url": "https://api.github.com/users/josh/received_events", "followers_url": "https://api.github.com/users/josh/followers"}, "body": "@NZKoz wdyt about a `PerishableMessageVerifier` subclass? Definitely worried about whatever crazy things people are already using `MessageVerifier` for.\r\n\r\n> I don't think there's actually a way to make this reliably backwards compatible without introducing issues anyway.\r\n\r\nSorry, I meant as an upgrade path, any existing non-timestamped cookies will be still valid.\r\n\r\n> As for your second point, you can't actually serialize hashes in cookies at present because of this code\r\n\r\nI was actually avoiding `{:_expires}` because I thought that might be possible. That exception might be worth exploiting.", "_id": {"$oid": "5237d81cbd3543c15100844c"}, "html_url": "https://github.com/rails/rails/pull/11168#issuecomment-20718771"}
