{"updated_at": "2013-04-03T19:10:03Z", "repo": "rails", "created_at": "2013-04-03T06:05:36Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/15819980", "id": 15819980, "issue_url": "https://api.github.com/repos/rails/rails/issues/5721", "issue_id": 5721, "user": {"repos_url": "https://api.github.com/users/christhekeele/repos", "type": "User", "html_url": "https://github.com/christhekeele", "starred_url": "https://api.github.com/users/christhekeele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christhekeele/subscriptions", "following_url": "https://api.github.com/users/christhekeele/following{/other_user}", "gravatar_id": "416ea1758c1f440fe9b21e390e26bde2", "organizations_url": "https://api.github.com/users/christhekeele/orgs", "url": "https://api.github.com/users/christhekeele", "gists_url": "https://api.github.com/users/christhekeele/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/416ea1758c1f440fe9b21e390e26bde2?d=https%3A%2F%2Fidenticons.github.com%2Faf059395759419c0f08628f1731aac3e.png", "id": 1406220, "events_url": "https://api.github.com/users/christhekeele/events{/privacy}", "login": "christhekeele", "received_events_url": "https://api.github.com/users/christhekeele/received_events", "followers_url": "https://api.github.com/users/christhekeele/followers"}, "body": "I'm in accord with @stevenharman and @jc00ke: automated `ENV['DATABASE_URL']` management is helpful, but currently in the wrong place.\r\n\r\nMy migrating the configuration I've been using for my non-rails ruby apps, in conjunction with Heroku (Sinatra, Padrino), fails because `ActiveRecord::Base.establish_connection` assumes too much.\r\n\r\nI want my application to read from my `ENV['DATABASE_URL']` and connect to the database, **after** appending my current environment to the database name to avoid clobbering separate environment's dbs. The following code fails, because `ActiveRecord::Base.establish_connection` reads straight from `ENV['DATABASE_URL']`.\r\n\r\n```ruby\r\n# config/application.rb\r\nmodule MyApp\r\n  class Application < Rails::Application\r\n\r\n    config.class_eval do\r\n      def database_configuration\r\n        # Completely ignored because `ActiveRecord` does its own thing upon recognizing `ENV['DATABASE_URL']`\r\n        ActiveRecord::Base.configurations[Rails.env] = ENV['DATABASE_URL'] + \"-#{Rails.env}\"\r\n      end\r\n    end\r\n\r\n  end\r\nend\r\n```\r\n\r\nRails errors out with a `FATAL: database \"raw-db-without-env-appended\" does not exist`. In my opinion, autodetection of `ENV['DATABASE_URL']` should be placed in `Rails.configuration.database_configuration` so that it may be overridden without surprise.", "_id": {"$oid": "523813aabd3543c15100daeb"}, "html_url": "https://github.com/rails/rails/pull/5721#issuecomment-15819980"}
