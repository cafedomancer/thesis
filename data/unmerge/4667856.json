{"updated_at": "2012-03-23T21:04:25Z", "repo": "rails", "created_at": "2012-03-23T21:00:34Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/4667856", "id": 4667856, "issue_url": "https://api.github.com/repos/rails/rails/issues/5329", "issue_id": 5329, "user": {"repos_url": "https://api.github.com/users/fxn/repos", "type": "User", "html_url": "https://github.com/fxn", "starred_url": "https://api.github.com/users/fxn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxn/subscriptions", "following_url": "https://api.github.com/users/fxn/following{/other_user}", "gravatar_id": "7223c62b7310e164eb79c740188abbda", "organizations_url": "https://api.github.com/users/fxn/orgs", "url": "https://api.github.com/users/fxn", "gists_url": "https://api.github.com/users/fxn/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/7223c62b7310e164eb79c740188abbda?d=https%3A%2F%2Fidenticons.github.com%2F4a11654ad1e1e48352252859ff3032a0.png", "id": 3387, "events_url": "https://api.github.com/users/fxn/events{/privacy}", "login": "fxn", "received_events_url": "https://api.github.com/users/fxn/received_events", "followers_url": "https://api.github.com/users/fxn/followers"}, "body": "I understand that having something subtle to fix is annoying.\r\n\r\nYou've gone over a major upgrade though, and again, the interface of the predicate has not changed at all anyway!\r\n\r\nYou have to understand that ? in `xhr?` **does** indicate a boolean value. You believe it should be `true` or `false` (fixed-with font), but in Ruby **any** value is a boolean value because the language defines what is true and false.\r\n\r\nAnd that is the way one writes predicates in Ruby.\r\n\r\nAlso operators rely on this language feature\r\n\r\n    if 1 && 2 && 3\r\n      # do something\r\n    end\r\n\r\nenters the loop because `1 && 2 && 3` evaluates to the true value `3`, there's no requirement for `&&` to return `true` or `false` (and it doesn't). Same for `=~` which is what `xhr?` is based on today.\r\n\r\nThat's the way Ruby works! These semantics about predicates are very common in programming languages indeed.\r\n\r\nOK the thread is clear I believe. I am convinced of the criteria to apply here and that the code had no business doing a double negation. So I am going to close the pull request and at the same time understand your opinion may be different.", "_id": {"$oid": "523819bdbd3543c15100e1fd"}, "html_url": "https://github.com/rails/rails/pull/5329#issuecomment-4667856"}
