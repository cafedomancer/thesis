{"updated_at": "2012-05-25T15:52:17Z", "repo": "rails", "created_at": "2012-05-25T15:52:17Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/5933816", "id": 5933816, "issue_url": "https://api.github.com/repos/rails/rails/issues/6488", "issue_id": 6488, "user": {"repos_url": "https://api.github.com/users/jrochkind/repos", "type": "User", "html_url": "https://github.com/jrochkind", "starred_url": "https://api.github.com/users/jrochkind/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrochkind/subscriptions", "following_url": "https://api.github.com/users/jrochkind/following{/other_user}", "gravatar_id": "6a13e655e637138f8d571cec3f9cea76", "organizations_url": "https://api.github.com/users/jrochkind/orgs", "url": "https://api.github.com/users/jrochkind", "gists_url": "https://api.github.com/users/jrochkind/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/6a13e655e637138f8d571cec3f9cea76?d=https%3A%2F%2Fidenticons.github.com%2Fd54ea80e1dddb765bab019d4dfe36c23.png", "id": 149304, "events_url": "https://api.github.com/users/jrochkind/events{/privacy}", "login": "jrochkind", "received_events_url": "https://api.github.com/users/jrochkind/received_events", "followers_url": "https://api.github.com/users/jrochkind/followers"}, "body": "Aha, so if two connections become available more or less at once, it's not guaranteed whether thread1 or thread2 goes first, but they are both guaranteed to get a connection ahead of thread3?  If that's so, that's plenty good enough. \n\n> I don't see this in the diff. There was an @broadcast in the original patch, \n\n[here](https://github.com/pmahoney/rails/commit/8d049393f713f48611ab3ce033bb4e3ad94a464c#L0R299) is where I see it.  I see now it's actually only in the #reap implementation.  I don't trust the semantics of the reap implementation already, and lack of fairness when reaping (which if it works right ought to only apply to code that violates AR's contract in the first place) is not too much of a concern. \n\nBut I think it could be replaced by counting up how many times the reaper reaped, and doing that many `signal`s instead of a `broadcast`, would that be better?", "_id": {"$oid": "52380786bd3543c15100cadc"}, "html_url": "https://github.com/rails/rails/pull/6488#issuecomment-5933816"}
