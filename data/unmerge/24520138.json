{"updated_at": "2013-09-16T15:45:24Z", "repo": "rails", "created_at": "2013-09-16T15:45:24Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/24520138", "id": 24520138, "issue_url": "https://api.github.com/repos/rails/rails/issues/12236", "issue_id": 12236, "user": {"repos_url": "https://api.github.com/users/georgiev/repos", "type": "User", "html_url": "https://github.com/georgiev", "starred_url": "https://api.github.com/users/georgiev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/georgiev/subscriptions", "following_url": "https://api.github.com/users/georgiev/following{/other_user}", "gravatar_id": "2b04479fb847d7177977ac759769ce34", "organizations_url": "https://api.github.com/users/georgiev/orgs", "url": "https://api.github.com/users/georgiev", "gists_url": "https://api.github.com/users/georgiev/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/2b04479fb847d7177977ac759769ce34?d=https%3A%2F%2Fidenticons.github.com%2F96a1a91bb8696aeb42b9a43aa9a4704f.png", "id": 177977, "events_url": "https://api.github.com/users/georgiev/events{/privacy}", "login": "georgiev", "received_events_url": "https://api.github.com/users/georgiev/received_events", "followers_url": "https://api.github.com/users/georgiev/followers"}, "body": "Ok - beer for all of you people!\r\n\r\nJust a few final questions:\r\nIn the CHANGELOG I see WHAT is done but nothing about WHY?\r\nWhy should I write more code to achieve the same thing?\r\nIn application level terms - what is belongs_to - the object I belong to right?\r\nWhat is has_one - the object that I have right?\r\nWhat is has_many - a COLLECTION of objects that I have right?\r\nIf the above is right why is the has_many NOT acting as a collection (I don't really care if its Relation or Array)?\r\nWhen is has_many acting as a collection and when it's not, which methods are available and which are not?\r\nShould I always call to_a just to be sure that all collection methods are available?\r\nIf the above is true why don't  you call it for me?\r\nAnd how is duplicating the array for each and every array delegated method efficient by any means?\r\nHow has_many.build aligns with your concept of no in-place modifications?\r\nIf you want to make things explicit - why don't you drop the whole array delegation (it's inefficient anyway)? That's what will make things explicit.\r\n\r\nAnyway it was really nice discussion.\r\nThank you too.", "_id": {"$oid": "5237cdb2bd3543c1510079b9"}, "html_url": "https://github.com/rails/rails/pull/12236#issuecomment-24520138"}
