{"updated_at": "2012-03-28T17:31:06Z", "repo": "rails", "created_at": "2012-03-28T17:30:00Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/4773623", "id": 4773623, "issue_url": "https://api.github.com/repos/rails/rails/issues/5639", "issue_id": 5639, "user": {"repos_url": "https://api.github.com/users/radar/repos", "type": "User", "html_url": "https://github.com/radar", "starred_url": "https://api.github.com/users/radar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/radar/subscriptions", "following_url": "https://api.github.com/users/radar/following{/other_user}", "gravatar_id": "9a2a53db8e9b4476038c94a64b32833f", "organizations_url": "https://api.github.com/users/radar/orgs", "url": "https://api.github.com/users/radar", "gists_url": "https://api.github.com/users/radar/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/9a2a53db8e9b4476038c94a64b32833f?d=https%3A%2F%2Fidenticons.github.com%2F573eec40e4ef4f2089531dd5cbf629f8.png", "id": 2687, "events_url": "https://api.github.com/users/radar/events{/privacy}", "login": "radar", "received_events_url": "https://api.github.com/users/radar/received_events", "followers_url": "https://api.github.com/users/radar/followers"}, "body": "@Veraticus: Leaving them in leads to the Rails core having to maintain it. They're also done via a magical `method_missing` call.\r\n\r\nPersonally, I find dynamic finders that use a series of attributes like this:\r\n\r\n```ruby\r\nPost.find_by_author_name_and_title_and_comments_count('Ryan', 'Spartacus', 0)\r\n```\r\n\r\nTo be _less_ readable than this:\r\n\r\n```ruby\r\nPost.first(author_name: \"Ryan\", title: \"Spartacus\", comments_count: 0)\r\n```\r\n\r\nIn the second example, what the attributes and expected values are are right next to each other and therefore can easily be compared, rather than the old dynamic form where you'd have to jump back and forth visually.", "_id": {"$oid": "523814d7bd3543c15100dc46"}, "html_url": "https://github.com/rails/rails/pull/5639#issuecomment-4773623"}
