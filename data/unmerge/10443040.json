{"updated_at": "2012-11-16T10:37:20Z", "repo": "rails", "created_at": "2012-11-16T10:37:20Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/10443040", "id": 10443040, "issue_url": "https://api.github.com/repos/rails/rails/issues/7221", "issue_id": 7221, "user": {"repos_url": "https://api.github.com/users/kot-begemot/repos", "type": "User", "html_url": "https://github.com/kot-begemot", "starred_url": "https://api.github.com/users/kot-begemot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kot-begemot/subscriptions", "following_url": "https://api.github.com/users/kot-begemot/following{/other_user}", "gravatar_id": "2a3e5e19a0d90edfd4eb094385f6617a", "organizations_url": "https://api.github.com/users/kot-begemot/orgs", "url": "https://api.github.com/users/kot-begemot", "gists_url": "https://api.github.com/users/kot-begemot/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/2a3e5e19a0d90edfd4eb094385f6617a?d=https%3A%2F%2Fidenticons.github.com%2F72d2c4e579aecaaf57d87d6406614584.png", "id": 780077, "events_url": "https://api.github.com/users/kot-begemot/events{/privacy}", "login": "kot-begemot", "received_events_url": "https://api.github.com/users/kot-begemot/received_events", "followers_url": "https://api.github.com/users/kot-begemot/followers"}, "body": "Ok, the initial reasoning was:\r\n\r\nI am writing the gem called Undestroyable. This is a sort-delete gem that provides several ways of soft deleting records. For one strategy, I am facing the situation when I had to send the record to remote database. Plus, it should be selectable as well (otherwise there is no point for soft-delete). So the communication with remote database is required. Turns out that there is no simple way to communicate with remote database in AR. Nothing similar to Datamapper repository concept.\r\n\r\n    DataMapper.setup(:default, 'mysql://localhost/dm_core_test')\r\n    DataMapper.setup(:external, 'mysql://someother_host/dm_core_test')\r\n    \r\n    Person.first \r\n    DataMapper.repository(:external) { Person.first }\r\n\r\nI was checking the code of AR::Relation, thought may be there is a way to implement it with simple redefinition of connection that is used. Turns out that the connection is obtained uniquely in each case, and there is no easy way to implement to communication, except for cloning the whole class, and redefine the connection for cloned one, which is weird hack.\r\n\r\nSo, I spend some time investigating the issue, and end up with this pull request. Now, connection method< can be redefined, and necessary communication with remote DB can happen through AR::Relation.", "_id": {"$oid": "523e00c7bd354364b900c47f"}, "html_url": "https://github.com/rails/rails/pull/7221#issuecomment-10443040"}
