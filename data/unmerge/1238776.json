{"updated_at": "2011-05-25T22:14:41Z", "repo": "rails", "created_at": "2011-05-25T22:14:41Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/1238776", "id": 1238776, "issue_url": "https://api.github.com/repos/rails/rails/issues/1159", "issue_id": 1159, "user": {"repos_url": "https://api.github.com/users/lewinski/repos", "type": "User", "html_url": "https://github.com/lewinski", "starred_url": "https://api.github.com/users/lewinski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lewinski/subscriptions", "following_url": "https://api.github.com/users/lewinski/following{/other_user}", "gravatar_id": "4a346adf7ac13f094b12f3b7cbe56081", "organizations_url": "https://api.github.com/users/lewinski/orgs", "url": "https://api.github.com/users/lewinski", "gists_url": "https://api.github.com/users/lewinski/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/4a346adf7ac13f094b12f3b7cbe56081?d=https%3A%2F%2Fidenticons.github.com%2F845df1e63f2d864511bfb890e4eb2899.png", "id": 61409, "events_url": "https://api.github.com/users/lewinski/events{/privacy}", "login": "lewinski", "received_events_url": "https://api.github.com/users/lewinski/received_events", "followers_url": "https://api.github.com/users/lewinski/followers"}, "body": "Serialize as a verb feels like it implies a two-way operation. The default bcrypt password encryption is clearly one-way, but when storing a password, one-way isn't necessarily a requirement.\r\n\r\n`has_secure` as a general phrase could be taken to mean one- or two-way. To take the `has_secure :drivers_license` example, one might think that they could get the original data back out -- it's just stored \"securely\" (whatever that means). So maybe \"authenticatable\" is a better general purpose description than \"secure,\" especially when you're describing data other than passwords. Of course forcing people to spell that is another issue altogether.\r\n", "_id": {"$oid": "52385c96bd3543c151011f30"}, "html_url": "https://github.com/rails/rails/pull/1159#issuecomment-1238776"}
