{"issue_url": "https://api.github.com/repos/rails/rails/issues/5379", "repo": "rails", "body": "@guilleiguaran awesome!\r\n\r\n@josevalim thanks. \r\n\r\nI choose to implement this with Rails config vs ENV config based on the fact that the behaviour of `rake assets:precompile` is already influenced by the Rails config. I think this is the best approach as it means no matter where I run `rake assets:precompile` the result will be the same.\r\n\r\nIn my mind the `config.assets.digest` should determine wether to run `precompile:primary` or `precompile:nondigest` not both. The only reason we're doing both is to help people who haven't got all their asset references fixed to return the digested links in all aspects of their application... have I got that right? I've found that's great for bootstrapping a migration of a Rails 3.0 to 3.1 application. However it's really not helping people if they start using a CDN and are referencing nondigest assets unknowingly. It's much better if this fails fast and is fixed on a first deploy to a staging setup.\r\n\r\nThat's my opinion, and was my first port of call for implementing this but I thought it would be a much more difficult change, that's why I put together this patch which offers all the existing functionality and unobtrusively allows \"taking off the training wheels\" when you don't need them :)\r\n\r\nWhilst it would be less preferable, I'd be up for reworking this to use ENV variables if that was the consensus!\r\n\r\nRegarding *asset_sync* if I've made a mistake in our integration, I'm all ears. We're not actually hooking into both tasks: as of **0.3.0** (Rails 3.2.x) we're enhancing only the `assets:precompile:nondigest` task as it will always be ran and ran last.\r\n\r\nDue to how the usage of `Kernal.exec` was introduced. We stopped enhancing the `assets:precompile` task but left it in the default Rake task for backwards compatibility with **Rails 3.1.x** releases to kick in only if the `assets:precompile:nondigest` task does not exist. Rather than sniffing Rails versions specifically.\r\n\r\nI actually already fired a mail to Heroku for their thoughts on this. I totally agree, I'd love if their deployment strategies were a lot more customisable too.\r\n\r\n\r\n", "_id": {"$oid": "5238191abd3543c15100e12d"}, "issue_id": 5379, "url": "https://api.github.com/repos/rails/rails/issues/comments/4440921", "html_url": "https://github.com/rails/rails/pull/5379#issuecomment-4440921", "updated_at": "2012-03-11T18:18:26Z", "user": {"subscriptions_url": "https://api.github.com/users/davidjrice/subscriptions", "events_url": "https://api.github.com/users/davidjrice/events{/privacy}", "repos_url": "https://api.github.com/users/davidjrice/repos", "gists_url": "https://api.github.com/users/davidjrice/gists{/gist_id}", "url": "https://api.github.com/users/davidjrice", "login": "davidjrice", "gravatar_id": "71f4402df3b4cdc8230e9922d3c5af32", "html_url": "https://github.com/davidjrice", "following_url": "https://api.github.com/users/davidjrice/following{/other_user}", "received_events_url": "https://api.github.com/users/davidjrice/received_events", "organizations_url": "https://api.github.com/users/davidjrice/orgs", "avatar_url": "https://0.gravatar.com/avatar/71f4402df3b4cdc8230e9922d3c5af32?d=https%3A%2F%2Fidenticons.github.com%2Fde73998802680548b916f1947ffbad76.png", "starred_url": "https://api.github.com/users/davidjrice/starred{/owner}{/repo}", "id": 1971, "followers_url": "https://api.github.com/users/davidjrice/followers", "type": "User"}, "created_at": "2012-03-11T18:18:26Z", "id": 4440921, "owner": "rails"}
