{"body": "@steveklabnik - thanks for the quick look.  The idea is that it simplifies cluttered nil checking when accessing deeply nested hashes which - at least in the codebases I've worked in - is prevalent. \r\n```ruby\r\nif response[:part] && response[:part][:availability] && response[:part][:availability][:quantity_backordered]\r\n    # do something\r\nend\r\n```\r\n...into\r\n\r\n```ruby\r\nif response.traverse :part, :availability, :quantity_backordered\r\n    # do something\r\nend\r\n```\r\n\r\nWith the addition of the optional default it becomes like an extended `Hash#fetch`.\r\n```ruby\r\npart_response = response.traverse(:part, :availability) { EmptyPartAvailabilityResponse.new }\r\n```\r\n\r\n@rafaelfranca - I think the issue with your refute is pretty obvious - the existence of objects in a nested hash can't always be guaranteed.  Code that doesn't take this into account is brittle, and code that does is often long winded.  In my code, this has helped combat that situation. \r\n\r\nIn regard to whether it belongs in ActiveSupport, I'm not passionate.  I'm new to contributing to Rails and from my perspective ActiveSupport seemed a decent context for the patch based on what I perceive as being handled there.  Advice on a better location would be more than welcome.", "url": "https://api.github.com/repos/rails/rails/issues/comments/12517365", "created_at": "2013-01-21T21:04:58Z", "html_url": "https://github.com/rails/rails/pull/9020#issuecomment-12517365", "updated_at": "2013-01-21T21:04:58Z", "repo": "rails", "issue_id": 9020, "user": {"following_url": "https://api.github.com/users/tylerdooling/following{/other_user}", "events_url": "https://api.github.com/users/tylerdooling/events{/privacy}", "organizations_url": "https://api.github.com/users/tylerdooling/orgs", "url": "https://api.github.com/users/tylerdooling", "gists_url": "https://api.github.com/users/tylerdooling/gists{/gist_id}", "html_url": "https://github.com/tylerdooling", "subscriptions_url": "https://api.github.com/users/tylerdooling/subscriptions", "avatar_url": "https://1.gravatar.com/avatar/e6d4bed21c13d5d7ed1fa243b5e2c361?d=https%3A%2F%2Fidenticons.github.com%2Fe17719032043caf03c1a8f7ef535a572.png", "repos_url": "https://api.github.com/users/tylerdooling/repos", "received_events_url": "https://api.github.com/users/tylerdooling/received_events", "gravatar_id": "e6d4bed21c13d5d7ed1fa243b5e2c361", "starred_url": "https://api.github.com/users/tylerdooling/starred{/owner}{/repo}", "login": "tylerdooling", "type": "User", "id": 533751, "followers_url": "https://api.github.com/users/tylerdooling/followers"}, "owner": "rails", "_id": {"$oid": "523d5db1bd354364b90062e4"}, "id": 12517365, "issue_url": "https://api.github.com/repos/rails/rails/issues/9020"}
