{"updated_at": "2012-06-22T00:02:20Z", "repo": "rails", "created_at": "2012-06-21T23:58:33Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/6497668", "id": 6497668, "issue_url": "https://api.github.com/repos/rails/rails/issues/6685", "issue_id": 6685, "user": {"repos_url": "https://api.github.com/users/kenn/repos", "type": "User", "html_url": "https://github.com/kenn", "starred_url": "https://api.github.com/users/kenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenn/subscriptions", "following_url": "https://api.github.com/users/kenn/following{/other_user}", "gravatar_id": "f3c42aa7989a9a0c37709abc08a6327f", "organizations_url": "https://api.github.com/users/kenn/orgs", "url": "https://api.github.com/users/kenn", "gists_url": "https://api.github.com/users/kenn/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/f3c42aa7989a9a0c37709abc08a6327f?d=https%3A%2F%2Fidenticons.github.com%2F20d749bc05f47d2bd3026ce457dcfd8e.png", "id": 10350, "events_url": "https://api.github.com/users/kenn/events{/privacy}", "login": "kenn", "received_events_url": "https://api.github.com/users/kenn/received_events", "followers_url": "https://api.github.com/users/kenn/followers"}, "body": "@tarcieri with that simplistic statement (threads share memory while processes do not), you are only talking about visibility of shared memory, but it could actually be the same physical memory, until it's mutated - that's indeed the effect of CoW.\n\nBut I agree with you that in the real world, CoW isn't nearly as effective as threads. CLONE_VM is the most significant option to clone() call, that is. I'm just pointing out that multi-thread is, at least in theory, very close to multi-process. And not worrying about thread-safety, with **transparently** shared memory, is a huge win for developers.\n\nI've +1'd to your suggestion anyway, so...", "_id": {"$oid": "52380552bd3543c15100c735"}, "html_url": "https://github.com/rails/rails/pull/6685#issuecomment-6497668"}
