{"updated_at": "2012-11-21T05:36:05Z", "repo": "rails", "created_at": "2012-11-21T05:36:05Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/10586155", "id": 10586155, "issue_url": "https://api.github.com/repos/rails/rails/issues/8208", "issue_id": 8208, "user": {"repos_url": "https://api.github.com/users/kalv/repos", "type": "User", "html_url": "https://github.com/kalv", "starred_url": "https://api.github.com/users/kalv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kalv/subscriptions", "following_url": "https://api.github.com/users/kalv/following{/other_user}", "gravatar_id": "a519fba3343ce8aa2a59c937f36d3592", "organizations_url": "https://api.github.com/users/kalv/orgs", "url": "https://api.github.com/users/kalv", "gists_url": "https://api.github.com/users/kalv/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/a519fba3343ce8aa2a59c937f36d3592?d=https%3A%2F%2Fidenticons.github.com%2F5b80dc3087306fe93a4dca4faadaf71c.png", "id": 6521, "events_url": "https://api.github.com/users/kalv/events{/privacy}", "login": "kalv", "received_events_url": "https://api.github.com/users/kalv/received_events", "followers_url": "https://api.github.com/users/kalv/followers"}, "body": "@steveklabnik thanks for the explanation. Do get some rest I saw your tweet on the epic travelling :)\r\n\r\nI had thought this behaviour related to the spec on [HTTP Token Access Authentication](http://tools.ietf.org/html/draft-hammer-http-token-auth-01) not the HTTP auth-scheme token behaviour.\r\n\r\nI came to this conclusion because of the use of the key 'nonce' used in the comments on [ActionController::HttpAuthentication::Token#token_and_options](https://github.com/rails/rails/blob/master/actionpack/lib/action_controller/metal/http_authentication.rb#L433) and how that's reference in the spec.  The code also tries to regex match on the capitalized \"Token\" which is referenced in the [section 5](http://tools.ietf.org/html/draft-hammer-http-token-auth-01#section-5) of the spec.\r\n\r\nIf it is do with the HTTP token spec then it states in there that the string can be an [opaque string](http://tools.ietf.org/html/draft-hammer-http-token-auth-01#section-5.1).  I scanned through the rest of the spec and couldn't find anything on special characters that a token cannot contain.", "_id": {"$oid": "523da2c5bd354364b90088d5"}, "html_url": "https://github.com/rails/rails/pull/8208#issuecomment-10586155"}
