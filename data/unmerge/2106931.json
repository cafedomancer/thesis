{"updated_at": "2011-09-15T17:40:00Z", "repo": "rails", "created_at": "2011-09-15T17:40:00Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/2106931", "id": 2106931, "issue_url": "https://api.github.com/repos/rails/rails/issues/2886", "issue_id": 2886, "user": {"repos_url": "https://api.github.com/users/mjtko/repos", "type": "User", "html_url": "https://github.com/mjtko", "starred_url": "https://api.github.com/users/mjtko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjtko/subscriptions", "following_url": "https://api.github.com/users/mjtko/following{/other_user}", "gravatar_id": "be9f8a7e49b430ac89efe1bc8aa1026d", "organizations_url": "https://api.github.com/users/mjtko/orgs", "url": "https://api.github.com/users/mjtko", "gists_url": "https://api.github.com/users/mjtko/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/be9f8a7e49b430ac89efe1bc8aa1026d?d=https%3A%2F%2Fidenticons.github.com%2F88d16337f620f14a9d05a6b5d459802c.png", "id": 206834, "events_url": "https://api.github.com/users/mjtko/events{/privacy}", "login": "mjtko", "received_events_url": "https://api.github.com/users/mjtko/received_events", "followers_url": "https://api.github.com/users/mjtko/followers"}, "body": "@greinacker Sure, I understand where you're coming from with your objections.  Let me just take them in order with responses: :)\r\n\r\n 1. the web server configuration could be Include'd (in apache speak, i'm sure nginx has a similar capability) from a file within the rails app.\r\n 2. agree here, though if HA is needed, HA should be dealt with somehow else. :)\r\n 3. hundreds of files feels like an edge case where a different approach should certainly be taken. :)\r\n\r\nI agree that it's more complex than the approach of copying/duplicating files, though I feel it's more elegant.\r\n\r\nTo the alternatives!\r\n\r\n 1. copying is simple but wasteful IMHO; also breaks cache busting\r\n 2. symlinking also breaks the possibility of cache busting\r\n 3. yup, this feels a bit kludgy indeed\r\n\r\nI do _like_ the middleware approach, but I think for 'proper' avoid-the-stack operations (while still retaining cache busting) the only option is to configure the web server to understand the mapping to the digested assets somehow.\r\n\r\nCache busting could be ignored ofc - but isn't this the primary point of using digests in the first place? :-)\r\n", "_id": {"$oid": "52383e0abd3543c151010540"}, "html_url": "https://github.com/rails/rails/pull/2886#issuecomment-2106931"}
