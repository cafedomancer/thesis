{"updated_at": "2011-06-01T05:08:55Z", "repo": "rails", "created_at": "2011-06-01T05:08:55Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/1272191", "id": 1272191, "issue_url": "https://api.github.com/repos/rails/rails/issues/1413", "issue_id": 1413, "user": {"repos_url": "https://api.github.com/users/winterchord/repos", "type": "User", "html_url": "https://github.com/winterchord", "starred_url": "https://api.github.com/users/winterchord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/winterchord/subscriptions", "following_url": "https://api.github.com/users/winterchord/following{/other_user}", "gravatar_id": "0f73862b279970928f9cccd8d137e1a3", "organizations_url": "https://api.github.com/users/winterchord/orgs", "url": "https://api.github.com/users/winterchord", "gists_url": "https://api.github.com/users/winterchord/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/0f73862b279970928f9cccd8d137e1a3?d=https%3A%2F%2Fidenticons.github.com%2Fa376802c0811f1b9088828288eb0d3f0.png", "id": 4782, "events_url": "https://api.github.com/users/winterchord/events{/privacy}", "login": "winterchord", "received_events_url": "https://api.github.com/users/winterchord/received_events", "followers_url": "https://api.github.com/users/winterchord/followers"}, "body": "Hey @jonleighton, would you be opposed to something like\r\n\r\n```ruby\r\ndef build_arel\r\n  # ...\r\n  order = @order_values\r\n  order = [\"#{quoted_table_name}.#{primary_key} ASC\"] if order.empty?\r\n  order = @reorder_value if @reorder_value\r\n  order = reverse_sql_order(order) if @reverse_order_value\r\n  arel.order(*order.uniq.reject{|o| o.blank?}) unless order.empty?\r\n  # ...\r\nend\r\n```\r\n\r\nThe idea is that we default to ascending primary key ordering, when not given an order. Is there a better way to express `[\"#{quoted_table_name}.#{primary_key} ASC\"]`?", "_id": {"$oid": "523857c6bd3543c151011ba4"}, "html_url": "https://github.com/rails/rails/pull/1413#issuecomment-1272191"}
