{"body": "Thanks for your PR! Some feedback:\r\n\r\n1. I remember there is/was an `.unscoped` method (as opposed to `.unscope`, note the ending 'd') - is/was there a difference between the two? Isn't the whole point of `.unscoped`/`.unscope` to remove the default scope - otherwise what's the use of that method at all?\r\n2. I agree that `.unscope`/`.unscoped` should remove/override `default_scope`, but not sure whether the same should apply to `.except`. I could argue that `.except` is used to override/customize other \"normal\" (e.g. not \"default\") scopes, such as those inherited from superclasses, and `.default_scope` should be as transparent to `.except` as it is to other clauses; to override a `.default_scope`, explicit `.unscope`/`.unscoped` should be used in addition or instead of `.except`, as required.\r\n3. If there is a desire for flexibility of `.unscope` to only remove some clauses such as `.where` but not others, I think `.unscope` should take array/varargs arguments that specify which clauses should be removed:\r\n\r\n```ruby\r\nUser.unscope(:where).where(...) # replace existing `.where` scopes but preserve other existing scopes.\r\n```\r\n\r\nRight now there are some custom method that do this, such as `.reorder` (which drops existing order clauses before setting new ones) as opposed to `.order` (which appends clauses without removing old ones), and I always felt that led to method sprawl and wasn't friendly to new users who didn't now the intimate details of all the API. I'd rather have a more explicit way of removing or replacing existing scopes (such as above `.unscope` with arguments).", "url": "https://api.github.com/repos/rails/rails/issues/comments/19520761", "created_at": "2013-06-16T23:01:10Z", "html_url": "https://github.com/rails/rails/pull/10966#issuecomment-19520761", "updated_at": "2013-06-16T23:14:54Z", "repo": "rails", "issue_id": 10966, "user": {"following_url": "https://api.github.com/users/egilburg/following{/other_user}", "events_url": "https://api.github.com/users/egilburg/events{/privacy}", "organizations_url": "https://api.github.com/users/egilburg/orgs", "url": "https://api.github.com/users/egilburg", "gists_url": "https://api.github.com/users/egilburg/gists{/gist_id}", "html_url": "https://github.com/egilburg", "subscriptions_url": "https://api.github.com/users/egilburg/subscriptions", "avatar_url": "https://0.gravatar.com/avatar/cc4f5494a8dcaaf577e678cb3901dab6?d=https%3A%2F%2Fidenticons.github.com%2F552d65b6e9616642fd0217dc7f8361bd.png", "repos_url": "https://api.github.com/users/egilburg/repos", "received_events_url": "https://api.github.com/users/egilburg/received_events", "gravatar_id": "cc4f5494a8dcaaf577e678cb3901dab6", "starred_url": "https://api.github.com/users/egilburg/starred{/owner}{/repo}", "login": "egilburg", "type": "User", "id": 242532, "followers_url": "https://api.github.com/users/egilburg/followers"}, "owner": "rails", "_id": {"$oid": "5237da2ebd3543c1510086b4"}, "id": 19520761, "issue_url": "https://api.github.com/repos/rails/rails/issues/10966"}
