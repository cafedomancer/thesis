{"updated_at": "2012-06-21T23:18:31Z", "repo": "rails", "created_at": "2012-06-21T23:13:28Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/6496974", "id": 6496974, "issue_url": "https://api.github.com/repos/rails/rails/issues/6685", "issue_id": 6685, "user": {"repos_url": "https://api.github.com/users/tarcieri/repos", "type": "User", "html_url": "https://github.com/tarcieri", "starred_url": "https://api.github.com/users/tarcieri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tarcieri/subscriptions", "following_url": "https://api.github.com/users/tarcieri/following{/other_user}", "gravatar_id": "4131d2f57a0db2a2b4d9a62bd389fd44", "organizations_url": "https://api.github.com/users/tarcieri/orgs", "url": "https://api.github.com/users/tarcieri", "gists_url": "https://api.github.com/users/tarcieri/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/4131d2f57a0db2a2b4d9a62bd389fd44?d=https%3A%2F%2Fidenticons.github.com%2Fbeb22fb694d513edcf5533cf006dfeae.png", "id": 797, "events_url": "https://api.github.com/users/tarcieri/events{/privacy}", "login": "tarcieri", "received_events_url": "https://api.github.com/users/tarcieri/received_events", "followers_url": "https://api.github.com/users/tarcieri/followers"}, "body": "> eager loading would benefit users of CoW GC, and it would cancel out the benefit of using multi-threaded envs for less memory consumption [...] writing thread-safe code - again, I'd strees that's for request concurrency - would be less beneficial, just adding code complexity.\n\nPlease see my comments about how a lack of thread safety *increases* code complexity:\n\nhttps://github.com/rails/rails/pull/6685#issuecomment-6348775\n\nI am speaking from the experience of how I have seen systems which were already CoW-friendly (i.e. REE w\\ eager loading) handle concurrency. There is still the issue that requests that block for long periods of time can easily take down an entire site. If you receive N of these requests, your site will be completely blocked and unable to handle any traffic.\n\nAs a result, people attempt to keep render times short by placing long running requests into background job queues and polling for the result if desired. This adds a ton of incidental complexity when synchronous requests would otherwise suffice.\n\nIn the days before Rails was thread safe, I used to use a Merb application to handle long-running requests like this (e.g. ones that proxy to a slow external service or make calls to several services) Threads provide a lightweight way for a single VM to service several requests. CoW helps, but a VM is still substantially heavier than a pthread.", "_id": {"$oid": "52380552bd3543c15100c72c"}, "html_url": "https://github.com/rails/rails/pull/6685#issuecomment-6496974"}
