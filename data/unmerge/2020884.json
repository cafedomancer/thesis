{"updated_at": "2011-09-06T23:33:12Z", "repo": "rails", "created_at": "2011-09-06T18:50:59Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/2020884", "id": 2020884, "issue_url": "https://api.github.com/repos/rails/rails/issues/2881", "issue_id": 2881, "user": {"repos_url": "https://api.github.com/users/shwoodard/repos", "type": "User", "html_url": "https://github.com/shwoodard", "starred_url": "https://api.github.com/users/shwoodard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shwoodard/subscriptions", "following_url": "https://api.github.com/users/shwoodard/following{/other_user}", "gravatar_id": "1e2f907b5827a6f705d61c04d5e24bfc", "organizations_url": "https://api.github.com/users/shwoodard/orgs", "url": "https://api.github.com/users/shwoodard", "gists_url": "https://api.github.com/users/shwoodard/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/1e2f907b5827a6f705d61c04d5e24bfc?d=https%3A%2F%2Fidenticons.github.com%2F1f42e9148d92052e09e08f8874979d12.png", "id": 34149, "events_url": "https://api.github.com/users/shwoodard/events{/privacy}", "login": "shwoodard", "received_events_url": "https://api.github.com/users/shwoodard/received_events", "followers_url": "https://api.github.com/users/shwoodard/followers"}, "body": "Hi,\r\n\r\nThe use case for this is when adding one object to a collection--a `has_many :through`.  In this case if the object to be added already exists, I simply want to create a join model instance with the record and cease execution on the addition to the collection so that a new object is not created.\r\n\r\n``` ruby\r\n    has_many :repositories, :through => :project_repositories, :before_add => :check_to_see_if_exists\r\n\r\n    def check_to_see_if_exists(repository)\r\n      if exisiting_repo = Repository.find_by_name_and_url(repository.name, repository.url)\r\n        ProjectRepository.create!(:project => self, :repository => exisiting_repo)\r\n        return false\r\n      end\r\n    end\r\n```\r\n\r\nI think that this also conforms to similar apis like returning `false` from a before_save.  More importantly, I want addition to this collection to behave the same for all additions like `<<`, etc.  More to come in a bit.  (Super busy :( )", "_id": {"$oid": "52383e10bd3543c15101055c"}, "html_url": "https://github.com/rails/rails/pull/2881#issuecomment-2020884"}
