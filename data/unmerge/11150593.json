{"updated_at": "2012-12-07T23:18:09Z", "repo": "rails", "created_at": "2012-12-07T23:18:09Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/11150593", "id": 11150593, "issue_url": "https://api.github.com/repos/rails/rails/issues/8453", "issue_id": 8453, "user": {"repos_url": "https://api.github.com/users/claudiob/repos", "type": "User", "html_url": "https://github.com/claudiob", "starred_url": "https://api.github.com/users/claudiob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claudiob/subscriptions", "following_url": "https://api.github.com/users/claudiob/following{/other_user}", "gravatar_id": "4dea5cf83d2d6c1228750b76e579b38d", "organizations_url": "https://api.github.com/users/claudiob/orgs", "url": "https://api.github.com/users/claudiob", "gists_url": "https://api.github.com/users/claudiob/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/4dea5cf83d2d6c1228750b76e579b38d?d=https%3A%2F%2Fidenticons.github.com%2F11ed516444b2593eaba7f2c2bb63483e.png", "id": 10076, "events_url": "https://api.github.com/users/claudiob/events{/privacy}", "login": "claudiob", "received_events_url": "https://api.github.com/users/claudiob/received_events", "followers_url": "https://api.github.com/users/claudiob/followers"}, "body": "@dhh I see your point. Would you be instead a fan of an `or` chainable method instead? Would you like this code?\r\n\r\n    User.where(['name = ?', 'Mike']).or(name: 'John', comments_count: 0).or('comments_count in (1,2)')\r\n\r\nIn my opinion, this would be a better way to write:\r\n\r\n    user = User.arel_table\r\n    User.where user[:name].eq('Mike').or(user[:name].eq('John').and user[:comments_count].eq(0)).or(user[:comments_count].in [1,2])\r\n\r\nin order to obtain:\r\n\r\n    SELECT `users`.* FROM `users` WHERE (((`users`.`username` = 'Mike' OR `users`.`username` = 'John' AND `users`.`comments_count` = 0) OR `users`.`comments_count` IN (1, 2)))\r\n\r\nWhat is your take on this?\r\n", "_id": {"$oid": "5237f30ebd3543c15100a760"}, "html_url": "https://github.com/rails/rails/pull/8453#issuecomment-11150593"}
