{"updated_at": "2012-03-23T23:36:40Z", "repo": "rails", "created_at": "2012-03-23T23:36:40Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/4669957", "id": 4669957, "issue_url": "https://api.github.com/repos/rails/rails/issues/5329", "issue_id": 5329, "user": {"repos_url": "https://api.github.com/users/rlivsey/repos", "type": "User", "html_url": "https://github.com/rlivsey", "starred_url": "https://api.github.com/users/rlivsey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rlivsey/subscriptions", "following_url": "https://api.github.com/users/rlivsey/following{/other_user}", "gravatar_id": "bd78511c012f145a05a227c98f2d5523", "organizations_url": "https://api.github.com/users/rlivsey/orgs", "url": "https://api.github.com/users/rlivsey", "gists_url": "https://api.github.com/users/rlivsey/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/bd78511c012f145a05a227c98f2d5523?d=https%3A%2F%2Fidenticons.github.com%2F33ef701c8059391708f1c3ddbe9f1f81.png", "id": 3740, "events_url": "https://api.github.com/users/rlivsey/events{/privacy}", "login": "rlivsey", "received_events_url": "https://api.github.com/users/rlivsey/received_events", "followers_url": "https://api.github.com/users/rlivsey/followers"}, "body": "I get the argument that client code shouldn't expect / rely on the singletons being returned, but I fail to see how the downsides weigh against accepting this request.\r\n\r\nAs far as I can tell:\r\n\r\nCons for returning singletons:\r\n\r\n* one/two extra characters in the codebase (multiplied by number of predicate methods obviously)\r\n* maybe lulls developers into a false sense of security that all predicate methods everywhere return singletons?\r\n* ...?\r\n\r\nCons for *not* returning singletons:\r\n\r\n* confusing for consumers of the library, even those who have read the documentation style-guides\r\n* [leaks encapsulation](https://github.com/rails/rails/pull/5329#issuecomment-4669686)\r\n* messes up logs, forces all client code to coerce to booleans first\r\n* messes up output in IRB/debugger\r\n\r\nFor a framework which added in #second, #third etc... to Array I don't see extra characters of code being a good argument against accepting this, so it must be a question of purity.\r\n\r\nRails famously \"optimises for developer happiness\", I'd have thought purity should take a close second place to obviousness where reasonable?\r\n\r\nMy 2\u00a2, worth considerably less than that!", "_id": {"$oid": "523819bdbd3543c15100e21f"}, "html_url": "https://github.com/rails/rails/pull/5329#issuecomment-4669957"}
