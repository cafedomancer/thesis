{"updated_at": "2011-08-14T14:19:32Z", "repo": "rails", "created_at": "2011-08-14T14:19:32Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/1801708", "id": 1801708, "issue_url": "https://api.github.com/repos/rails/rails/issues/2521", "issue_id": 2521, "user": {"repos_url": "https://api.github.com/users/BrentWheeldon/repos", "type": "User", "html_url": "https://github.com/BrentWheeldon", "starred_url": "https://api.github.com/users/BrentWheeldon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrentWheeldon/subscriptions", "following_url": "https://api.github.com/users/BrentWheeldon/following{/other_user}", "gravatar_id": "04e37f7d55bdb2b2871834700fa30c97", "organizations_url": "https://api.github.com/users/BrentWheeldon/orgs", "url": "https://api.github.com/users/BrentWheeldon", "gists_url": "https://api.github.com/users/BrentWheeldon/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/04e37f7d55bdb2b2871834700fa30c97?d=https%3A%2F%2Fidenticons.github.com%2F7b8209725ca54c612810263e9dfea47d.png", "id": 764206, "events_url": "https://api.github.com/users/BrentWheeldon/events{/privacy}", "login": "BrentWheeldon", "received_events_url": "https://api.github.com/users/BrentWheeldon/received_events", "followers_url": "https://api.github.com/users/BrentWheeldon/followers"}, "body": "If the validator was called validates_not_blank then I would totally support not fixing this. But having a model be invalid when there *is* a value (that is, \"false\") for the field is totally lame...\r\n\r\nvalidates_acceptance_of appears to do exactly what validates_presence_of does on a boolean column so people exploiting the unexpected behavior of validates_acceptance_of should move to validates_acceptance_of and the rest of us can use validates_presence_of in the expected way.", "_id": {"$oid": "523842c5bd3543c151010b5e"}, "html_url": "https://github.com/rails/rails/pull/2521#issuecomment-1801708"}
