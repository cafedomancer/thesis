{"body": "Oh and it's not really like `#first_or_create` because it will issue an update to the first one it finds.\r\n\r\nThe difference is the following:\r\n\r\n```ruby\r\n@user.memberships.first_or_create(role: 'admin')\r\n```\r\n\r\nThat code will just look up the first membership for the user, but won't update the user to being an admin.\r\n\r\nAnd It's more like a `PATCH` request in that it's based on a relation that will update or create a record based on all of the attributes given (and the relation) than it is a `PUT` that requires all attributes. But of course both of those methods usually require an existing record. I see what you're getting at and I think the PATCH vs PUT argument is only relevant when arguing about HTTP caching so I'll digress.\r\n\r\nThanks again for your input", "url": "https://api.github.com/repos/rails/rails/issues/comments/4832439", "created_at": "2012-03-29T22:10:37Z", "html_url": "https://github.com/rails/rails/pull/5648#issuecomment-4832439", "updated_at": "2012-03-29T22:14:20Z", "repo": "rails", "issue_id": 5648, "user": {"following_url": "https://api.github.com/users/clifton/following{/other_user}", "events_url": "https://api.github.com/users/clifton/events{/privacy}", "organizations_url": "https://api.github.com/users/clifton/orgs", "url": "https://api.github.com/users/clifton", "gists_url": "https://api.github.com/users/clifton/gists{/gist_id}", "html_url": "https://github.com/clifton", "subscriptions_url": "https://api.github.com/users/clifton/subscriptions", "avatar_url": "https://2.gravatar.com/avatar/4cede21ea96795d2de831e9981cc81cd?d=https%3A%2F%2Fidenticons.github.com%2Fc27181a18d3b30d14d66a1a56c068548.png", "repos_url": "https://api.github.com/users/clifton/repos", "received_events_url": "https://api.github.com/users/clifton/received_events", "gravatar_id": "4cede21ea96795d2de831e9981cc81cd", "starred_url": "https://api.github.com/users/clifton/starred{/owner}{/repo}", "login": "clifton", "type": "User", "id": 14217, "followers_url": "https://api.github.com/users/clifton/followers"}, "owner": "rails", "_id": {"$oid": "523814b1bd3543c15100dc06"}, "id": 4832439, "issue_url": "https://api.github.com/repos/rails/rails/issues/5648"}
