{"updated_at": "2011-06-07T09:41:43Z", "repo": "rails", "created_at": "2011-06-07T09:41:43Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/1314693", "id": 1314693, "issue_url": "https://api.github.com/repos/rails/rails/issues/1422", "issue_id": 1422, "user": {"repos_url": "https://api.github.com/users/tribalvibes/repos", "type": "User", "html_url": "https://github.com/tribalvibes", "starred_url": "https://api.github.com/users/tribalvibes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tribalvibes/subscriptions", "following_url": "https://api.github.com/users/tribalvibes/following{/other_user}", "gravatar_id": "251e5499b8ad4f6518e29a6a6f2b2c82", "organizations_url": "https://api.github.com/users/tribalvibes/orgs", "url": "https://api.github.com/users/tribalvibes", "gists_url": "https://api.github.com/users/tribalvibes/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/251e5499b8ad4f6518e29a6a6f2b2c82?d=https%3A%2F%2Fidenticons.github.com%2F38c0bb6153a37c4f42fbe27a45e3b51f.png", "id": 167275, "events_url": "https://api.github.com/users/tribalvibes/events{/privacy}", "login": "tribalvibes", "received_events_url": "https://api.github.com/users/tribalvibes/received_events", "followers_url": "https://api.github.com/users/tribalvibes/followers"}, "body": "Thanks for the quick response. Yes indeed that is one problem of using the fully qualified class name rather than explicitly nesting within modules, although the enclosing module has always been previously declared before encountering the FQCN which then appear in top-level scope. \r\n\r\nI can make these edits, but from my limited vantage point I cannot see why this should make any difference to any code that intercepts constant lookups. If ruby allows the syntax, Rails/AS should not interfere with it. Also I'm trying to remember  why this exists at all--something to do with scoping of association declarations? This reeks of code to be deleted from the framework in favor of what ruby provides intrinsically or at least something with fewer side effects.\r\n\r\nI'll make the changes to our code and see if I can give you a further concrete example. All I know is that installing the patches from lighthouse #2283 fixed the problem in 2.3.x so I was about to look and see if the same patches could be applied to 3.0.x.   Importing that ticket and all related/referenced/referencing tickets would probably save future grief.\r\n", "_id": {"$oid": "523857a2bd3543c151011b84"}, "html_url": "https://github.com/rails/rails/pull/1422#issuecomment-1314693"}
