{"updated_at": "2011-05-11T14:06:07Z", "repo": "rails", "created_at": "2011-05-11T14:06:07Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/1138931", "id": 1138931, "issue_url": "https://api.github.com/repos/rails/rails/issues/514", "issue_id": 514, "user": {"repos_url": "https://api.github.com/users/LeFnord/repos", "type": "User", "html_url": "https://github.com/LeFnord", "starred_url": "https://api.github.com/users/LeFnord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeFnord/subscriptions", "following_url": "https://api.github.com/users/LeFnord/following{/other_user}", "gravatar_id": "cc57d2311fadb4c4ba5ce3482069daff", "organizations_url": "https://api.github.com/users/LeFnord/orgs", "url": "https://api.github.com/users/LeFnord", "gists_url": "https://api.github.com/users/LeFnord/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/cc57d2311fadb4c4ba5ce3482069daff?d=https%3A%2F%2Fidenticons.github.com%2F7082a3837cce126371bf16ef76977646.png", "id": 120214, "events_url": "https://api.github.com/users/LeFnord/events{/privacy}", "login": "LeFnord", "received_events_url": "https://api.github.com/users/LeFnord/received_events", "followers_url": "https://api.github.com/users/LeFnord/followers"}, "body": "Hi Asanghi,\r\nI don't get the column_names directly, the situation ist:\r\nI have a model composition, which is associated with composer(s) and work(s)\r\nthrough join tables to person and work, both have synonyms, stored in corresponding tables\r\n\r\nnow I have some scopes for sorting, one of them is following:\r\n\r\n  scope :sorted_by_title_and_composer, lambda{|direction| joins(:has_composer,:has_title)\r\n                                                          .includes(:has_composer => [:synonyms], :has_title => [:synonyms])\r\n                                                          .order(\"works.name #{direction}, people.name #{direction}\")}\r\n\r\nthis scope is used by a ajax search in following line:\r\n\r\nsorted_by_title_and_composer(direction)\r\n      .where(\"works.name LIKE ? OR people.surname LIKE ? OR people.prename LIKE ? OR person_synonyms.synonym LIKE ? OR work_synonyms.synonym LIKE ?\",'%'+search+'%','%'+search+'%','%'+search+'%','%'+search+'%','%'+search+'%')\r\n\r\ntrhat's the reason why I need the includes, hence I must also search the synonyms\r\n\r\nif I use includes for eager loading, then in the index view I have the error that a column doesn't exist.\r\n\r\nthe following work, but is much slower:\r\n\r\n  scope :sorted_by_title_and_composer, lambda{|direction| joins(:has_composer => [:synonyms], :has_title => [:synonyms])\r\n                                                          .order(\"works.name #{direction}, people.name #{direction}\")}\r\n\r\n\r\nthis failure exist only in production mode, and other scopes using includes are also pertained,\r\nthere I use the lambda fix\r\n\r\n", "_id": {"$oid": "52385ef6bd3543c1510120ca"}, "html_url": "https://github.com/rails/rails/pull/514#issuecomment-1138931"}
