{"updated_at": "2012-06-11T19:34:27Z", "repo": "rails", "created_at": "2012-06-11T19:34:21Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/6253695", "id": 6253695, "issue_url": "https://api.github.com/repos/rails/rails/issues/6685", "issue_id": 6685, "user": {"repos_url": "https://api.github.com/users/josevalim/repos", "type": "User", "html_url": "https://github.com/josevalim", "starred_url": "https://api.github.com/users/josevalim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josevalim/subscriptions", "following_url": "https://api.github.com/users/josevalim/following{/other_user}", "gravatar_id": "e837f6b7fd146ab16ed3d663476c063e", "organizations_url": "https://api.github.com/users/josevalim/orgs", "url": "https://api.github.com/users/josevalim", "gists_url": "https://api.github.com/users/josevalim/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/e837f6b7fd146ab16ed3d663476c063e?d=https%3A%2F%2Fidenticons.github.com%2Fe20b21ae6508f22fc189c60a0880d0b8.png", "id": 9582, "events_url": "https://api.github.com/users/josevalim/events{/privacy}", "login": "josevalim", "received_events_url": "https://api.github.com/users/josevalim/received_events", "followers_url": "https://api.github.com/users/josevalim/followers"}, "body": "@tarcieri Seems reasonable. The thing is that the resolver currently uses a nested hash structure which I believe would be expensive expensive with ConcurrentHashMap. I *think* it would be better to use an array as a key. So basically different Ruby implementations will require different storing strategies, so an abstraction may not fit forcing us to solve the problem inside Rails itself (which is fine, imo).", "_id": {"$oid": "52380552bd3543c15100c6f2"}, "html_url": "https://github.com/rails/rails/pull/6685#issuecomment-6253695"}
