{"body": "I think even doing the `field_type.to_s` solution will break the `schema.rb`, since I don't think (but again, please verify) that a migration like this will break if the type isn't supported:\r\n\r\n```ruby\r\ncreate_table(\"foos\") do |t|\r\n  t.bool 'omg'\r\nend\r\n```\r\n\r\nWhich is the format of schema.rb.  The main problem with schema.rb is that `SchemaDumper` [knows too much about columns](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/schema_dumper.rb#L107-132).  Also, the logic for determining what is and isn't a valid column type [is in places outside of the connection](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/schema_dumper.rb#L108).\r\n\r\nIMO, we should be asking the connection if the type is valid, e.g.:\r\n\r\n```ruby\r\nunless connection.valid_type?(type)\r\n  raise \"omg not valid\"\r\nend\r\n```\r\n\r\nThen we need to create a `ColumnSpec` object, and ask it to format itself.  e.g.:\r\n\r\n```ruby\r\ncolumns.each do |column|\r\n  puts connection.column_spec(column)\r\nend\r\n```\r\n\r\nSQLite3 connection could return an \"unknown\" spec type for datatypes that we don't handle in AR, where other adapters could blow up (or whatever).\r\n\r\nThe tricky part is that we have tests which ensure that [the output is lined up](https://github.com/rails/rails/blob/master/activerecord/test/cases/schema_dumper_test.rb#L76-82).  We need to figure out a way to format the output without accessing too much of the guts of the column specs.\r\n\r\nAnyway, \"fun\" stuff. ;-)", "url": "https://api.github.com/repos/rails/rails/issues/comments/9464807", "created_at": "2012-10-15T22:43:41Z", "html_url": "https://github.com/rails/rails/pull/7954#issuecomment-9464807", "updated_at": "2012-10-15T22:44:14Z", "repo": "rails", "issue_id": 7954, "user": {"following_url": "https://api.github.com/users/tenderlove/following{/other_user}", "events_url": "https://api.github.com/users/tenderlove/events{/privacy}", "organizations_url": "https://api.github.com/users/tenderlove/orgs", "url": "https://api.github.com/users/tenderlove", "gists_url": "https://api.github.com/users/tenderlove/gists{/gist_id}", "html_url": "https://github.com/tenderlove", "subscriptions_url": "https://api.github.com/users/tenderlove/subscriptions", "avatar_url": "https://1.gravatar.com/avatar/f29327647a9cff5c69618bae420792ea?d=https%3A%2F%2Fidenticons.github.com%2F7c78335a8924215ea5c22fda1aac7b75.png", "repos_url": "https://api.github.com/users/tenderlove/repos", "received_events_url": "https://api.github.com/users/tenderlove/received_events", "gravatar_id": "f29327647a9cff5c69618bae420792ea", "starred_url": "https://api.github.com/users/tenderlove/starred{/owner}{/repo}", "login": "tenderlove", "type": "User", "id": 3124, "followers_url": "https://api.github.com/users/tenderlove/followers"}, "owner": "rails", "_id": {"$oid": "5237f759bd3543c15100b035"}, "id": 9464807, "issue_url": "https://api.github.com/repos/rails/rails/issues/7954"}
