{"updated_at": "2013-05-17T22:56:06Z", "repo": "rails", "created_at": "2013-05-17T22:56:06Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/18090068", "id": 18090068, "issue_url": "https://api.github.com/repos/rails/rails/issues/10670", "issue_id": 10670, "user": {"repos_url": "https://api.github.com/users/jcoglan/repos", "type": "User", "html_url": "https://github.com/jcoglan", "starred_url": "https://api.github.com/users/jcoglan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcoglan/subscriptions", "following_url": "https://api.github.com/users/jcoglan/following{/other_user}", "gravatar_id": "81eec7f220df03d5b8cadf106a2c14c5", "organizations_url": "https://api.github.com/users/jcoglan/orgs", "url": "https://api.github.com/users/jcoglan", "gists_url": "https://api.github.com/users/jcoglan/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/81eec7f220df03d5b8cadf106a2c14c5?d=https%3A%2F%2Fidenticons.github.com%2F2dd758690d1113777f254f9eae319874.png", "id": 9265, "events_url": "https://api.github.com/users/jcoglan/events{/privacy}", "login": "jcoglan", "received_events_url": "https://api.github.com/users/jcoglan/received_events", "followers_url": "https://api.github.com/users/jcoglan/followers"}, "body": "So, I was half-trolling with this, in that I think Rails should encourage you to do the right thing for database integrity (i.e. use unique indexes rather than client-side query-then-insert), but I don't know if this is the right way to do it. I'm aware it entirely breaks back-compat and won't work unless you've indexed your DB correctly. Maybe the right thing to do is invent a new API and discourage use of this, like how the docs for `validates_uniqueness_of` tell you not to use it for concurrent requests.\r\n\r\nSo having said that I'd like to discuss what we can do to avoid DB consistency problems when people have > 1 server.", "_id": {"$oid": "5237dcaebd3543c151008a20"}, "html_url": "https://github.com/rails/rails/pull/10670#issuecomment-18090068"}
