{"updated_at": "2013-01-28T21:13:25Z", "repo": "rails", "created_at": "2013-01-28T21:13:25Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/12805059", "id": 12805059, "issue_url": "https://api.github.com/repos/rails/rails/issues/8996", "issue_id": 8996, "user": {"repos_url": "https://api.github.com/users/schneems/repos", "type": "User", "html_url": "https://github.com/schneems", "starred_url": "https://api.github.com/users/schneems/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schneems/subscriptions", "following_url": "https://api.github.com/users/schneems/following{/other_user}", "gravatar_id": "db953d125f5cc49756edb6149f1b813e", "organizations_url": "https://api.github.com/users/schneems/orgs", "url": "https://api.github.com/users/schneems", "gists_url": "https://api.github.com/users/schneems/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/db953d125f5cc49756edb6149f1b813e?d=https%3A%2F%2Fidenticons.github.com%2F6ef42a6eab211ddd71ac423a80b42d15.png", "id": 59744, "events_url": "https://api.github.com/users/schneems/events{/privacy}", "login": "schneems", "received_events_url": "https://api.github.com/users/schneems/received_events", "followers_url": "https://api.github.com/users/schneems/followers"}, "body": "You could clean up the protected method `unique_for_nested_attributes?` by pulling out some of the logic into other methods something like this:\r\n\r\n```ruby\r\ndef unique_for_nested_attributes?(collection)\r\n  return true if collection.empty?\r\n  uniq_validators = uniq_validators_for(collection)\r\n  return true if uniq_validators.empty?\r\n\r\n  validations = nested_validations(collection, uniq_validators)\r\n\r\n  collection.length == validations.length\r\nend\r\n\r\ndef uniq_validators_for(collection)\r\n  validator = ActiveRecord::Validations::UniquenessValidator\r\n  collection.first.class.validators.grep(validator)\r\nend\r\n\r\ndef uniq_attributes_for(validators)\r\n  validators.flat_map do |validator|\r\n    [validator.attributes, validator.options[:scope]]\r\n  end.compact.to_set\r\nend\r\n\r\ndef distinct_validations_on_attributes(collection, attributes)\r\n  collection.map do |record|\r\n    record.attributes.select { |k,v| attributes.include?(k.to_sym) }.values.join(\"\")\r\n  end.uniq\r\nend\r\n\r\ndef nested_validations(collection, validations)\r\n  attributes = uniq_attributes_for(validators)\r\n  distinct_validations_on_attributes(collection, attributes)\r\nend\r\n```\r\n\r\nThough this is just an off-the cuff refactoring, you'll want to pick some better names for methods, and make sure none of the logic was lost in the translations (just run the tests). I also changed `Set.new` to call `.to_set` on the array, and changed the multi line block syntax from `{` to `do/end` and moved from `map.flatten` to a `flat_map`. Even after refactoring this, i'm not 100% sure how this logic works, commenting on individual methods could help.\r\n\r\nThanks a ton for submitting this, the more people with more knowledge of Active Record code, the better :heart:", "_id": {"$oid": "523d5f2abd354364b90063ac"}, "html_url": "https://github.com/rails/rails/pull/8996#issuecomment-12805059"}
