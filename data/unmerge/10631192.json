{"updated_at": "2012-11-22T11:14:58Z", "repo": "rails", "created_at": "2012-11-22T11:14:58Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/10631192", "id": 10631192, "issue_url": "https://api.github.com/repos/rails/rails/issues/7221", "issue_id": 7221, "user": {"repos_url": "https://api.github.com/users/carlosantoniodasilva/repos", "type": "User", "html_url": "https://github.com/carlosantoniodasilva", "starred_url": "https://api.github.com/users/carlosantoniodasilva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosantoniodasilva/subscriptions", "following_url": "https://api.github.com/users/carlosantoniodasilva/following{/other_user}", "gravatar_id": "77237b97a465ae5a293ad323b7296837", "organizations_url": "https://api.github.com/users/carlosantoniodasilva/orgs", "url": "https://api.github.com/users/carlosantoniodasilva", "gists_url": "https://api.github.com/users/carlosantoniodasilva/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/77237b97a465ae5a293ad323b7296837?d=https%3A%2F%2Fidenticons.github.com%2F60b997fd68261ce70cadaf6c8226c042.png", "id": 26328, "events_url": "https://api.github.com/users/carlosantoniodasilva/events{/privacy}", "login": "carlosantoniodasilva", "received_events_url": "https://api.github.com/users/carlosantoniodasilva/received_events", "followers_url": "https://api.github.com/users/carlosantoniodasilva/followers"}, "body": "@kot-begemot I see what you mean. How about creating a relation not with the current class, but with an inherited class with an overriden connection? Something similar to:\r\n\r\n```ruby\r\ndef undest_relation\r\n  @undest_relation ||= ::ActiveRecord::Relation.new(undest_klass, undest_arel_table)\r\nend\r\n\r\ndef undest_klass\r\n  @undest_klass ||= Class.new(self) do\r\n    def self.connection; undest_connection; end\r\n  end\r\nend\r\n\r\ndef undest_connection\r\n  @undest_connection ||= ::Undestroyable::Orm::ActiveRecord::Connection.get_connection(self)\r\nend\r\n```\r\n\r\nThis will ensure that `klass.connection` will point to your `undest_connection` everywhere, without the need of ensuring that in the Rails side someone possibly forgets to use the instance connection in the relation. Just an idea, not sure it'll work 100% fine, wdyt?", "_id": {"$oid": "523e00c7bd354364b900c485"}, "html_url": "https://github.com/rails/rails/pull/7221#issuecomment-10631192"}
