{"updated_at": "2011-04-18T01:19:03Z", "repo": "rails", "created_at": "2011-04-18T01:19:03Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/1018736", "id": 1018736, "issue_url": "https://api.github.com/repos/rails/rails/issues/285", "issue_id": 285, "user": {"repos_url": "https://api.github.com/users/yfeldblum/repos", "type": "User", "html_url": "https://github.com/yfeldblum", "starred_url": "https://api.github.com/users/yfeldblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yfeldblum/subscriptions", "following_url": "https://api.github.com/users/yfeldblum/following{/other_user}", "gravatar_id": "5eadf00e11240f05263ec7735612cd09", "organizations_url": "https://api.github.com/users/yfeldblum/orgs", "url": "https://api.github.com/users/yfeldblum", "gists_url": "https://api.github.com/users/yfeldblum/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/5eadf00e11240f05263ec7735612cd09?d=https%3A%2F%2Fidenticons.github.com%2F485970c473e9165d1649e16c7aa35b83.png", "id": 169419, "events_url": "https://api.github.com/users/yfeldblum/events{/privacy}", "login": "yfeldblum", "received_events_url": "https://api.github.com/users/yfeldblum/received_events", "followers_url": "https://api.github.com/users/yfeldblum/followers"}, "body": "@dhh The primary reason bcrypt is good is because it has an adjustable cost factor making it future-proof. It's a good idea to expose the very thing that makes bcrypt good and tell people that this is what they should be doing *and this is why they should be doing it*. Even if it makes the API slightly more complex because there's an extra optional parameter, it's worth it for developers who deal with persisting user passwords to know *why* bcrypt is a good choice. Having a `:cost` option will encourage developers to go out and learn about the offline dictionary attack and will therefore foster broader understanding about how the `:cost` in bcrypt guards against it. Leaving the `:cost` out of the ActiveModel API hides this important clue, discouraging people from learning about why the `:cost` is important. We should be educating developers about and pushing them to use MVC, REST, etc.,  - and security - by putting in sensible defaults that are easy to use but also putting in documented options to override the default when needed.\r\n\r\n@bcardarella Putting the userid into the cookie-stored session (in the signed cookie jar, of course) is token-based auth. Everyone's already using it for Web sessions.\r\n", "_id": {"$oid": "5238635abd3543c1510124bd"}, "html_url": "https://github.com/rails/rails/pull/285#issuecomment-1018736"}
