{"updated_at": "2011-04-11T19:24:35Z", "repo": "rails", "created_at": "2011-04-11T17:04:29Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/984759", "id": 984759, "issue_url": "https://api.github.com/repos/rails/rails/issues/258", "issue_id": 258, "user": {"repos_url": "https://api.github.com/users/BMorearty/repos", "type": "User", "html_url": "https://github.com/BMorearty", "starred_url": "https://api.github.com/users/BMorearty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BMorearty/subscriptions", "following_url": "https://api.github.com/users/BMorearty/following{/other_user}", "gravatar_id": "32701e4c5c6d91bbbb092077f8bdd2f8", "organizations_url": "https://api.github.com/users/BMorearty/orgs", "url": "https://api.github.com/users/BMorearty", "gists_url": "https://api.github.com/users/BMorearty/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/32701e4c5c6d91bbbb092077f8bdd2f8?d=https%3A%2F%2Fidenticons.github.com%2Fbe4188c0d0d914d4f54684b7b79fc726.png", "id": 16927, "events_url": "https://api.github.com/users/BMorearty/events{/privacy}", "login": "BMorearty", "received_events_url": "https://api.github.com/users/BMorearty/received_events", "followers_url": "https://api.github.com/users/BMorearty/followers"}, "body": "@sikachu, thank you for graciously giving credit to me and John Reitano (@rubyduo) for the original patch and citing the original ticket & discussion--and for going beyond what we did by changing the Rails internals to use `Object#in?` where appropriate. (By the way, @rubyduo is both John Reitano and Adam King.)\n\n@dhh @jamesarosen I agree that `among` is much better than `either`.\n\n@dhh I believe @rubyduo's `Object#not_in` method was also intended for expressiveness, similar to Ruby's \"unless,\" which is why I added it to the original ticket cited above. My rationale for including it was that if the object is a complex expression, not_in puts the \"not\" in a place where it can be more easily seen:\n\n    if etc_etc.something.something && !foo_bar.xyz.abc.in?(some_list)\n\nvs.\n\n    if etc_etc.something.something && foo_bar.xyz.abc.not_in?(some_list)\n\nOf course one could argue such expressions could be broken up. :-)\n\nPersonally I don't mind the phrase \"not in\" but can understand if you dislike it. It probably does make sense to leave it out until a better name is suggested. ", "_id": {"$oid": "52386422bd3543c1510125b3"}, "html_url": "https://github.com/rails/rails/pull/258#issuecomment-984759"}
