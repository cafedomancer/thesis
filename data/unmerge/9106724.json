{"body": "I like the idea of adding new systems of units. But I don't like the idea of replacing the one system of units we already use with two new ones that we usually do not use. Most of the time, our applications should speak the languages of the people who use our applications, rather than trying to teach them new languages (such as new systems of units).\r\n\r\nThe way of counting bytes that most of us use most of the time is a perfectly sensible, well-established system. It is not broken and does not need to be eliminated or fixed. But it can be expanded to.\r\n\r\nThe default system of units ought to remain `KB`, `MB`, `GB`, and `TB` referring to powers of two, not of ten (i.e., where `2.3 MB` is defined to mean `2.3 * 1024 * 1024 B`). This is what most people have used for a long time, and it works just fine, which is why it should remain the default. Let's call this system of units `:binary` ([wikipedia](http://en.wikipedia.org/wiki/Binary_prefix)).\r\n\r\nWe can then have named alternatives, namely `:iec` and `:si`, in addition to `:binary`. There would be three available systems of units, not two, and each system of units would have a name.\r\n\r\nThe number-presentation functions should take, as an option, the name of the system of units to use. For example, `number_to_human_size(123456789, units: :si)`. The option symbol should be `:units` rather than `:prefix`. The default system of units ought to remain `:binary`.\r\n\r\nAs a bonus, you could offer an ActiveSupport configuration option `default_storage_units` which *changes* the default system of units, so that if an application configures `ActiveSupport.default_storage_units = k`, then every call to `#number_to_human_size` should use `k` by default if nothing is passed for the `:units` option. The default value for `ActiveSupport.default_storage_units` should start off as `:binary`, but may be changed in any given application.\r\n", "url": "https://api.github.com/repos/rails/rails/issues/comments/9106724", "created_at": "2012-10-03T13:50:26Z", "html_url": "https://github.com/rails/rails/pull/7829#issuecomment-9106724", "updated_at": "2012-10-03T13:50:26Z", "repo": "rails", "issue_id": 7829, "user": {"following_url": "https://api.github.com/users/yfeldblum/following{/other_user}", "events_url": "https://api.github.com/users/yfeldblum/events{/privacy}", "organizations_url": "https://api.github.com/users/yfeldblum/orgs", "url": "https://api.github.com/users/yfeldblum", "gists_url": "https://api.github.com/users/yfeldblum/gists{/gist_id}", "html_url": "https://github.com/yfeldblum", "subscriptions_url": "https://api.github.com/users/yfeldblum/subscriptions", "avatar_url": "https://0.gravatar.com/avatar/5eadf00e11240f05263ec7735612cd09?d=https%3A%2F%2Fidenticons.github.com%2F485970c473e9165d1649e16c7aa35b83.png", "repos_url": "https://api.github.com/users/yfeldblum/repos", "received_events_url": "https://api.github.com/users/yfeldblum/received_events", "gravatar_id": "5eadf00e11240f05263ec7735612cd09", "starred_url": "https://api.github.com/users/yfeldblum/starred{/owner}{/repo}", "login": "yfeldblum", "type": "User", "id": 169419, "followers_url": "https://api.github.com/users/yfeldblum/followers"}, "owner": "rails", "_id": {"$oid": "5237f883bd3543c15100b2ce"}, "id": 9106724, "issue_url": "https://api.github.com/repos/rails/rails/issues/7829"}
