{"updated_at": "2010-12-19T22:57:21Z", "repo": "rails", "created_at": "2010-12-19T22:57:21Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/623256", "id": 623256, "issue_url": "https://api.github.com/repos/rails/rails/issues/137", "issue_id": 137, "user": {"repos_url": "https://api.github.com/users/josevalim/repos", "type": "User", "html_url": "https://github.com/josevalim", "starred_url": "https://api.github.com/users/josevalim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josevalim/subscriptions", "following_url": "https://api.github.com/users/josevalim/following{/other_user}", "gravatar_id": "e837f6b7fd146ab16ed3d663476c063e", "organizations_url": "https://api.github.com/users/josevalim/orgs", "url": "https://api.github.com/users/josevalim", "gists_url": "https://api.github.com/users/josevalim/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/e837f6b7fd146ab16ed3d663476c063e?d=https%3A%2F%2Fidenticons.github.com%2Fe20b21ae6508f22fc189c60a0880d0b8.png", "id": 9582, "events_url": "https://api.github.com/users/josevalim/events{/privacy}", "login": "josevalim", "received_events_url": "https://api.github.com/users/josevalim/received_events", "followers_url": "https://api.github.com/users/josevalim/followers"}, "body": "I wouldn't say it has 3-4 responsibilities, because we wouldn't create 1 class for each callback. But I definitely agree it has two: execute request callbacks and execute reload-like callbacks. before and after callbacks fits the first description, to_prepare and to_reload the second. So I am ok if we split these in two middlewares, one being AD::Reload, just be careful with:\r\n\r\n1) to_prepare is like before() for Reload and to_reload is after(). The difference though, is that to_prepare is executed when the middleware is initialized. This is not necessarily good and we should remove it as the middleware will never be initialized in production once it is part of AD::Reload, so we will need to add an initializer here (https://github.com/bigfix/rails/blob/master/railties/lib/rails/application/finisher.rb#L37). That should work like this:\r\n\r\n    initializer :run_prepare_callbacks do\r\n      ActionDispatch::Reloader.prepare!\r\n    end\r\n\r\n2) Backward compatibility. Maybe AD::Callbacks.to_prepare can delegate to AD::Reload.to_prepare. We can worry about adding a deprecation warning later.\r\n\r\nThanks for the patience and the feedback. I believe we are coming up with the right solution. :D", "_id": {"$oid": "523868afbd3543c1510129bc"}, "html_url": "https://github.com/rails/rails/pull/137#issuecomment-623256"}
