{"updated_at": "2013-04-03T06:53:27Z", "repo": "rails", "created_at": "2013-04-03T06:30:27Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/15820580", "id": 15820580, "issue_url": "https://api.github.com/repos/rails/rails/issues/5721", "issue_id": 5721, "user": {"repos_url": "https://api.github.com/users/christhekeele/repos", "type": "User", "html_url": "https://github.com/christhekeele", "starred_url": "https://api.github.com/users/christhekeele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christhekeele/subscriptions", "following_url": "https://api.github.com/users/christhekeele/following{/other_user}", "gravatar_id": "416ea1758c1f440fe9b21e390e26bde2", "organizations_url": "https://api.github.com/users/christhekeele/orgs", "url": "https://api.github.com/users/christhekeele", "gists_url": "https://api.github.com/users/christhekeele/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/416ea1758c1f440fe9b21e390e26bde2?d=https%3A%2F%2Fidenticons.github.com%2Faf059395759419c0f08628f1731aac3e.png", "id": 1406220, "events_url": "https://api.github.com/users/christhekeele/events{/privacy}", "login": "christhekeele", "received_events_url": "https://api.github.com/users/christhekeele/received_events", "followers_url": "https://api.github.com/users/christhekeele/followers"}, "body": "Making autodetection of `ENV['DATABASE_URL']` a `Rails::Application` responsibility makes sense:\r\n\r\n- Rails is what currently expects a `database.yml`, not `ActiveRecord`. Similar expectations ought to be in the same place for those who use `ActiveRecord` outside of rails.\r\n- Rails developers expect to override default connection settings within `application.rb`. `ActiveRecord` taking its own initiative in this matter confuses developers, as seen by my own example and others.\r\n\r\nCons:\r\n\r\n- The common multi-database hack via overriding `ActiveRecord::Base.establish_connection` with specific connection settings might not work or work the same way as before. Not sure. Always abhorred that stratagem.\r\n\r\nThe way to resolve this is to choose a more assertive strategy for picking between the environment variable or the yaml. Given Rails' existing assumptions about the yaml, and the excellent automatic Heroku integration, I opt that the environment variable maintain precedence **in Rails, not ActiveRecord**, and that if forced to choose, Rails **outputs a warning** instead of silently favoring one, for developer awareness. Establishing and documenting `Rails.configuration.database_configuration` as the authoritative source of Rails' convention over configuration in this matter would give more advanced developers [who want the turtles to go all the way down](http://blog.mojotech.com/post/40108629420/turtles-all-the-way-down) an established starting point in their quest for freedom from yaml.", "_id": {"$oid": "523813aabd3543c15100daec"}, "html_url": "https://github.com/rails/rails/pull/5721#issuecomment-15820580"}
