{"updated_at": "2012-07-17T20:36:55Z", "repo": "rails", "created_at": "2012-07-17T18:13:31Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/7044050", "id": 7044050, "issue_url": "https://api.github.com/repos/rails/rails/issues/7071", "issue_id": 7071, "user": {"repos_url": "https://api.github.com/users/davidcelis/repos", "type": "User", "html_url": "https://github.com/davidcelis", "starred_url": "https://api.github.com/users/davidcelis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidcelis/subscriptions", "following_url": "https://api.github.com/users/davidcelis/following{/other_user}", "gravatar_id": "9b0144a16ba125a94460c5d45f07efb9", "organizations_url": "https://api.github.com/users/davidcelis/orgs", "url": "https://api.github.com/users/davidcelis", "gists_url": "https://api.github.com/users/davidcelis/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/9b0144a16ba125a94460c5d45f07efb9?d=https%3A%2F%2Fidenticons.github.com%2F3e1a626a9e0c39eb548886c253bf9644.png", "id": 36873, "events_url": "https://api.github.com/users/davidcelis/events{/privacy}", "login": "davidcelis", "received_events_url": "https://api.github.com/users/davidcelis/received_events", "followers_url": "https://api.github.com/users/davidcelis/followers"}, "body": "I would be open to a versioning solution. I just think there are better ways to handle updates to an area of a framework than completely freezing it. English is not a regular language and it's malleable, which makes inflections difficult to handle well; there are definitely parts of the inflections that reflect grammatical exceptions rather than the rule, and IMO that's just wrong.\n\nI do agree that Rails should not provide a huge set of inflections; it should be a small, standard set of grammatical rules. However, by your argument, Rails already provides some strange special cases that could be considered noise in the framework itself. Examples:\n\n```ruby\ninflect.plural(/(buffal|tomat)o$/i, '\\1oes') # How many people use \"buffalo(es)\" or \"tomato(es)\" in their app?\ninflect.plural(/^(m|l)ouse$/i, '\\1ice') # or (m|l)ice / (m|l)ouse?\ninflect.plural(/^(m|l)ice$/i, '\\1ice') # mice/lice aren't singular words\ninflect.singular(/^(ox)en/i, '\\1') # ox(en) is probably rare in Rails apps as well; and shouldn't this be an irregular?\n\n# this is strange, because the only words really affected by this are \"series\" and compound words\n# ending in series (miniseries, subseries). other words, like nurseries or causeries, are broken\n# by this \"rule\" that is actually an exception. But then \"series\" is defined as uncountable later.\ninflect.singular(/(s)eries$/i, '\\1eries')\n\n# these two rules should be unnecessary since the standard is just to add an 's' which is the most basic pluralization rule\ninflect.singular(/(hive)s$/i, '\\1')\ninflect.singular(/(tive)s$/i, '\\1')\n\ninflect.irregular('cow', 'kine') # archaic plural term, standard is cows\ninflect.irregular('zombie', 'zombies') # makes no sense; this is not an irregular pluralization\n```\n\nThe other part of my reasoning for moving it into the initializer was to increase visibility, but perhaps that could be done via better documentation, which I'm open to as well.", "_id": {"$oid": "52380016bd3543c15100bf30"}, "html_url": "https://github.com/rails/rails/pull/7071#issuecomment-7044050"}
