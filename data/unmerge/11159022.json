{"updated_at": "2012-12-08T14:10:48Z", "repo": "rails", "created_at": "2012-12-08T14:10:48Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/11159022", "id": 11159022, "issue_url": "https://api.github.com/repos/rails/rails/issues/8453", "issue_id": 8453, "user": {"repos_url": "https://api.github.com/users/dhh/repos", "type": "User", "html_url": "https://github.com/dhh", "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhh/subscriptions", "following_url": "https://api.github.com/users/dhh/following{/other_user}", "gravatar_id": "ed9635566b34ade32274f510f0f9a6d2", "organizations_url": "https://api.github.com/users/dhh/orgs", "url": "https://api.github.com/users/dhh", "gists_url": "https://api.github.com/users/dhh/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/ed9635566b34ade32274f510f0f9a6d2?d=https%3A%2F%2Fidenticons.github.com%2Fcdcb2f5c7b071143529ef7f2705dfbc4.png", "id": 2741, "events_url": "https://api.github.com/users/dhh/events{/privacy}", "login": "dhh", "received_events_url": "https://api.github.com/users/dhh/received_events", "followers_url": "https://api.github.com/users/dhh/followers"}, "body": "Claudio, the arel way is not the real comparison, this is:\r\n\r\nUser.where(\"(name = 'Mike') OR (name = 'John' AND comments_count = 0) OR (comments_count in (1,2))\")\r\n\r\nI'll try to look for some more examples in my code and see how the #or pattern fits. I'm not reflexively against it, but I want to be very careful expanding this line of api. It's so easy to seek completeness from a certain paradigm and then end up with something that's horrible to use in many common cases. IMO, most query dsls that try to completely map to SQL end up there.\r\n\r\nOn Dec 8, 2012, at 12:18 AM, Claudio B. wrote:\r\n\r\n> @dhh I see your point. Would you be instead a fan of an or chainable method instead? Would you like this code?\r\n> \r\n> User.where(['name = ?', 'Mike']).or(name: 'John', comments_count: 0).or('comments_count in (1,2)')\r\n> In my opinion, this would be a better way to write:\r\n> \r\n> user = User.arel_table\r\n> User.where user[:name].eq('Mike').or(user[:name].eq('John').and user[:comments_count].eq(0)).or(user[:comments_count].in [1,2])\r\n> in order to obtain:\r\n> \r\n> SELECT `users`.* FROM `users` WHERE (((`users`.`username` = 'Mike' OR `users`.`username` = 'John' AND `users`.`comments_count` = 0) OR `users`.`comments_count` IN (1, 2)))\r\n> What is your take on this?\r\n> \r\n> \u2014\r\n> Reply to this email directly or view it on GitHub.\r\n> \r\n> ", "_id": {"$oid": "5237f30ebd3543c15100a761"}, "html_url": "https://github.com/rails/rails/pull/8453#issuecomment-11159022"}
