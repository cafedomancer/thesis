{"updated_at": "2013-04-02T14:44:53Z", "repo": "rails", "created_at": "2013-04-02T14:44:05Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/15779275", "id": 15779275, "issue_url": "https://api.github.com/repos/rails/rails/issues/10047", "issue_id": 10047, "user": {"repos_url": "https://api.github.com/users/mbhnyc/repos", "type": "User", "html_url": "https://github.com/mbhnyc", "starred_url": "https://api.github.com/users/mbhnyc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbhnyc/subscriptions", "following_url": "https://api.github.com/users/mbhnyc/following{/other_user}", "gravatar_id": "2f1c4d147215ece22720120ee69db764", "organizations_url": "https://api.github.com/users/mbhnyc/orgs", "url": "https://api.github.com/users/mbhnyc", "gists_url": "https://api.github.com/users/mbhnyc/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/2f1c4d147215ece22720120ee69db764?d=https%3A%2F%2Fidenticons.github.com%2Fd553e7253cbe3c98d44a3ec40142fa71.png", "id": 226280, "events_url": "https://api.github.com/users/mbhnyc/events{/privacy}", "login": "mbhnyc", "received_events_url": "https://api.github.com/users/mbhnyc/received_events", "followers_url": "https://api.github.com/users/mbhnyc/followers"}, "body": "Ha!  I just posted about a very similar issue in the google group with has_many :through \u2014 namely,\u00a0the << operator adds records to via the join table without any checks for existence also.\r\n\r\n*and the uniq option only applies to how associated objects are retrieved, not stored*\r\n\r\nSo if, in my use case, I have options set on the join table, I'm forced to do an extra exists? check to make sure I don't get duplicate join records.\r\n\r\nI would it would make more sense to either:\r\n\r\n1) Have uniq check on create as well\r\n2) Have a different option (like uniq_on_create) that checks for an existing join record.  I'm of two minds as to whether an exception should be raised if a record already exists or not.. my gut says it would succeed without actually creating a record, but I'd imagine there's precedent in other ActiveRecord calls.", "_id": {"$oid": "5237e397bd3543c151009163"}, "html_url": "https://github.com/rails/rails/pull/10047#issuecomment-15779275"}
