{"issue_url": "https://api.github.com/repos/rails/rails/issues/5932", "repo": "rails", "body": "If we backport f08f8750a512f741acb004d0cebe210c5f949f28, we can apply this patch to make Event not time based:\r\n\r\n```dif\r\n\r\ndiff --git a/activesupport/lib/active_support/log_subscriber.rb b/activesupport/lib/active_support/log_subscriber.rb\r\nindex d2a6e1b..124eb1d 100644\r\n--- a/activesupport/lib/active_support/log_subscriber.rb\r\n+++ b/activesupport/lib/active_support/log_subscriber.rb\r\n@@ -61,7 +61,7 @@ module ActiveSupport\r\n         @@flushable_loggers = nil\r\n \r\n         log_subscriber.public_methods(false).each do |event|\r\n-          next if 'call' == event.to_s\r\n+          next if %w{ start finish }.include?(event.to_s)\r\n \r\n           notifier.subscribe(\"#{event}.#{namespace}\", log_subscriber)\r\n         end\r\n@@ -86,14 +86,35 @@ module ActiveSupport\r\n       end\r\n     end\r\n \r\n-    def call(message, *args)\r\n+    def initialize\r\n+      @event_stack = Hash.new { |h,id|\r\n+        h[id] = Hash.new { |ids,name| ids[name] = [] }\r\n+      }\r\n+      super\r\n+    end\r\n+\r\n+    def start(name, id, payload)\r\n+      return unless logger\r\n+\r\n+      e = ActiveSupport::Notifications::Event.new(name, Time.now, nil, id, payload)\r\n+      parent = @event_stack[id][name].last\r\n+      parent << e if parent\r\n+\r\n+      @event_stack[id][name].push e\r\n+    end\r\n+\r\n+    def finish(name, id, payload)\r\n       return unless logger\r\n \r\n-      method = message.split('.').first\r\n+      finished  = Time.now\r\n+      event     = @event_stack[id][name].pop\r\n+      event.end = finished\r\n+\r\n+      method = name.split('.').first\r\n       begin\r\n-        send(method, ActiveSupport::Notifications::Event.new(message, *args))\r\n+        send(method, event)\r\n       rescue Exception => e\r\n-        logger.error \"Could not log #{message.inspect} event. #{e.class}: #{e.message} #{e.backtrace}\"\r\n+        logger.error \"Could not log #{name.inspect} event. #{e.class}: #{e.message} #{e.backtrace}\"\r\n       end\r\n     end\r\n \r\ndiff --git a/activesupport/lib/active_support/notifications/instrumenter.rb b/activesupport/lib/active_support/notifications/instrumenter.rb\r\nindex 58e292c..2449f72 100644\r\n--- a/activesupport/lib/active_support/notifications/instrumenter.rb\r\n+++ b/activesupport/lib/active_support/notifications/instrumenter.rb\r\n@@ -31,7 +31,8 @@ module ActiveSupport\r\n     end\r\n \r\n     class Event\r\n-      attr_reader :name, :time, :end, :transaction_id, :payload, :duration\r\n+      attr_reader :name, :time, :transaction_id, :payload\r\n+      attr_accessor :end\r\n \r\n       def initialize(name, start, ending, transaction_id, payload)\r\n         @name           = name\r\n@@ -39,12 +40,19 @@ module ActiveSupport\r\n         @time           = start\r\n         @transaction_id = transaction_id\r\n         @end            = ending\r\n-        @duration       = 1000.0 * (@end - @time)\r\n+        @children       = []\r\n+      end\r\n+\r\n+      def duration\r\n+        1000.0 * (self.end - time)\r\n+      end\r\n+\r\n+      def <<(event)\r\n+        @children << event\r\n       end\r\n \r\n       def parent_of?(event)\r\n-        start = (time - event.time) * 1000\r\n-        start <= 0 && (start + duration >= event.duration)\r\n+        @children.include? event\r\n       end\r\n     end\r\n   end\r\n```", "_id": {"$oid": "52381133bd3543c15100d790"}, "issue_id": 5932, "url": "https://api.github.com/repos/rails/rails/issues/comments/5294843", "html_url": "https://github.com/rails/rails/pull/5932#issuecomment-5294843", "updated_at": "2012-04-24T00:03:51Z", "user": {"subscriptions_url": "https://api.github.com/users/tenderlove/subscriptions", "events_url": "https://api.github.com/users/tenderlove/events{/privacy}", "repos_url": "https://api.github.com/users/tenderlove/repos", "gists_url": "https://api.github.com/users/tenderlove/gists{/gist_id}", "url": "https://api.github.com/users/tenderlove", "login": "tenderlove", "gravatar_id": "f29327647a9cff5c69618bae420792ea", "html_url": "https://github.com/tenderlove", "following_url": "https://api.github.com/users/tenderlove/following{/other_user}", "received_events_url": "https://api.github.com/users/tenderlove/received_events", "organizations_url": "https://api.github.com/users/tenderlove/orgs", "avatar_url": "https://0.gravatar.com/avatar/f29327647a9cff5c69618bae420792ea?d=https%3A%2F%2Fidenticons.github.com%2F7c78335a8924215ea5c22fda1aac7b75.png", "starred_url": "https://api.github.com/users/tenderlove/starred{/owner}{/repo}", "id": 3124, "followers_url": "https://api.github.com/users/tenderlove/followers", "type": "User"}, "created_at": "2012-04-24T00:03:51Z", "id": 5294843, "owner": "rails"}
