{"updated_at": "2011-04-12T18:37:32Z", "repo": "rails", "created_at": "2011-04-12T18:37:32Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/991201", "id": 991201, "issue_url": "https://api.github.com/repos/rails/rails/issues/265", "issue_id": 265, "user": {"repos_url": "https://api.github.com/users/ches/repos", "type": "User", "html_url": "https://github.com/ches", "starred_url": "https://api.github.com/users/ches/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ches/subscriptions", "following_url": "https://api.github.com/users/ches/following{/other_user}", "gravatar_id": "baa03aae53a59c8628c3fc78e075fa93", "organizations_url": "https://api.github.com/users/ches/orgs", "url": "https://api.github.com/users/ches", "gists_url": "https://api.github.com/users/ches/gists{/gist_id}", "avatar_url": "https://2.gravatar.com/avatar/baa03aae53a59c8628c3fc78e075fa93?d=https%3A%2F%2Fidenticons.github.com%2F1dbb1c25df6942683e7b1317f0e13db6.png", "id": 13277, "events_url": "https://api.github.com/users/ches/events{/privacy}", "login": "ches", "received_events_url": "https://api.github.com/users/ches/received_events", "followers_url": "https://api.github.com/users/ches/followers"}, "body": "+1 on removing `#among?`. I liked `#either` better for its symmetry with `#neither` (indeed the fact that that works so well is what kicked off this whole mess of finding something equally nice for `not_in?`), and as it stands I'm fairly certain I would always prefer writing `obj.in?([1,2,3])` to `obj.among?(1, 2, 3)`. Not to re-open the debate but FWIW I had no problem with `either`/`neither` for more than two alternatives -- I personally consider e.g. \"we can do either this, that, or nothing at all\" perfectly natural speech.\r\n\r\nI'm also with @phene on -1 for `#ex?` being unclear. For me the first Latin phrase that comes to mind is *deus ex machina* -- \"god from the machine,\" which doesn't help me in the slightest to recall the semantics of this method. As he points out the meaning of \"ex\" as \"formerly\" further clouds things too.", "_id": {"$oid": "523863f1bd3543c151012530"}, "html_url": "https://github.com/rails/rails/pull/265#issuecomment-991201"}
