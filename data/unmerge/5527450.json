{"issue_url": "https://api.github.com/repos/rails/rails/issues/6165", "repo": "rails", "body": "@pixeltrix Thanks for your comment! I pushed a newer, shinier and better version that I dedicate to you :-)\r\n\r\nOn performance: the patch has basically no impact in cases where the constant seeked is directly owned by class/module, which are the cases handled correctly currently. For cases that are currently *not* handled properly, then yes, there will be a small performance difference, but slower is better than buggy!\r\n\r\nIn case the constant does not exist at all (even at the Object level or lower), the newer version will raise immediately, instead of looking down the chain for nothing.\r\n\r\nAs for the *after Object* bit, you're absolutely right for the top level search, and there was actually another bug in `constantize`. Currently, for example, `\"XML\".constantize` doesn't work although `XML` is globally accessible as `LibXML` is included in `Object` and has a constant `XML`. The new patch fixes this.\r\n\r\nOn the other hand, when not looking up from `Object`, but from another module, we don't want to lookup past `Object`. These are globally accessible constants and that's exactly what we don't want to return. E.g. `\"String::XML\".constantize` must raise an error.\r\n\r\nSo thanks to your comments, I've fixed the top level search and also improved the performance of my patch in cases (top level or when constant doesn't exist at all).", "_id": {"$oid": "52380d03bd3543c15100d255"}, "issue_id": 6165, "url": "https://api.github.com/repos/rails/rails/issues/comments/5527450", "html_url": "https://github.com/rails/rails/pull/6165#issuecomment-5527450", "updated_at": "2012-05-05T14:25:32Z", "user": {"subscriptions_url": "https://api.github.com/users/marcandre/subscriptions", "events_url": "https://api.github.com/users/marcandre/events{/privacy}", "repos_url": "https://api.github.com/users/marcandre/repos", "gists_url": "https://api.github.com/users/marcandre/gists{/gist_id}", "url": "https://api.github.com/users/marcandre", "login": "marcandre", "gravatar_id": "b06d8e26b92456b228d3c77b66397534", "html_url": "https://github.com/marcandre", "following_url": "https://api.github.com/users/marcandre/following{/other_user}", "received_events_url": "https://api.github.com/users/marcandre/received_events", "organizations_url": "https://api.github.com/users/marcandre/orgs", "avatar_url": "https://0.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https%3A%2F%2Fidenticons.github.com%2F8b48ea597d2862688e4aa8a2b28651a3.png", "starred_url": "https://api.github.com/users/marcandre/starred{/owner}{/repo}", "id": 33770, "followers_url": "https://api.github.com/users/marcandre/followers", "type": "User"}, "created_at": "2012-05-05T14:25:13Z", "id": 5527450, "owner": "rails"}
