{"updated_at": "2011-04-22T15:47:32Z", "repo": "rails", "created_at": "2011-04-22T15:47:32Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/1044291", "id": 1044291, "issue_url": "https://api.github.com/repos/rails/rails/issues/293", "issue_id": 293, "user": {"repos_url": "https://api.github.com/users/metaskills/repos", "type": "User", "html_url": "https://github.com/metaskills", "starred_url": "https://api.github.com/users/metaskills/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/metaskills/subscriptions", "following_url": "https://api.github.com/users/metaskills/following{/other_user}", "gravatar_id": "f0b14b7dbae1e90259eb946d1c841a17", "organizations_url": "https://api.github.com/users/metaskills/orgs", "url": "https://api.github.com/users/metaskills", "gists_url": "https://api.github.com/users/metaskills/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/f0b14b7dbae1e90259eb946d1c841a17?d=https%3A%2F%2Fidenticons.github.com%2F7b66b4fd401a271a1c7224027ce111bc.png", "id": 2381, "events_url": "https://api.github.com/users/metaskills/events{/privacy}", "login": "metaskills", "received_events_url": "https://api.github.com/users/metaskills/received_events", "followers_url": "https://api.github.com/users/metaskills/followers"}, "body": "This may illustrate the problem. Here is my #substitute_at and my #exec_query methods I am working on now.\r\n\r\n    def substitute_at(column, index)\r\n      if column.is_a?(ActiveRecord::ConnectionAdapters::SQLServerColumn) && column.sql_type == 'timestamp'\r\n        nil\r\n      else\r\n        Arel.sql \"@#{index}\"\r\n      end\r\n    end\r\n\r\n    def exec_query(sql, name = 'SQL', binds = [])\r\n      ...\r\n      binds.each_with_index do |(col,val),index|\r\n        next if col.sql_type == 'timestamp'\r\n        names_and_types << \"@#{index} #{col.sql_type_for_statement}\"\r\n        params << \"@#{index} = #{quote(val,col)}\"\r\n      end\r\n      ...\r\n    end\r\n\r\nI need ActiveRecord::Relation#insert to pass down an ActiveRecord::ConnectionAdapters::Column object to #substitute_at. My current use case is the timestamp data in SQL Server which is binary data. Do not confuse this with a real timestamp. It is allowed for users to read that binary data, but not write to it or include it in parameterized statements.\r\n\r\n", "_id": {"$oid": "52386318bd3543c15101246b"}, "html_url": "https://github.com/rails/rails/pull/293#issuecomment-1044291"}
