{"updated_at": "2012-05-13T01:23:11Z", "repo": "rails", "created_at": "2012-05-13T01:23:11Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/5673225", "id": 5673225, "issue_url": "https://api.github.com/repos/rails/rails/issues/6288", "issue_id": 6288, "user": {"repos_url": "https://api.github.com/users/NZKoz/repos", "type": "User", "html_url": "https://github.com/NZKoz", "starred_url": "https://api.github.com/users/NZKoz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NZKoz/subscriptions", "following_url": "https://api.github.com/users/NZKoz/following{/other_user}", "gravatar_id": "efa76b164a7de4a5730e4fa397cc4425", "organizations_url": "https://api.github.com/users/NZKoz/orgs", "url": "https://api.github.com/users/NZKoz", "gists_url": "https://api.github.com/users/NZKoz/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/efa76b164a7de4a5730e4fa397cc4425?d=https%3A%2F%2Fidenticons.github.com%2F85d8ce590ad8981ca2c8286f79f59954.png", "id": 197, "events_url": "https://api.github.com/users/NZKoz/events{/privacy}", "login": "NZKoz", "received_events_url": "https://api.github.com/users/NZKoz/received_events", "followers_url": "https://api.github.com/users/NZKoz/followers"}, "body": "You're misunderstanding what this function is for,  it's to prevent attackers from embedding `</script>` tags inside json that's embedded in html.  For example:\n\n```html\n<script>\n  var customer = <%= customer.to_json %>;\n  someFunction(customer);\n</script>\n```\n\nIn that case if the customer was:\n\n```js\n{\n  id: 1,\n  name: \"Koz</script><script>alert('hax');\"\n}\n```\n\nIf we did that substitution then the resulting html would be:\n\n```html\n<script>\n  var customer = {\n  id: 1,\n  name: \"Koz</script><script>alert('hax');\"\n};\n  someFunction(customer);\n</script>\n```\n\nThen the browser would parse that as *two seperate* `<script>` tags, each containing syntax errors, and attempt to process each of them.  If you try this you'll see the alert fires.\n\nThis is an entirely orthogonal problem to whether the values themselves can be inserted into an html element without further escaping.  The code as it exists is correct.\n\nAs for escaping the html inside strings returned from JSON, you can't do that automatically, there are a variety of use cases (jquery autocomplete being the most common) where you deliberately return strings of html to the user.  We can't promise that every javascript templating library automatically escapes html fragments, in fact most of them don't.\n\nThose are issues with those libraries, not with our json handling and it's not something that we can fix sadly.\n\n@homakov as we've mentioned before, do *not* raise security issues via pull requests, please email us at security@rubyonrails.org, we're pretty responsive at that address.", "_id": {"$oid": "52380bbbbd3543c15100d058"}, "html_url": "https://github.com/rails/rails/pull/6288#issuecomment-5673225"}
