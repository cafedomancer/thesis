{"issue_url": "https://api.github.com/repos/rails/rails/issues/10912", "repo": "rails", "body": "@carlosantoniodasilva Because eager loading works with polymorphic associations it is next to impossible to know beforehand if nested eager loading will work or not. Especially if you take deeply nested examples.\r\n\r\nBecause of this rails raises only once it encounters loaded models where a desired association is missing. These loaded models (which in itself could already come from a nested association) could either come from a normal association or from a polymorphic one.\r\n\r\nIf you want I can extend the tests to show a case where nested eager loading through an polymorphic association can both hit an existing and non existing association in the same query.", "_id": {"$oid": "5237daa9bd3543c151008730"}, "issue_id": 10912, "url": "https://api.github.com/repos/rails/rails/issues/comments/20067435", "html_url": "https://github.com/rails/rails/pull/10912#issuecomment-20067435", "updated_at": "2013-06-26T17:59:21Z", "user": {"subscriptions_url": "https://api.github.com/users/Bertg/subscriptions", "events_url": "https://api.github.com/users/Bertg/events{/privacy}", "repos_url": "https://api.github.com/users/Bertg/repos", "gists_url": "https://api.github.com/users/Bertg/gists{/gist_id}", "url": "https://api.github.com/users/Bertg", "login": "Bertg", "gravatar_id": "f80b5bd87ed2e62e1c3fd52e90ee7563", "html_url": "https://github.com/Bertg", "following_url": "https://api.github.com/users/Bertg/following{/other_user}", "received_events_url": "https://api.github.com/users/Bertg/received_events", "organizations_url": "https://api.github.com/users/Bertg/orgs", "avatar_url": "https://2.gravatar.com/avatar/f80b5bd87ed2e62e1c3fd52e90ee7563?d=https%3A%2F%2Fidenticons.github.com%2F7895fc13088ee37f511913bac71fa66f.png", "starred_url": "https://api.github.com/users/Bertg/starred{/owner}{/repo}", "id": 1434, "followers_url": "https://api.github.com/users/Bertg/followers", "type": "User"}, "created_at": "2013-06-26T17:59:21Z", "id": 20067435, "owner": "rails"}
