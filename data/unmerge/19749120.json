{"issue_url": "https://api.github.com/repos/rails/rails/issues/11022", "repo": "rails", "body": "I see those all over the rails code base, but the `private` invocations apply only to instance methods. To make a class method really private, you have to call `private` in the context of the singleton class:\r\n\r\n```ruby\r\nclass PredicateBuilder\r\n  class << self\r\n    def public_class_method; end\r\n\r\n    private\r\n      def private_class_method; end\r\n  end\r\nend\r\n```\r\n\r\nBut, that's not that much of a big deal, just an interesting fact to know. I don't know if you should bother with this class as it is internally marked as \"private\" because of the `:nodoc:`  comment.\r\n", "_id": {"$oid": "5237d97bbd3543c1510085c5"}, "issue_id": 11022, "url": "https://api.github.com/repos/rails/rails/issues/comments/19749120", "html_url": "https://github.com/rails/rails/pull/11022#issuecomment-19749120", "updated_at": "2013-06-20T12:36:32Z", "user": {"subscriptions_url": "https://api.github.com/users/gsamokovarov/subscriptions", "events_url": "https://api.github.com/users/gsamokovarov/events{/privacy}", "repos_url": "https://api.github.com/users/gsamokovarov/repos", "gists_url": "https://api.github.com/users/gsamokovarov/gists{/gist_id}", "url": "https://api.github.com/users/gsamokovarov", "login": "gsamokovarov", "gravatar_id": "1ac5a00efa41cd58c421d3cd98dda7b9", "html_url": "https://github.com/gsamokovarov", "following_url": "https://api.github.com/users/gsamokovarov/following{/other_user}", "received_events_url": "https://api.github.com/users/gsamokovarov/received_events", "organizations_url": "https://api.github.com/users/gsamokovarov/orgs", "avatar_url": "https://1.gravatar.com/avatar/1ac5a00efa41cd58c421d3cd98dda7b9?d=https%3A%2F%2Fidenticons.github.com%2F7db396598dab824c7e0c5dc38557aa7d.png", "starred_url": "https://api.github.com/users/gsamokovarov/starred{/owner}{/repo}", "id": 604618, "followers_url": "https://api.github.com/users/gsamokovarov/followers", "type": "User"}, "created_at": "2013-06-20T12:36:32Z", "id": 19749120, "owner": "rails"}
