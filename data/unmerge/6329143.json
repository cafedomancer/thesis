{"body": "Obviously the description in the security guides is not enough since ^$ are misused even in most of the ActiveModel tests. You even give an exploitable regexp as an example in http://edgeguides.rubyonrails.org/active_model_basics.html (which I fixed in my pull mind you)!\nSo if the problem is present even in core Rails then I don't think there's anything to think about.\n\nI thought we all agreed that this problem is big enough to deserve a place in Rails. We have seen this exploited on Github, Soundcloud, Tumblr, your own docs, your own tests, even veteran Rails developers make this mistake. Yes I always said this only partially solves the problem BUT it is the best solution I've seen, because it does cover the vast majority of vulnerabilities and at the same time the effect on proper code is negligible, even more so because proper code usually does not need to use ^$ in format validation (it really is a corner case). And even if you have this corner case you just get a warning that goes away by adding one simple option to your validator.\nThere is no way of completely solving this without changing the Ruby language defaults and breaking loads of existing code, which wouldn't make sense because this is how behavior for RegExp is defined in Ruby and I doubt this will change, nor is there a real reason to change it.\nAnd again I will reiterate, the vast majority of related vulnerabilities come when a bad regexp is used with validates_format_of, and in the vast majority of cases using ^$ in validates_format_of is wrong so this change affects almost no one who already has proper code. The ^$ are mostly useful with gsub and extracting subpatterns, not for validation.\n\nI mean think about it, when did you need a validation that accepts multiline input and only needs 1 of the lines to match the RegExp to be valid? Never? With that in mind it would not be such a stretch anymore to say it's actually a vulnerability or at least poor behavior and not just an educational problem. Using ^$ in format validators is a corner case and should be treated as such. If you need validation like that you are doing something really weird and there's probably a better way to do it without requiring validation like that.", "url": "https://api.github.com/repos/rails/rails/issues/comments/6329143", "created_at": "2012-06-14T14:15:14Z", "html_url": "https://github.com/rails/rails/pull/6670#issuecomment-6329143", "updated_at": "2012-06-14T14:22:55Z", "repo": "rails", "issue_id": 6670, "user": {"following_url": "https://api.github.com/users/mrbrdo/following{/other_user}", "events_url": "https://api.github.com/users/mrbrdo/events{/privacy}", "organizations_url": "https://api.github.com/users/mrbrdo/orgs", "url": "https://api.github.com/users/mrbrdo", "gists_url": "https://api.github.com/users/mrbrdo/gists{/gist_id}", "html_url": "https://github.com/mrbrdo", "subscriptions_url": "https://api.github.com/users/mrbrdo/subscriptions", "avatar_url": "https://1.gravatar.com/avatar/eda6e2638857d20ae499d26432e1a221?d=https%3A%2F%2Fidenticons.github.com%2Fa767c168a69e9b80282f6d93b32fbb05.png", "repos_url": "https://api.github.com/users/mrbrdo/repos", "received_events_url": "https://api.github.com/users/mrbrdo/received_events", "gravatar_id": "eda6e2638857d20ae499d26432e1a221", "starred_url": "https://api.github.com/users/mrbrdo/starred{/owner}{/repo}", "login": "mrbrdo", "type": "User", "id": 167990, "followers_url": "https://api.github.com/users/mrbrdo/followers"}, "owner": "rails", "_id": {"$oid": "52380581bd3543c15100c784"}, "id": 6329143, "issue_url": "https://api.github.com/repos/rails/rails/issues/6670"}
