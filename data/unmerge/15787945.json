{"body": "I've talked with @jeremy about this issue and it seems like it doesn't really make sense to add a ``uniq`` check on insertion of records because of the possibility of race conditions. For example, the ``validates_uniqueness_of`` method http://api.rubyonrails.org/classes/ActiveRecord/Validations/ClassMethods.html falls prey to race conditions, and adding a uniqueness check on insertion doesn't necessarily provide guarantees. \r\n\r\nThe best way to get around this is to just use a uniqueness index in the join table itself. For example, something like:\r\n```ruby\r\nadd_index :table_name, :column_name, :unique => true\r\n```", "url": "https://api.github.com/repos/rails/rails/issues/comments/15787945", "created_at": "2013-04-02T16:54:18Z", "html_url": "https://github.com/rails/rails/pull/10047#issuecomment-15787945", "updated_at": "2013-04-02T16:54:29Z", "repo": "rails", "issue_id": 10047, "user": {"following_url": "https://api.github.com/users/wangjohn/following{/other_user}", "events_url": "https://api.github.com/users/wangjohn/events{/privacy}", "organizations_url": "https://api.github.com/users/wangjohn/orgs", "url": "https://api.github.com/users/wangjohn", "gists_url": "https://api.github.com/users/wangjohn/gists{/gist_id}", "html_url": "https://github.com/wangjohn", "subscriptions_url": "https://api.github.com/users/wangjohn/subscriptions", "avatar_url": "https://2.gravatar.com/avatar/ddbca6015f428461aa5ed3b5f0fb74ab?d=https%3A%2F%2Fidenticons.github.com%2F0f072cda8c91e247b8dd76fa1b10a64e.png", "repos_url": "https://api.github.com/users/wangjohn/repos", "received_events_url": "https://api.github.com/users/wangjohn/received_events", "gravatar_id": "ddbca6015f428461aa5ed3b5f0fb74ab", "starred_url": "https://api.github.com/users/wangjohn/starred{/owner}{/repo}", "login": "wangjohn", "type": "User", "id": 1075780, "followers_url": "https://api.github.com/users/wangjohn/followers"}, "owner": "rails", "_id": {"$oid": "5237e397bd3543c151009168"}, "id": 15787945, "issue_url": "https://api.github.com/repos/rails/rails/issues/10047"}
