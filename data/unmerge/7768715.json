{"updated_at": "2012-08-15T20:53:40Z", "repo": "rails", "created_at": "2012-08-15T20:47:09Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/7768715", "id": 7768715, "issue_url": "https://api.github.com/repos/rails/rails/issues/7280", "issue_id": 7280, "user": {"repos_url": "https://api.github.com/users/marcandre/repos", "type": "User", "html_url": "https://github.com/marcandre", "starred_url": "https://api.github.com/users/marcandre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcandre/subscriptions", "following_url": "https://api.github.com/users/marcandre/following{/other_user}", "gravatar_id": "b06d8e26b92456b228d3c77b66397534", "organizations_url": "https://api.github.com/users/marcandre/orgs", "url": "https://api.github.com/users/marcandre", "gists_url": "https://api.github.com/users/marcandre/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/b06d8e26b92456b228d3c77b66397534?d=https%3A%2F%2Fidenticons.github.com%2F8b48ea597d2862688e4aa8a2b28651a3.png", "id": 33770, "events_url": "https://api.github.com/users/marcandre/events{/privacy}", "login": "marcandre", "received_events_url": "https://api.github.com/users/marcandre/received_events", "followers_url": "https://api.github.com/users/marcandre/followers"}, "body": "> Is this a feature to create reversible `drop_table`\n\nYes. And a reversible `remove_column` and `remove_index`.\n\nI understand that you are suggesting an approach where these commands would accept extra arguments & a block to be reversible. \n\n`drop_table` could accept and ignore an extra options parameter and would also ignore a block and `remove_index` could be modified to have the same api as `add_index`.\n\nFor `remove_column` there is a conflict, though, as it accepts multiple column names. But there is `remove_columns` too, so that could be an acceptable incompatibility, especially for 4.0.\n\nNote: There is no `drop_join_table`, so `revert` makes it easy to reverse `create_join_table`, but clearly `drop_join_table` could be added and would be reversible. \n\nThe plusses I see with `revert` are:\n* quicker to revert a bunch of changes:\n  * just wrap with `revert{}` instead of modifying every `create_table` with `drop_table` and `add_column` with `remove_column`\n  * the order is taken care of for you, no need to inverse the order of the lines.\n* easy to revert a whole migration (in your example `revert Migration1` would do it)\n* `drop_table :users do ... all fields here ... end` may be a bit counterintuitive?\n\nWe could have both approaches: add `revert` **and** change the methods to be invertible. Maybe that would be best, anyone would have the choice of writing what they want.", "_id": {"$oid": "5237fd99bd3543c15100bb77"}, "html_url": "https://github.com/rails/rails/pull/7280#issuecomment-7768715"}
