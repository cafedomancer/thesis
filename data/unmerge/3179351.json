{"body": "> The issue here is that your application doesn't rely on completeness being guaranteed for PUT across the web; it's an over-specification of HTTP. If your application does need full PUT (many do), then design and document it that way. I agree it's a good idea to try and make this behaviour easier to achieve in rails.\r\n\r\nActually, my application does rely on it being the complete resource.  That's how it implements PIT as create or update.  It wouldn't be able to implement create if it allowed partial resources.\r\n\r\n> Given we now have a lot of mobile clients with unreliable connectivity - allowing them by default to submit small, partial updates idempotently is a huge benefit. Neither POST or PATCH would allow this since they are non-idempotent.\r\n\r\nThe spec does not mandate that POST or PATCH be idempotent--but it doesn't say they can't be.  I think it makes sense to implement the partial update as an idempotent POST or PATCH and simply document that it is idempotent (even though the HTTP verb used does not require it).\r\n\r\nAlso, while it's possible to implement some kinds of partial updates idempotently, it's not universally true that ALL partial updates are idempotent.  Consider the common case of using `accepts_nested_attributes_for` for a `has_many` association.  When an update comes in that is adding new associated records, it is not idempotent, because each time the update runs it will add additional records.", "url": "https://api.github.com/repos/rails/rails/issues/comments/3179351", "created_at": "2011-12-16T16:37:42Z", "html_url": "https://github.com/rails/rails/pull/505#issuecomment-3179351", "updated_at": "2011-12-16T16:37:42Z", "repo": "rails", "issue_id": 505, "user": {"following_url": "https://api.github.com/users/myronmarston/following{/other_user}", "events_url": "https://api.github.com/users/myronmarston/events{/privacy}", "organizations_url": "https://api.github.com/users/myronmarston/orgs", "url": "https://api.github.com/users/myronmarston", "gists_url": "https://api.github.com/users/myronmarston/gists{/gist_id}", "html_url": "https://github.com/myronmarston", "subscriptions_url": "https://api.github.com/users/myronmarston/subscriptions", "avatar_url": "https://2.gravatar.com/avatar/42d4590355a1404230fbc9aff4dd377b?d=https%3A%2F%2Fidenticons.github.com%2F6916222172eb021e5d5f0043453078b9.png", "repos_url": "https://api.github.com/users/myronmarston/repos", "received_events_url": "https://api.github.com/users/myronmarston/received_events", "gravatar_id": "42d4590355a1404230fbc9aff4dd377b", "starred_url": "https://api.github.com/users/myronmarston/starred{/owner}{/repo}", "login": "myronmarston", "type": "User", "id": 49391, "followers_url": "https://api.github.com/users/myronmarston/followers"}, "owner": "rails", "_id": {"$oid": "52385f14bd3543c151012134"}, "id": 3179351, "issue_url": "https://api.github.com/repos/rails/rails/issues/505"}
