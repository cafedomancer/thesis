{"updated_at": "2011-12-19T18:35:37Z", "repo": "rails", "created_at": "2011-12-19T18:32:38Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/3207338", "id": 3207338, "issue_url": "https://api.github.com/repos/rails/rails/issues/4032", "issue_id": 4032, "user": {"repos_url": "https://api.github.com/users/knf/repos", "type": "User", "html_url": "https://github.com/knf", "starred_url": "https://api.github.com/users/knf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/knf/subscriptions", "following_url": "https://api.github.com/users/knf/following{/other_user}", "gravatar_id": "2fcbea51d73ded3c38c6ecde455b1497", "organizations_url": "https://api.github.com/users/knf/orgs", "url": "https://api.github.com/users/knf", "gists_url": "https://api.github.com/users/knf/gists{/gist_id}", "avatar_url": "https://1.gravatar.com/avatar/2fcbea51d73ded3c38c6ecde455b1497?d=https%3A%2F%2Fidenticons.github.com%2F5766a6f7677938b7f80de1cc5c02b261.png", "id": 1064091, "events_url": "https://api.github.com/users/knf/events{/privacy}", "login": "knf", "received_events_url": "https://api.github.com/users/knf/received_events", "followers_url": "https://api.github.com/users/knf/followers"}, "body": "Well my next thought was to create a class generator using the same pattern. I could add a file require statement in application.rb, something like: config.autoload_paths += Dir[\"#{config.root}/lib/**/\"]\r\n\r\nI could also combine module and class generators into one generator. eg. `rails generate file:class_name` or  `rails generate file:module_name`", "_id": {"$oid": "52382db9bd3543c15100f2e0"}, "html_url": "https://github.com/rails/rails/pull/4032#issuecomment-3207338"}
