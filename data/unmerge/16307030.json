{"updated_at": "2013-04-12T17:47:05Z", "repo": "rails", "created_at": "2013-04-12T17:47:05Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/16307030", "id": 16307030, "issue_url": "https://api.github.com/repos/rails/rails/issues/10193", "issue_id": 10193, "user": {"repos_url": "https://api.github.com/users/fxn/repos", "type": "User", "html_url": "https://github.com/fxn", "starred_url": "https://api.github.com/users/fxn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxn/subscriptions", "following_url": "https://api.github.com/users/fxn/following{/other_user}", "gravatar_id": "7223c62b7310e164eb79c740188abbda", "organizations_url": "https://api.github.com/users/fxn/orgs", "url": "https://api.github.com/users/fxn", "gists_url": "https://api.github.com/users/fxn/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/7223c62b7310e164eb79c740188abbda?d=https%3A%2F%2Fidenticons.github.com%2F4a11654ad1e1e48352252859ff3032a0.png", "id": 3387, "events_url": "https://api.github.com/users/fxn/events{/privacy}", "login": "fxn", "received_events_url": "https://api.github.com/users/fxn/received_events", "followers_url": "https://api.github.com/users/fxn/followers"}, "body": "Hi @hollanddd, thanks very much for your pull request.\r\n\r\nGenerally speaking, in Rails predicates return booleans whose exact value is undocumented. So, predicates are used this way\r\n\r\n```ruby\r\ndo_this if locking_enabled? # does not depend on the exact value being returned\r\n```\r\n\r\nSimilarly, predicates are tested this way\r\n\r\n```ruby\r\nassert foo.locked_enabled? # good\r\n```\r\n\r\nrather than\r\n\r\n```ruby\r\nassert_equal true, foo.locked_enabled? # wrong\r\n```\r\n\r\nThe boolean interpretation is all that matters, and since you do not commit to a particular value in your contract/documentation, there is no particular value to test, only its boolean meaning. That's why you have to use a bare `assert`.\r\n\r\nThis has been extensively discussed in the past, but since this is your first contribution I am sure you were not aware of it and I am glad to explain the rationale here.\r\n\r\nThanks anyway!", "_id": {"$oid": "5237e261bd3543c151009018"}, "html_url": "https://github.com/rails/rails/pull/10193#issuecomment-16307030"}
