{"updated_at": "2013-03-03T16:41:15Z", "repo": "rails", "created_at": "2013-03-03T16:40:58Z", "owner": "rails", "url": "https://api.github.com/repos/rails/rails/issues/comments/14349817", "id": 14349817, "issue_url": "https://api.github.com/repos/rails/rails/issues/9503", "issue_id": 9503, "user": {"repos_url": "https://api.github.com/users/wangjohn/repos", "type": "User", "html_url": "https://github.com/wangjohn", "starred_url": "https://api.github.com/users/wangjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangjohn/subscriptions", "following_url": "https://api.github.com/users/wangjohn/following{/other_user}", "gravatar_id": "ddbca6015f428461aa5ed3b5f0fb74ab", "organizations_url": "https://api.github.com/users/wangjohn/orgs", "url": "https://api.github.com/users/wangjohn", "gists_url": "https://api.github.com/users/wangjohn/gists{/gist_id}", "avatar_url": "https://0.gravatar.com/avatar/ddbca6015f428461aa5ed3b5f0fb74ab?d=https%3A%2F%2Fidenticons.github.com%2F0f072cda8c91e247b8dd76fa1b10a64e.png", "id": 1075780, "events_url": "https://api.github.com/users/wangjohn/events{/privacy}", "login": "wangjohn", "received_events_url": "https://api.github.com/users/wangjohn/received_events", "followers_url": "https://api.github.com/users/wangjohn/followers"}, "body": "@steveklabnik Then it seems like this PR doesn't really hold a lot of ground. The other possibility is to hold an in-memory table of the last time the database was updated for a particular AR object. Each AR object would hold a reference to it (so they could still be garbage collected).\r\n\r\nWhenever a user calls a method on an AR object, it first checks the table to see if the database has been updated without it knowing. If so, it will make a DB call, otherwise, it will go along normally.\r\n\r\nThis will probably take a lot of implementation though.", "_id": {"$oid": "5237e8bfbd3543c15100975f"}, "html_url": "https://github.com/rails/rails/pull/9503#issuecomment-14349817"}
